/// [Scanner]es6.grammar:
SyntaxKind[LineTerminatorToken](2,1): «line terminator»
SyntaxKind[LineTerminatorToken](3,1): «line terminator»
SyntaxKind[Identifier](3,16): SourceCharacter
SyntaxKind[ColonColonToken](3,19): ::
SyntaxKind[LineTerminatorToken](4,2): «line terminator»
SyntaxKind[IndentToken](4,2): «indent»
SyntaxKind[Prose](4,26): > any Unicode code point
SyntaxKind[LineTerminatorToken](5,1): «line terminator»
SyntaxKind[DedentToken](5,1): «dedent»
SyntaxKind[LineTerminatorToken](6,1): «line terminator»
SyntaxKind[Identifier](6,16): InputElementDiv
SyntaxKind[ColonColonToken](6,19): ::
SyntaxKind[LineTerminatorToken](7,2): «line terminator»
SyntaxKind[IndentToken](7,2): «indent»
SyntaxKind[Identifier](7,12): WhiteSpace
SyntaxKind[LineTerminatorToken](8,2): «line terminator»
SyntaxKind[Identifier](8,16): LineTerminator
SyntaxKind[LineTerminatorToken](9,2): «line terminator»
SyntaxKind[Identifier](9,9): Comment
SyntaxKind[LineTerminatorToken](10,2): «line terminator»
SyntaxKind[Identifier](10,13): CommonToken
SyntaxKind[LineTerminatorToken](11,2): «line terminator»
SyntaxKind[Identifier](11,15): DivPunctuator
SyntaxKind[LineTerminatorToken](12,2): «line terminator»
SyntaxKind[Identifier](12,22): RightBracePunctuator
SyntaxKind[LineTerminatorToken](13,1): «line terminator»
SyntaxKind[DedentToken](13,1): «dedent»
SyntaxKind[LineTerminatorToken](14,1): «line terminator»
SyntaxKind[Identifier](14,19): InputElementRegExp
SyntaxKind[ColonColonToken](14,22): ::
SyntaxKind[LineTerminatorToken](15,2): «line terminator»
SyntaxKind[IndentToken](15,2): «indent»
SyntaxKind[Identifier](15,12): WhiteSpace
SyntaxKind[LineTerminatorToken](16,2): «line terminator»
SyntaxKind[Identifier](16,16): LineTerminator
SyntaxKind[LineTerminatorToken](17,2): «line terminator»
SyntaxKind[Identifier](17,9): Comment
SyntaxKind[LineTerminatorToken](18,2): «line terminator»
SyntaxKind[Identifier](18,13): CommonToken
SyntaxKind[LineTerminatorToken](19,2): «line terminator»
SyntaxKind[Identifier](19,22): RightBracePunctuator
SyntaxKind[LineTerminatorToken](20,2): «line terminator»
SyntaxKind[Identifier](20,26): RegularExpressionLiteral
SyntaxKind[LineTerminatorToken](21,1): «line terminator»
SyntaxKind[DedentToken](21,1): «dedent»
SyntaxKind[LineTerminatorToken](22,1): «line terminator»
SyntaxKind[Identifier](22,33): InputElementRegExpOrTemplateTail
SyntaxKind[ColonColonToken](22,36): ::
SyntaxKind[LineTerminatorToken](23,2): «line terminator»
SyntaxKind[IndentToken](23,2): «indent»
SyntaxKind[Identifier](23,12): WhiteSpace
SyntaxKind[LineTerminatorToken](24,2): «line terminator»
SyntaxKind[Identifier](24,16): LineTerminator
SyntaxKind[LineTerminatorToken](25,2): «line terminator»
SyntaxKind[Identifier](25,9): Comment
SyntaxKind[LineTerminatorToken](26,2): «line terminator»
SyntaxKind[Identifier](26,13): CommonToken
SyntaxKind[LineTerminatorToken](27,2): «line terminator»
SyntaxKind[Identifier](27,26): RegularExpressionLiteral
SyntaxKind[LineTerminatorToken](28,2): «line terminator»
SyntaxKind[Identifier](28,26): TemplateSubstitutionTail
SyntaxKind[LineTerminatorToken](29,1): «line terminator»
SyntaxKind[DedentToken](29,1): «dedent»
SyntaxKind[LineTerminatorToken](30,1): «line terminator»
SyntaxKind[Identifier](30,25): InputElementTemplateTail
SyntaxKind[ColonColonToken](30,28): ::
SyntaxKind[LineTerminatorToken](31,2): «line terminator»
SyntaxKind[IndentToken](31,2): «indent»
SyntaxKind[Identifier](31,12): WhiteSpace
SyntaxKind[LineTerminatorToken](32,2): «line terminator»
SyntaxKind[Identifier](32,16): LineTerminator
SyntaxKind[LineTerminatorToken](33,2): «line terminator»
SyntaxKind[Identifier](33,9): Comment
SyntaxKind[LineTerminatorToken](34,2): «line terminator»
SyntaxKind[Identifier](34,13): CommonToken
SyntaxKind[LineTerminatorToken](35,2): «line terminator»
SyntaxKind[Identifier](35,15): DivPunctuator
SyntaxKind[LineTerminatorToken](36,2): «line terminator»
SyntaxKind[Identifier](36,26): TemplateSubstitutionTail
SyntaxKind[LineTerminatorToken](37,1): «line terminator»
SyntaxKind[DedentToken](37,1): «dedent»
SyntaxKind[LineTerminatorToken](38,1): «line terminator»
SyntaxKind[Identifier](38,11): WhiteSpace
SyntaxKind[ColonColonToken](38,14): ::
SyntaxKind[LineTerminatorToken](39,2): «line terminator»
SyntaxKind[IndentToken](39,2): «indent»
SyntaxKind[UnicodeCharacterLiteral](39,7): <TAB>
SyntaxKind[LineTerminatorToken](40,2): «line terminator»
SyntaxKind[UnicodeCharacterLiteral](40,6): <VT>
SyntaxKind[LineTerminatorToken](41,2): «line terminator»
SyntaxKind[UnicodeCharacterLiteral](41,6): <FF>
SyntaxKind[LineTerminatorToken](42,2): «line terminator»
SyntaxKind[UnicodeCharacterLiteral](42,6): <SP>
SyntaxKind[LineTerminatorToken](43,2): «line terminator»
SyntaxKind[UnicodeCharacterLiteral](43,8): <NBSP>
SyntaxKind[LineTerminatorToken](44,2): «line terminator»
SyntaxKind[UnicodeCharacterLiteral](44,10): <ZWNBSP>
SyntaxKind[LineTerminatorToken](45,2): «line terminator»
SyntaxKind[UnicodeCharacterLiteral](45,7): <USP>
SyntaxKind[LineTerminatorToken](46,1): «line terminator»
SyntaxKind[DedentToken](46,1): «dedent»
SyntaxKind[LineTerminatorToken](47,1): «line terminator»
SyntaxKind[Identifier](47,15): LineTerminator
SyntaxKind[ColonColonToken](47,18): ::
SyntaxKind[LineTerminatorToken](48,2): «line terminator»
SyntaxKind[IndentToken](48,2): «indent»
SyntaxKind[UnicodeCharacterLiteral](48,6): <LF>
SyntaxKind[LineTerminatorToken](49,2): «line terminator»
SyntaxKind[UnicodeCharacterLiteral](49,6): <CR>
SyntaxKind[LineTerminatorToken](50,2): «line terminator»
SyntaxKind[UnicodeCharacterLiteral](50,6): <LS>
SyntaxKind[LineTerminatorToken](51,2): «line terminator»
SyntaxKind[UnicodeCharacterLiteral](51,6): <PS>
SyntaxKind[LineTerminatorToken](52,1): «line terminator»
SyntaxKind[DedentToken](52,1): «dedent»
SyntaxKind[LineTerminatorToken](53,1): «line terminator»
SyntaxKind[Identifier](53,23): LineTerminatorSequence
SyntaxKind[ColonColonToken](53,26): ::
SyntaxKind[LineTerminatorToken](54,2): «line terminator»
SyntaxKind[IndentToken](54,2): «indent»
SyntaxKind[UnicodeCharacterLiteral](54,6): <LF>
SyntaxKind[LineTerminatorToken](55,2): «line terminator»
SyntaxKind[UnicodeCharacterLiteral](55,6): <CR>
SyntaxKind[OpenBracketToken](55,8): [
SyntaxKind[LookaheadKeyword](55,17): lookahead
SyntaxKind[ExclamationEqualsToken](55,20): !=
SyntaxKind[UnicodeCharacterLiteral](55,25): <LF>
SyntaxKind[CloseBracketToken](55,26): ]
SyntaxKind[LineTerminatorToken](56,2): «line terminator»
SyntaxKind[UnicodeCharacterLiteral](56,6): <LS>
SyntaxKind[LineTerminatorToken](57,2): «line terminator»
SyntaxKind[UnicodeCharacterLiteral](57,6): <PS>
SyntaxKind[LineTerminatorToken](58,2): «line terminator»
SyntaxKind[UnicodeCharacterLiteral](58,6): <CR>
SyntaxKind[UnicodeCharacterLiteral](58,11): <LF>
SyntaxKind[LineTerminatorToken](59,1): «line terminator»
SyntaxKind[DedentToken](59,1): «dedent»
SyntaxKind[LineTerminatorToken](60,1): «line terminator»
SyntaxKind[Identifier](60,8): Comment
SyntaxKind[ColonColonToken](60,11): ::
SyntaxKind[LineTerminatorToken](61,2): «line terminator»
SyntaxKind[IndentToken](61,2): «indent»
SyntaxKind[Identifier](61,18): MultiLineComment
SyntaxKind[LineTerminatorToken](62,2): «line terminator»
SyntaxKind[Identifier](62,19): SingleLineComment
SyntaxKind[LineTerminatorToken](63,1): «line terminator»
SyntaxKind[DedentToken](63,1): «dedent»
SyntaxKind[LineTerminatorToken](64,1): «line terminator»
SyntaxKind[Identifier](64,17): MultiLineComment
SyntaxKind[ColonColonToken](64,20): ::
SyntaxKind[LineTerminatorToken](65,2): «line terminator»
SyntaxKind[IndentToken](65,2): «indent»
SyntaxKind[Terminal](65,6): `/*`
SyntaxKind[Identifier](65,28): MultiLineCommentChars
SyntaxKind[QuestionToken](65,29): ?
SyntaxKind[Terminal](65,34): `*/`
SyntaxKind[LineTerminatorToken](66,1): «line terminator»
SyntaxKind[DedentToken](66,1): «dedent»
SyntaxKind[LineTerminatorToken](67,1): «line terminator»
SyntaxKind[Identifier](67,22): MultiLineCommentChars
SyntaxKind[ColonColonToken](67,25): ::
SyntaxKind[LineTerminatorToken](68,2): «line terminator»
SyntaxKind[IndentToken](68,2): «indent»
SyntaxKind[Identifier](68,26): MultiLineNotAsteriskChar
SyntaxKind[Identifier](68,48): MultiLineCommentChars
SyntaxKind[QuestionToken](68,49): ?
SyntaxKind[LineTerminatorToken](69,2): «line terminator»
SyntaxKind[Terminal](69,5): `*`
SyntaxKind[Identifier](69,30): PostAsteriskCommentChars
SyntaxKind[QuestionToken](69,31): ?
SyntaxKind[LineTerminatorToken](70,1): «line terminator»
SyntaxKind[DedentToken](70,1): «dedent»
SyntaxKind[LineTerminatorToken](71,1): «line terminator»
SyntaxKind[Identifier](71,25): PostAsteriskCommentChars
SyntaxKind[ColonColonToken](71,28): ::
SyntaxKind[LineTerminatorToken](72,2): «line terminator»
SyntaxKind[IndentToken](72,2): «indent»
SyntaxKind[Identifier](72,40): MultiLineNotForwardSlashOrAsteriskChar
SyntaxKind[Identifier](72,62): MultiLineCommentChars
SyntaxKind[QuestionToken](72,63): ?
SyntaxKind[LineTerminatorToken](73,2): «line terminator»
SyntaxKind[Terminal](73,5): `*`
SyntaxKind[Identifier](73,30): PostAsteriskCommentChars
SyntaxKind[QuestionToken](73,31): ?
SyntaxKind[LineTerminatorToken](74,1): «line terminator»
SyntaxKind[DedentToken](74,1): «dedent»
SyntaxKind[LineTerminatorToken](75,1): «line terminator»
SyntaxKind[Identifier](75,25): MultiLineNotAsteriskChar
SyntaxKind[ColonColonToken](75,28): ::
SyntaxKind[LineTerminatorToken](76,2): «line terminator»
SyntaxKind[IndentToken](76,2): «indent»
SyntaxKind[Identifier](76,17): SourceCharacter
SyntaxKind[FirstKeyword](76,21): but
SyntaxKind[NotKeyword](76,25): not
SyntaxKind[Terminal](76,29): `*`
SyntaxKind[LineTerminatorToken](77,1): «line terminator»
SyntaxKind[DedentToken](77,1): «dedent»
SyntaxKind[LineTerminatorToken](78,1): «line terminator»
SyntaxKind[Identifier](78,39): MultiLineNotForwardSlashOrAsteriskChar
SyntaxKind[ColonColonToken](78,42): ::
SyntaxKind[LineTerminatorToken](79,2): «line terminator»
SyntaxKind[IndentToken](79,2): «indent»
SyntaxKind[Identifier](79,17): SourceCharacter
SyntaxKind[FirstKeyword](79,21): but
SyntaxKind[NotKeyword](79,25): not
SyntaxKind[OneKeyword](79,29): one
SyntaxKind[OfKeyword](79,32): of
SyntaxKind[Terminal](79,36): `/`
SyntaxKind[LastKeyword](79,39): or
SyntaxKind[Terminal](79,43): `*`
SyntaxKind[LineTerminatorToken](80,1): «line terminator»
SyntaxKind[DedentToken](80,1): «dedent»
SyntaxKind[LineTerminatorToken](81,1): «line terminator»
SyntaxKind[Identifier](81,18): SingleLineComment
SyntaxKind[ColonColonToken](81,21): ::
SyntaxKind[LineTerminatorToken](82,2): «line terminator»
SyntaxKind[IndentToken](82,2): «indent»
SyntaxKind[Terminal](82,6): `//`
SyntaxKind[Identifier](82,29): SingleLineCommentChars
SyntaxKind[QuestionToken](82,30): ?
SyntaxKind[LineTerminatorToken](83,1): «line terminator»
SyntaxKind[DedentToken](83,1): «dedent»
SyntaxKind[LineTerminatorToken](84,1): «line terminator»
SyntaxKind[Identifier](84,23): SingleLineCommentChars
SyntaxKind[ColonColonToken](84,26): ::
SyntaxKind[LineTerminatorToken](85,2): «line terminator»
SyntaxKind[IndentToken](85,2): «indent»
SyntaxKind[Identifier](85,23): SingleLineCommentChar
SyntaxKind[Identifier](85,46): SingleLineCommentChars
SyntaxKind[QuestionToken](85,47): ?
SyntaxKind[LineTerminatorToken](86,1): «line terminator»
SyntaxKind[DedentToken](86,1): «dedent»
SyntaxKind[LineTerminatorToken](87,1): «line terminator»
SyntaxKind[Identifier](87,22): SingleLineCommentChar
SyntaxKind[ColonColonToken](87,25): ::
SyntaxKind[LineTerminatorToken](88,2): «line terminator»
SyntaxKind[IndentToken](88,2): «indent»
SyntaxKind[Identifier](88,17): SourceCharacter
SyntaxKind[FirstKeyword](88,21): but
SyntaxKind[NotKeyword](88,25): not
SyntaxKind[Identifier](88,40): LineTerminator
SyntaxKind[LineTerminatorToken](89,1): «line terminator»
SyntaxKind[DedentToken](89,1): «dedent»
SyntaxKind[LineTerminatorToken](90,1): «line terminator»
SyntaxKind[Identifier](90,12): CommonToken
SyntaxKind[ColonColonToken](90,15): ::
SyntaxKind[LineTerminatorToken](91,2): «line terminator»
SyntaxKind[IndentToken](91,2): «indent»
SyntaxKind[Identifier](91,16): IdentifierName
SyntaxKind[LineTerminatorToken](92,2): «line terminator»
SyntaxKind[Identifier](92,12): Punctuator
SyntaxKind[LineTerminatorToken](93,2): «line terminator»
SyntaxKind[Identifier](93,16): NumericLiteral
SyntaxKind[LineTerminatorToken](94,2): «line terminator»
SyntaxKind[Identifier](94,15): StringLiteral
SyntaxKind[LineTerminatorToken](95,2): «line terminator»
SyntaxKind[Identifier](95,10): Template
SyntaxKind[LineTerminatorToken](96,1): «line terminator»
SyntaxKind[DedentToken](96,1): «dedent»
SyntaxKind[LineTerminatorToken](97,1): «line terminator»
SyntaxKind[Identifier](97,15): IdentifierName
SyntaxKind[ColonColonToken](97,18): ::
SyntaxKind[LineTerminatorToken](98,2): «line terminator»
SyntaxKind[IndentToken](98,2): «indent»
SyntaxKind[Identifier](98,17): IdentifierStart
SyntaxKind[LineTerminatorToken](99,2): «line terminator»
SyntaxKind[Identifier](99,16): IdentifierName
SyntaxKind[Identifier](99,31): IdentifierPart
SyntaxKind[LineTerminatorToken](100,1): «line terminator»
SyntaxKind[DedentToken](100,1): «dedent»
SyntaxKind[LineTerminatorToken](101,1): «line terminator»
SyntaxKind[Identifier](101,16): IdentifierStart
SyntaxKind[ColonColonToken](101,19): ::
SyntaxKind[LineTerminatorToken](102,2): «line terminator»
SyntaxKind[IndentToken](102,2): «indent»
SyntaxKind[Identifier](102,16): UnicodeIDStart
SyntaxKind[LineTerminatorToken](103,2): «line terminator»
SyntaxKind[Terminal](103,5): `$`
SyntaxKind[LineTerminatorToken](104,2): «line terminator»
SyntaxKind[Terminal](104,5): `_`
SyntaxKind[LineTerminatorToken](105,2): «line terminator»
SyntaxKind[Terminal](105,5): `\`
SyntaxKind[Identifier](105,27): UnicodeEscapeSequence
SyntaxKind[LineTerminatorToken](106,1): «line terminator»
SyntaxKind[DedentToken](106,1): «dedent»
SyntaxKind[LineTerminatorToken](107,1): «line terminator»
SyntaxKind[Identifier](107,15): IdentifierPart
SyntaxKind[ColonColonToken](107,18): ::
SyntaxKind[LineTerminatorToken](108,2): «line terminator»
SyntaxKind[IndentToken](108,2): «indent»
SyntaxKind[Identifier](108,19): UnicodeIDContinue
SyntaxKind[LineTerminatorToken](109,2): «line terminator»
SyntaxKind[Terminal](109,5): `$`
SyntaxKind[LineTerminatorToken](110,2): «line terminator»
SyntaxKind[Terminal](110,5): `_`
SyntaxKind[LineTerminatorToken](111,2): «line terminator»
SyntaxKind[Terminal](111,5): `\`
SyntaxKind[Identifier](111,27): UnicodeEscapeSequence
SyntaxKind[LineTerminatorToken](112,2): «line terminator»
SyntaxKind[UnicodeCharacterLiteral](112,8): <ZWNJ>
SyntaxKind[LineTerminatorToken](113,2): «line terminator»
SyntaxKind[UnicodeCharacterLiteral](113,7): <ZWJ>
SyntaxKind[LineTerminatorToken](114,2): «line terminator»
SyntaxKind[LineTerminatorToken](115,1): «line terminator»
SyntaxKind[DedentToken](115,1): «dedent»
SyntaxKind[Identifier](115,15): UnicodeIDStart
SyntaxKind[ColonColonToken](115,18): ::
SyntaxKind[LineTerminatorToken](116,2): «line terminator»
SyntaxKind[IndentToken](116,2): «indent»
SyntaxKind[Prose](116,83): > any Unicode code point with the Unicode property "ID_Start" or "Other_ID_Start"
SyntaxKind[LineTerminatorToken](117,1): «line terminator»
SyntaxKind[DedentToken](117,1): «dedent»
SyntaxKind[LineTerminatorToken](118,1): «line terminator»
SyntaxKind[Identifier](118,18): UnicodeIDContinue
SyntaxKind[ColonColonToken](118,21): ::
SyntaxKind[LineTerminatorToken](119,2): «line terminator»
SyntaxKind[IndentToken](119,2): «indent»
SyntaxKind[Prose](119,110): > any Unicode code point with the Unicode property "ID_Continue" or "Other_ID_Continue", or "Other_ID_Start"
SyntaxKind[LineTerminatorToken](120,1): «line terminator»
SyntaxKind[DedentToken](120,1): «dedent»
SyntaxKind[LineTerminatorToken](121,1): «line terminator»
SyntaxKind[Identifier](121,13): ReservedWord
SyntaxKind[ColonColonToken](121,16): ::
SyntaxKind[LineTerminatorToken](122,2): «line terminator»
SyntaxKind[IndentToken](122,2): «indent»
SyntaxKind[Identifier](122,9): Keyword
SyntaxKind[LineTerminatorToken](123,2): «line terminator»
SyntaxKind[Identifier](123,20): FutureReservedWord
SyntaxKind[LineTerminatorToken](124,2): «line terminator»
SyntaxKind[Identifier](124,13): NullLiteral
SyntaxKind[LineTerminatorToken](125,2): «line terminator»
SyntaxKind[Identifier](125,16): BooleanLiteral
SyntaxKind[LineTerminatorToken](126,1): «line terminator»
SyntaxKind[DedentToken](126,1): «dedent»
SyntaxKind[LineTerminatorToken](127,1): «line terminator»
SyntaxKind[Identifier](127,8): Keyword
SyntaxKind[ColonColonToken](127,11): ::
SyntaxKind[OneKeyword](127,15): one
SyntaxKind[OfKeyword](127,18): of
SyntaxKind[LineTerminatorToken](128,2): «line terminator»
SyntaxKind[IndentToken](128,2): «indent»
SyntaxKind[Terminal](128,9): `break`
SyntaxKind[Terminal](128,15): `do`
SyntaxKind[Terminal](128,21): `in`
SyntaxKind[Terminal](128,32): `typeof`
SyntaxKind[LineTerminatorToken](129,2): «line terminator»
SyntaxKind[Terminal](129,8): `case`
SyntaxKind[Terminal](129,16): `else`
SyntaxKind[Terminal](129,30): `instanceof`
SyntaxKind[Terminal](129,36): `var`
SyntaxKind[LineTerminatorToken](130,2): «line terminator»
SyntaxKind[Terminal](130,9): `catch`
SyntaxKind[Terminal](130,19): `export`
SyntaxKind[Terminal](130,25): `new`
SyntaxKind[Terminal](130,34): `void`
SyntaxKind[LineTerminatorToken](131,2): «line terminator»
SyntaxKind[Terminal](131,9): `class`
SyntaxKind[Terminal](131,20): `extends`
SyntaxKind[Terminal](131,29): `return`
SyntaxKind[Terminal](131,38): `while`
SyntaxKind[LineTerminatorToken](132,2): «line terminator»
SyntaxKind[Terminal](132,9): `const`
SyntaxKind[Terminal](132,20): `finally`
SyntaxKind[Terminal](132,28): `super`
SyntaxKind[Terminal](132,37): `with`
SyntaxKind[LineTerminatorToken](133,2): «line terminator»
SyntaxKind[Terminal](133,12): `continue`
SyntaxKind[Terminal](133,18): `for`
SyntaxKind[Terminal](133,28): `switch`
SyntaxKind[Terminal](133,37): `yield`
SyntaxKind[LineTerminatorToken](134,2): «line terminator»
SyntaxKind[Terminal](134,12): `debugger`
SyntaxKind[Terminal](134,23): `function`
SyntaxKind[Terminal](134,30): `this`
SyntaxKind[LineTerminatorToken](135,2): «line terminator»
SyntaxKind[Terminal](135,11): `default`
SyntaxKind[Terminal](135,16): `if`
SyntaxKind[Terminal](135,25): `throw`
SyntaxKind[LineTerminatorToken](136,2): «line terminator»
SyntaxKind[Terminal](136,10): `delete`
SyntaxKind[Terminal](136,19): `import`
SyntaxKind[Terminal](136,25): `try`
SyntaxKind[LineTerminatorToken](137,1): «line terminator»
SyntaxKind[DedentToken](137,1): «dedent»
SyntaxKind[LineTerminatorToken](138,1): «line terminator»
SyntaxKind[Identifier](138,19): FutureReservedWord
SyntaxKind[ColonColonToken](138,22): ::
SyntaxKind[OneKeyword](138,26): one
SyntaxKind[OfKeyword](138,29): of
SyntaxKind[LineTerminatorToken](139,2): «line terminator»
SyntaxKind[IndentToken](139,2): «indent»
SyntaxKind[Terminal](139,8): `enum`
SyntaxKind[LineTerminatorToken](140,2): «line terminator»
SyntaxKind[LineTerminatorToken](141,2): «line terminator»
SyntaxKind[Terminal](141,9): `await`
SyntaxKind[LineTerminatorToken](142,2): «line terminator»
SyntaxKind[LineTerminatorToken](143,2): «line terminator»
SyntaxKind[Terminal](143,14): `implements`
SyntaxKind[Terminal](143,24): `package`
SyntaxKind[Terminal](143,36): `protected`
SyntaxKind[LineTerminatorToken](144,2): «line terminator»
SyntaxKind[Terminal](144,13): `interface`
SyntaxKind[Terminal](144,24): `private`
SyntaxKind[Terminal](144,33): `public`
SyntaxKind[LineTerminatorToken](145,1): «line terminator»
SyntaxKind[DedentToken](145,1): «dedent»
SyntaxKind[LineTerminatorToken](146,1): «line terminator»
SyntaxKind[Identifier](146,11): Punctuator
SyntaxKind[ColonColonToken](146,14): ::
SyntaxKind[OneKeyword](146,18): one
SyntaxKind[OfKeyword](146,21): of
SyntaxKind[LineTerminatorToken](147,2): «line terminator»
SyntaxKind[IndentToken](147,2): «indent»
SyntaxKind[Terminal](147,5): `{`
SyntaxKind[Terminal](147,10): `}`
SyntaxKind[Terminal](147,15): `(`
SyntaxKind[Terminal](147,20): `)`
SyntaxKind[Terminal](147,25): `[`
SyntaxKind[Terminal](147,30): `]`
SyntaxKind[LineTerminatorToken](148,2): «line terminator»
SyntaxKind[Terminal](148,5): `.`
SyntaxKind[Terminal](148,10): `;`
SyntaxKind[Terminal](148,15): `,`
SyntaxKind[Terminal](148,20): `<`
SyntaxKind[Terminal](148,25): `>`
SyntaxKind[Terminal](148,31): `<=`
SyntaxKind[LineTerminatorToken](149,2): «line terminator»
SyntaxKind[Terminal](149,6): `>=`
SyntaxKind[Terminal](149,11): `==`
SyntaxKind[Terminal](149,16): `!=`
SyntaxKind[Terminal](149,22): `===`
SyntaxKind[Terminal](149,28): `!==`
SyntaxKind[LineTerminatorToken](150,2): «line terminator»
SyntaxKind[Terminal](150,5): `+`
SyntaxKind[Terminal](150,10): `-`
SyntaxKind[Terminal](150,15): `*`
SyntaxKind[Terminal](150,20): `%`
SyntaxKind[Terminal](150,26): `++`
SyntaxKind[Terminal](150,31): `--`
SyntaxKind[LineTerminatorToken](151,2): «line terminator»
SyntaxKind[Terminal](151,6): `<<`
SyntaxKind[Terminal](151,11): `>>`
SyntaxKind[Terminal](151,17): `>>>`
SyntaxKind[Terminal](151,21): `&`
SyntaxKind[Terminal](151,26): `|`
SyntaxKind[Terminal](151,31): `^`
SyntaxKind[LineTerminatorToken](152,2): «line terminator»
SyntaxKind[Terminal](152,5): `!`
SyntaxKind[Terminal](152,10): `~`
SyntaxKind[Terminal](152,16): `&&`
SyntaxKind[Terminal](152,21): `||`
SyntaxKind[Terminal](152,25): `?`
SyntaxKind[Terminal](152,32): ` ::`
SyntaxKind[LineTerminatorToken](153,2): «line terminator»
SyntaxKind[Terminal](153,5): `=`
SyntaxKind[Terminal](153,11): `+=`
SyntaxKind[Terminal](153,16): `-=`
SyntaxKind[Terminal](153,21): `*=`
SyntaxKind[Terminal](153,26): `%=`
SyntaxKind[Terminal](153,32): `<<=`
SyntaxKind[LineTerminatorToken](154,2): «line terminator»
SyntaxKind[Terminal](154,7): `>>=`
SyntaxKind[Terminal](154,14): `>>>=`
SyntaxKind[Terminal](154,19): `&=`
SyntaxKind[Terminal](154,24): `|=`
SyntaxKind[Terminal](154,29): `^=`
SyntaxKind[Terminal](154,34): `=>`
SyntaxKind[LineTerminatorToken](155,1): «line terminator»
SyntaxKind[DedentToken](155,1): «dedent»
SyntaxKind[LineTerminatorToken](156,1): «line terminator»
SyntaxKind[Identifier](156,14): DivPunctuator
SyntaxKind[ColonColonToken](156,17): ::
SyntaxKind[OneKeyword](156,21): one
SyntaxKind[OfKeyword](156,24): of
SyntaxKind[LineTerminatorToken](157,2): «line terminator»
SyntaxKind[IndentToken](157,2): «indent»
SyntaxKind[Terminal](157,5): `/`
SyntaxKind[Terminal](157,11): `/=`
SyntaxKind[LineTerminatorToken](158,1): «line terminator»
SyntaxKind[DedentToken](158,1): «dedent»
SyntaxKind[LineTerminatorToken](159,1): «line terminator»
SyntaxKind[Identifier](159,21): RightBracePunctuator
SyntaxKind[ColonColonToken](159,24): ::
SyntaxKind[OneKeyword](159,28): one
SyntaxKind[OfKeyword](159,31): of
SyntaxKind[LineTerminatorToken](160,2): «line terminator»
SyntaxKind[IndentToken](160,2): «indent»
SyntaxKind[Terminal](160,5): `)`
SyntaxKind[LineTerminatorToken](161,1): «line terminator»
SyntaxKind[DedentToken](161,1): «dedent»
SyntaxKind[LineTerminatorToken](162,1): «line terminator»
SyntaxKind[Identifier](162,12): NullLiteral
SyntaxKind[ColonColonToken](162,15): ::
SyntaxKind[LineTerminatorToken](163,2): «line terminator»
SyntaxKind[IndentToken](163,2): «indent»
SyntaxKind[Terminal](163,8): `null`
SyntaxKind[LineTerminatorToken](164,1): «line terminator»
SyntaxKind[DedentToken](164,1): «dedent»
SyntaxKind[LineTerminatorToken](165,1): «line terminator»
SyntaxKind[Identifier](165,15): BooleanLiteral
SyntaxKind[ColonColonToken](165,18): ::
SyntaxKind[LineTerminatorToken](166,2): «line terminator»
SyntaxKind[IndentToken](166,2): «indent»
SyntaxKind[Terminal](166,8): `true`
SyntaxKind[LineTerminatorToken](167,2): «line terminator»
SyntaxKind[Terminal](167,9): `false`
SyntaxKind[LineTerminatorToken](168,1): «line terminator»
SyntaxKind[DedentToken](168,1): «dedent»
SyntaxKind[LineTerminatorToken](169,1): «line terminator»
SyntaxKind[Identifier](169,15): NumericLiteral
SyntaxKind[ColonColonToken](169,18): ::
SyntaxKind[LineTerminatorToken](170,2): «line terminator»
SyntaxKind[IndentToken](170,2): «indent»
SyntaxKind[Identifier](170,16): DecimalLiteral
SyntaxKind[LineTerminatorToken](171,2): «line terminator»
SyntaxKind[Identifier](171,22): BinaryIntegerLiteral
SyntaxKind[LineTerminatorToken](172,2): «line terminator»
SyntaxKind[Identifier](172,21): OctalIntegerLiteral
SyntaxKind[LineTerminatorToken](173,2): «line terminator»
SyntaxKind[Identifier](173,19): HexIntegerLiteral
SyntaxKind[LineTerminatorToken](174,1): «line terminator»
SyntaxKind[DedentToken](174,1): «dedent»
SyntaxKind[LineTerminatorToken](175,1): «line terminator»
SyntaxKind[Identifier](175,15): DecimalLiteral
SyntaxKind[ColonColonToken](175,18): ::
SyntaxKind[LineTerminatorToken](176,2): «line terminator»
SyntaxKind[IndentToken](176,2): «indent»
SyntaxKind[Identifier](176,23): DecimalIntegerLiteral
SyntaxKind[Terminal](176,27): `.`
SyntaxKind[Identifier](176,41): DecimalDigits
SyntaxKind[QuestionToken](176,42): ?
SyntaxKind[Identifier](176,55): ExponentPart
SyntaxKind[QuestionToken](176,56): ?
SyntaxKind[LineTerminatorToken](177,2): «line terminator»
SyntaxKind[Terminal](177,5): `.`
SyntaxKind[Identifier](177,19): DecimalDigits
SyntaxKind[Identifier](177,32): ExponentPart
SyntaxKind[QuestionToken](177,33): ?
SyntaxKind[LineTerminatorToken](178,2): «line terminator»
SyntaxKind[Identifier](178,23): DecimalIntegerLiteral
SyntaxKind[Identifier](178,36): ExponentPart
SyntaxKind[QuestionToken](178,37): ?
SyntaxKind[LineTerminatorToken](179,1): «line terminator»
SyntaxKind[DedentToken](179,1): «dedent»
SyntaxKind[LineTerminatorToken](180,1): «line terminator»
SyntaxKind[Identifier](180,22): DecimalIntegerLiteral
SyntaxKind[ColonColonToken](180,25): ::
SyntaxKind[LineTerminatorToken](181,2): «line terminator»
SyntaxKind[IndentToken](181,2): «indent»
SyntaxKind[Terminal](181,5): `0`
SyntaxKind[LineTerminatorToken](182,2): «line terminator»
SyntaxKind[Identifier](182,14): NonZeroDigit
SyntaxKind[Identifier](182,28): DecimalDigits
SyntaxKind[QuestionToken](182,29): ?
SyntaxKind[LineTerminatorToken](183,1): «line terminator»
SyntaxKind[DedentToken](183,1): «dedent»
SyntaxKind[LineTerminatorToken](184,1): «line terminator»
SyntaxKind[Identifier](184,14): DecimalDigits
SyntaxKind[ColonColonToken](184,17): ::
SyntaxKind[LineTerminatorToken](185,2): «line terminator»
SyntaxKind[IndentToken](185,2): «indent»
SyntaxKind[Identifier](185,14): DecimalDigit
SyntaxKind[LineTerminatorToken](186,2): «line terminator»
SyntaxKind[Identifier](186,15): DecimalDigits
SyntaxKind[Identifier](186,28): DecimalDigit
SyntaxKind[LineTerminatorToken](187,1): «line terminator»
SyntaxKind[DedentToken](187,1): «dedent»
SyntaxKind[LineTerminatorToken](188,1): «line terminator»
SyntaxKind[Identifier](188,13): DecimalDigit
SyntaxKind[ColonColonToken](188,16): ::
SyntaxKind[OneKeyword](188,20): one
SyntaxKind[OfKeyword](188,23): of
SyntaxKind[LineTerminatorToken](189,2): «line terminator»
SyntaxKind[IndentToken](189,2): «indent»
SyntaxKind[Terminal](189,5): `0`
SyntaxKind[Terminal](189,9): `1`
SyntaxKind[Terminal](189,13): `2`
SyntaxKind[Terminal](189,17): `3`
SyntaxKind[Terminal](189,21): `4`
SyntaxKind[Terminal](189,25): `5`
SyntaxKind[Terminal](189,29): `6`
SyntaxKind[Terminal](189,33): `7`
SyntaxKind[Terminal](189,37): `8`
SyntaxKind[Terminal](189,41): `9`
SyntaxKind[LineTerminatorToken](190,1): «line terminator»
SyntaxKind[DedentToken](190,1): «dedent»
SyntaxKind[LineTerminatorToken](191,1): «line terminator»
SyntaxKind[Identifier](191,13): NonZeroDigit
SyntaxKind[ColonColonToken](191,16): ::
SyntaxKind[OneKeyword](191,20): one
SyntaxKind[OfKeyword](191,23): of
SyntaxKind[LineTerminatorToken](192,2): «line terminator»
SyntaxKind[IndentToken](192,2): «indent»
SyntaxKind[Terminal](192,5): `1`
SyntaxKind[Terminal](192,9): `2`
SyntaxKind[Terminal](192,13): `3`
SyntaxKind[Terminal](192,17): `4`
SyntaxKind[Terminal](192,21): `5`
SyntaxKind[Terminal](192,25): `6`
SyntaxKind[Terminal](192,29): `7`
SyntaxKind[Terminal](192,33): `8`
SyntaxKind[Terminal](192,37): `9`
SyntaxKind[LineTerminatorToken](193,1): «line terminator»
SyntaxKind[DedentToken](193,1): «dedent»
SyntaxKind[LineTerminatorToken](194,1): «line terminator»
SyntaxKind[Identifier](194,13): ExponentPart
SyntaxKind[ColonColonToken](194,16): ::
SyntaxKind[LineTerminatorToken](195,2): «line terminator»
SyntaxKind[IndentToken](195,2): «indent»
SyntaxKind[Identifier](195,19): ExponentIndicator
SyntaxKind[Identifier](195,33): SignedInteger
SyntaxKind[LineTerminatorToken](196,1): «line terminator»
SyntaxKind[DedentToken](196,1): «dedent»
SyntaxKind[LineTerminatorToken](197,1): «line terminator»
SyntaxKind[Identifier](197,18): ExponentIndicator
SyntaxKind[ColonColonToken](197,21): ::
SyntaxKind[OneKeyword](197,25): one
SyntaxKind[OfKeyword](197,28): of
SyntaxKind[LineTerminatorToken](198,2): «line terminator»
SyntaxKind[IndentToken](198,2): «indent»
SyntaxKind[Terminal](198,5): `e`
SyntaxKind[Terminal](198,9): `E`
SyntaxKind[LineTerminatorToken](199,1): «line terminator»
SyntaxKind[DedentToken](199,1): «dedent»
SyntaxKind[LineTerminatorToken](200,1): «line terminator»
SyntaxKind[Identifier](200,14): SignedInteger
SyntaxKind[ColonColonToken](200,17): ::
SyntaxKind[LineTerminatorToken](201,2): «line terminator»
SyntaxKind[IndentToken](201,2): «indent»
SyntaxKind[Identifier](201,15): DecimalDigits
SyntaxKind[LineTerminatorToken](202,2): «line terminator»
SyntaxKind[Terminal](202,5): `+`
SyntaxKind[Identifier](202,19): DecimalDigits
SyntaxKind[LineTerminatorToken](203,2): «line terminator»
SyntaxKind[Terminal](203,5): `-`
SyntaxKind[Identifier](203,19): DecimalDigits
SyntaxKind[LineTerminatorToken](204,1): «line terminator»
SyntaxKind[DedentToken](204,1): «dedent»
SyntaxKind[LineTerminatorToken](205,1): «line terminator»
SyntaxKind[Identifier](205,21): BinaryIntegerLiteral
SyntaxKind[ColonColonToken](205,24): ::
SyntaxKind[LineTerminatorToken](206,2): «line terminator»
SyntaxKind[IndentToken](206,2): «indent»
SyntaxKind[Terminal](206,6): `0b`
SyntaxKind[Identifier](206,19): BinaryDigits
SyntaxKind[LineTerminatorToken](207,2): «line terminator»
SyntaxKind[Terminal](207,6): `0B`
SyntaxKind[Identifier](207,19): BinaryDigits
SyntaxKind[LineTerminatorToken](208,1): «line terminator»
SyntaxKind[DedentToken](208,1): «dedent»
SyntaxKind[LineTerminatorToken](209,1): «line terminator»
SyntaxKind[Identifier](209,13): BinaryDigits
SyntaxKind[ColonColonToken](209,16): ::
SyntaxKind[LineTerminatorToken](210,2): «line terminator»
SyntaxKind[IndentToken](210,2): «indent»
SyntaxKind[Identifier](210,13): BinaryDigit
SyntaxKind[LineTerminatorToken](211,2): «line terminator»
SyntaxKind[Identifier](211,14): BinaryDigits
SyntaxKind[Identifier](211,26): BinaryDigit
SyntaxKind[LineTerminatorToken](212,1): «line terminator»
SyntaxKind[DedentToken](212,1): «dedent»
SyntaxKind[LineTerminatorToken](213,1): «line terminator»
SyntaxKind[Identifier](213,12): BinaryDigit
SyntaxKind[ColonColonToken](213,15): ::
SyntaxKind[OneKeyword](213,19): one
SyntaxKind[OfKeyword](213,22): of
SyntaxKind[LineTerminatorToken](214,2): «line terminator»
SyntaxKind[IndentToken](214,2): «indent»
SyntaxKind[Terminal](214,5): `0`
SyntaxKind[Terminal](214,9): `1`
SyntaxKind[LineTerminatorToken](215,1): «line terminator»
SyntaxKind[DedentToken](215,1): «dedent»
SyntaxKind[LineTerminatorToken](216,1): «line terminator»
SyntaxKind[Identifier](216,20): OctalIntegerLiteral
SyntaxKind[ColonColonToken](216,23): ::
SyntaxKind[LineTerminatorToken](217,2): «line terminator»
SyntaxKind[IndentToken](217,2): «indent»
SyntaxKind[Terminal](217,6): `0o`
SyntaxKind[Identifier](217,18): OctalDigits
SyntaxKind[LineTerminatorToken](218,2): «line terminator»
SyntaxKind[Terminal](218,6): `0O`
SyntaxKind[Identifier](218,18): OctalDigits
SyntaxKind[LineTerminatorToken](219,1): «line terminator»
SyntaxKind[DedentToken](219,1): «dedent»
SyntaxKind[LineTerminatorToken](220,1): «line terminator»
SyntaxKind[Identifier](220,12): OctalDigits
SyntaxKind[ColonColonToken](220,15): ::
SyntaxKind[LineTerminatorToken](221,2): «line terminator»
SyntaxKind[IndentToken](221,2): «indent»
SyntaxKind[Identifier](221,12): OctalDigit
SyntaxKind[LineTerminatorToken](222,2): «line terminator»
SyntaxKind[Identifier](222,13): OctalDigits
SyntaxKind[Identifier](222,24): OctalDigit
SyntaxKind[LineTerminatorToken](223,1): «line terminator»
SyntaxKind[DedentToken](223,1): «dedent»
SyntaxKind[LineTerminatorToken](224,1): «line terminator»
SyntaxKind[Identifier](224,11): OctalDigit
SyntaxKind[ColonColonToken](224,14): ::
SyntaxKind[OneKeyword](224,18): one
SyntaxKind[OfKeyword](224,21): of
SyntaxKind[LineTerminatorToken](225,2): «line terminator»
SyntaxKind[IndentToken](225,2): «indent»
SyntaxKind[Terminal](225,5): `0`
SyntaxKind[Terminal](225,9): `1`
SyntaxKind[Terminal](225,13): `2`
SyntaxKind[Terminal](225,17): `3`
SyntaxKind[Terminal](225,21): `4`
SyntaxKind[Terminal](225,25): `5`
SyntaxKind[Terminal](225,29): `6`
SyntaxKind[Terminal](225,33): `7`
SyntaxKind[LineTerminatorToken](226,1): «line terminator»
SyntaxKind[DedentToken](226,1): «dedent»
SyntaxKind[LineTerminatorToken](227,1): «line terminator»
SyntaxKind[Identifier](227,18): HexIntegerLiteral
SyntaxKind[ColonColonToken](227,21): ::
SyntaxKind[LineTerminatorToken](228,2): «line terminator»
SyntaxKind[IndentToken](228,2): «indent»
SyntaxKind[Terminal](228,6): `0x`
SyntaxKind[Identifier](228,16): HexDigits
SyntaxKind[LineTerminatorToken](229,2): «line terminator»
SyntaxKind[Terminal](229,6): `0X`
SyntaxKind[Identifier](229,16): HexDigits
SyntaxKind[LineTerminatorToken](230,1): «line terminator»
SyntaxKind[DedentToken](230,1): «dedent»
SyntaxKind[LineTerminatorToken](231,1): «line terminator»
SyntaxKind[Identifier](231,10): HexDigits
SyntaxKind[ColonColonToken](231,13): ::
SyntaxKind[LineTerminatorToken](232,2): «line terminator»
SyntaxKind[IndentToken](232,2): «indent»
SyntaxKind[Identifier](232,10): HexDigit
SyntaxKind[LineTerminatorToken](233,2): «line terminator»
SyntaxKind[Identifier](233,11): HexDigits
SyntaxKind[Identifier](233,20): HexDigit
SyntaxKind[LineTerminatorToken](234,1): «line terminator»
SyntaxKind[DedentToken](234,1): «dedent»
SyntaxKind[LineTerminatorToken](235,1): «line terminator»
SyntaxKind[Identifier](235,9): HexDigit
SyntaxKind[ColonColonToken](235,12): ::
SyntaxKind[OneKeyword](235,16): one
SyntaxKind[OfKeyword](235,19): of
SyntaxKind[LineTerminatorToken](236,2): «line terminator»
SyntaxKind[IndentToken](236,2): «indent»
SyntaxKind[Terminal](236,5): `0`
SyntaxKind[Terminal](236,9): `1`
SyntaxKind[Terminal](236,13): `2`
SyntaxKind[Terminal](236,17): `3`
SyntaxKind[Terminal](236,21): `4`
SyntaxKind[Terminal](236,25): `5`
SyntaxKind[Terminal](236,29): `6`
SyntaxKind[Terminal](236,33): `7`
SyntaxKind[Terminal](236,37): `8`
SyntaxKind[Terminal](236,41): `9`
SyntaxKind[Terminal](236,45): `a`
SyntaxKind[Terminal](236,49): `b`
SyntaxKind[Terminal](236,53): `c`
SyntaxKind[Terminal](236,57): `d`
SyntaxKind[Terminal](236,61): `e`
SyntaxKind[Terminal](236,65): `f`
SyntaxKind[Terminal](236,69): `A`
SyntaxKind[Terminal](236,73): `B`
SyntaxKind[Terminal](236,77): `C`
SyntaxKind[Terminal](236,81): `D`
SyntaxKind[Terminal](236,85): `E`
SyntaxKind[Terminal](236,89): `F`
SyntaxKind[LineTerminatorToken](237,1): «line terminator»
SyntaxKind[DedentToken](237,1): «dedent»
SyntaxKind[LineTerminatorToken](238,1): «line terminator»
SyntaxKind[Identifier](238,14): StringLiteral
SyntaxKind[ColonColonToken](238,17): ::
SyntaxKind[LineTerminatorToken](239,2): «line terminator»
SyntaxKind[IndentToken](239,2): «indent»
SyntaxKind[Terminal](239,5): `"`
SyntaxKind[Identifier](239,28): DoubleStringCharacters
SyntaxKind[QuestionToken](239,29): ?
SyntaxKind[Terminal](239,33): `"`
SyntaxKind[LineTerminatorToken](240,2): «line terminator»
SyntaxKind[Terminal](240,5): `'`
SyntaxKind[Identifier](240,28): SingleStringCharacters
SyntaxKind[QuestionToken](240,29): ?
SyntaxKind[Terminal](240,33): `'`
SyntaxKind[LineTerminatorToken](241,1): «line terminator»
SyntaxKind[DedentToken](241,1): «dedent»
SyntaxKind[LineTerminatorToken](242,1): «line terminator»
SyntaxKind[Identifier](242,23): DoubleStringCharacters
SyntaxKind[ColonColonToken](242,26): ::
SyntaxKind[LineTerminatorToken](243,2): «line terminator»
SyntaxKind[IndentToken](243,2): «indent»
SyntaxKind[Identifier](243,23): DoubleStringCharacter
SyntaxKind[Identifier](243,46): DoubleStringCharacters
SyntaxKind[QuestionToken](243,47): ?
SyntaxKind[LineTerminatorToken](244,1): «line terminator»
SyntaxKind[DedentToken](244,1): «dedent»
SyntaxKind[LineTerminatorToken](245,1): «line terminator»
SyntaxKind[Identifier](245,23): SingleStringCharacters
SyntaxKind[ColonColonToken](245,26): ::
SyntaxKind[LineTerminatorToken](246,2): «line terminator»
SyntaxKind[IndentToken](246,2): «indent»
SyntaxKind[Identifier](246,23): SingleStringCharacter
SyntaxKind[Identifier](246,46): SingleStringCharacters
SyntaxKind[QuestionToken](246,47): ?
SyntaxKind[LineTerminatorToken](247,1): «line terminator»
SyntaxKind[DedentToken](247,1): «dedent»
SyntaxKind[LineTerminatorToken](248,1): «line terminator»
SyntaxKind[Identifier](248,22): DoubleStringCharacter
SyntaxKind[ColonColonToken](248,25): ::
SyntaxKind[LineTerminatorToken](249,2): «line terminator»
SyntaxKind[IndentToken](249,2): «indent»
SyntaxKind[Identifier](249,17): SourceCharacter
SyntaxKind[FirstKeyword](249,21): but
SyntaxKind[NotKeyword](249,25): not
SyntaxKind[OneKeyword](249,29): one
SyntaxKind[OfKeyword](249,32): of
SyntaxKind[Terminal](249,36): `"`
SyntaxKind[LastKeyword](249,39): or
SyntaxKind[Terminal](249,43): `\`
SyntaxKind[LastKeyword](249,46): or
SyntaxKind[Identifier](249,61): LineTerminator
SyntaxKind[LineTerminatorToken](250,2): «line terminator»
SyntaxKind[Terminal](250,5): `\`
SyntaxKind[Identifier](250,20): EscapeSequence
SyntaxKind[LineTerminatorToken](251,2): «line terminator»
SyntaxKind[Identifier](251,18): LineContinuation
SyntaxKind[LineTerminatorToken](252,1): «line terminator»
SyntaxKind[DedentToken](252,1): «dedent»
SyntaxKind[LineTerminatorToken](253,1): «line terminator»
SyntaxKind[Identifier](253,22): SingleStringCharacter
SyntaxKind[ColonColonToken](253,25): ::
SyntaxKind[LineTerminatorToken](254,2): «line terminator»
SyntaxKind[IndentToken](254,2): «indent»
SyntaxKind[Identifier](254,17): SourceCharacter
SyntaxKind[FirstKeyword](254,21): but
SyntaxKind[NotKeyword](254,25): not
SyntaxKind[OneKeyword](254,29): one
SyntaxKind[OfKeyword](254,32): of
SyntaxKind[Terminal](254,36): `'`
SyntaxKind[LastKeyword](254,39): or
SyntaxKind[Terminal](254,43): `\`
SyntaxKind[LastKeyword](254,46): or
SyntaxKind[Identifier](254,61): LineTerminator
SyntaxKind[LineTerminatorToken](255,2): «line terminator»
SyntaxKind[Terminal](255,5): `\`
SyntaxKind[Identifier](255,20): EscapeSequence
SyntaxKind[LineTerminatorToken](256,2): «line terminator»
SyntaxKind[Identifier](256,18): LineContinuation
SyntaxKind[LineTerminatorToken](257,1): «line terminator»
SyntaxKind[DedentToken](257,1): «dedent»
SyntaxKind[LineTerminatorToken](258,1): «line terminator»
SyntaxKind[Identifier](258,17): LineContinuation
SyntaxKind[ColonColonToken](258,20): ::
SyntaxKind[LineTerminatorToken](259,2): «line terminator»
SyntaxKind[IndentToken](259,2): «indent»
SyntaxKind[Terminal](259,5): `\`
SyntaxKind[Identifier](259,28): LineTerminatorSequence
SyntaxKind[LineTerminatorToken](260,1): «line terminator»
SyntaxKind[DedentToken](260,1): «dedent»
SyntaxKind[LineTerminatorToken](261,1): «line terminator»
SyntaxKind[Identifier](261,15): EscapeSequence
SyntaxKind[ColonColonToken](261,18): ::
SyntaxKind[LineTerminatorToken](262,2): «line terminator»
SyntaxKind[IndentToken](262,2): «indent»
SyntaxKind[Identifier](262,25): CharacterEscapeSequence
SyntaxKind[LineTerminatorToken](263,2): «line terminator»
SyntaxKind[Terminal](263,5): `0`
SyntaxKind[OpenBracketToken](263,7): [
SyntaxKind[LookaheadKeyword](263,16): lookahead
SyntaxKind[ExclamationEqualsToken](263,19): !=
SyntaxKind[Identifier](263,32): DecimalDigit
SyntaxKind[CloseBracketToken](263,33): ]
SyntaxKind[LineTerminatorToken](264,2): «line terminator»
SyntaxKind[Identifier](264,19): HexEscapeSequence
SyntaxKind[LineTerminatorToken](265,2): «line terminator»
SyntaxKind[Identifier](265,23): UnicodeEscapeSequence
SyntaxKind[LineTerminatorToken](266,1): «line terminator»
SyntaxKind[DedentToken](266,1): «dedent»
SyntaxKind[LineTerminatorToken](267,1): «line terminator»
SyntaxKind[Identifier](267,24): CharacterEscapeSequence
SyntaxKind[ColonColonToken](267,27): ::
SyntaxKind[LineTerminatorToken](268,2): «line terminator»
SyntaxKind[IndentToken](268,2): «indent»
SyntaxKind[Identifier](268,23): SingleEscapeCharacter
SyntaxKind[LineTerminatorToken](269,2): «line terminator»
SyntaxKind[Identifier](269,20): NonEscapeCharacter
SyntaxKind[LineTerminatorToken](270,1): «line terminator»
SyntaxKind[DedentToken](270,1): «dedent»
SyntaxKind[LineTerminatorToken](271,1): «line terminator»
SyntaxKind[Identifier](271,22): SingleEscapeCharacter
SyntaxKind[ColonColonToken](271,25): ::
SyntaxKind[OneKeyword](271,29): one
SyntaxKind[OfKeyword](271,32): of
SyntaxKind[LineTerminatorToken](272,2): «line terminator»
SyntaxKind[IndentToken](272,2): «indent»
SyntaxKind[Terminal](272,5): `'`
SyntaxKind[Terminal](272,9): `"`
SyntaxKind[Terminal](272,13): `\`
SyntaxKind[Terminal](272,17): `b`
SyntaxKind[Terminal](272,21): `f`
SyntaxKind[Terminal](272,25): `n`
SyntaxKind[Terminal](272,29): `r`
SyntaxKind[Terminal](272,33): `t`
SyntaxKind[Terminal](272,37): `v`
SyntaxKind[LineTerminatorToken](273,1): «line terminator»
SyntaxKind[DedentToken](273,1): «dedent»
SyntaxKind[LineTerminatorToken](274,1): «line terminator»
SyntaxKind[Identifier](274,19): NonEscapeCharacter
SyntaxKind[ColonColonToken](274,22): ::
SyntaxKind[LineTerminatorToken](275,2): «line terminator»
SyntaxKind[IndentToken](275,2): «indent»
SyntaxKind[Identifier](275,17): SourceCharacter
SyntaxKind[FirstKeyword](275,21): but
SyntaxKind[NotKeyword](275,25): not
SyntaxKind[OneKeyword](275,29): one
SyntaxKind[OfKeyword](275,32): of
SyntaxKind[Identifier](275,48): EscapeCharacter
SyntaxKind[LastKeyword](275,51): or
SyntaxKind[Identifier](275,66): LineTerminator
SyntaxKind[LineTerminatorToken](276,1): «line terminator»
SyntaxKind[DedentToken](276,1): «dedent»
SyntaxKind[LineTerminatorToken](277,1): «line terminator»
SyntaxKind[Identifier](277,16): EscapeCharacter
SyntaxKind[ColonColonToken](277,19): ::
SyntaxKind[LineTerminatorToken](278,2): «line terminator»
SyntaxKind[IndentToken](278,2): «indent»
SyntaxKind[Identifier](278,23): SingleEscapeCharacter
SyntaxKind[LineTerminatorToken](279,2): «line terminator»
SyntaxKind[Identifier](279,14): DecimalDigit
SyntaxKind[LineTerminatorToken](280,2): «line terminator»
SyntaxKind[Terminal](280,5): `x`
SyntaxKind[LineTerminatorToken](281,2): «line terminator»
SyntaxKind[Terminal](281,5): `u`
SyntaxKind[LineTerminatorToken](282,1): «line terminator»
SyntaxKind[DedentToken](282,1): «dedent»
SyntaxKind[LineTerminatorToken](283,1): «line terminator»
SyntaxKind[Identifier](283,18): HexEscapeSequence
SyntaxKind[ColonColonToken](283,21): ::
SyntaxKind[LineTerminatorToken](284,2): «line terminator»
SyntaxKind[IndentToken](284,2): «indent»
SyntaxKind[Terminal](284,5): `x`
SyntaxKind[Identifier](284,14): HexDigit
SyntaxKind[Identifier](284,23): HexDigit
SyntaxKind[LineTerminatorToken](285,1): «line terminator»
SyntaxKind[DedentToken](285,1): «dedent»
SyntaxKind[LineTerminatorToken](286,1): «line terminator»
SyntaxKind[Identifier](286,22): UnicodeEscapeSequence
SyntaxKind[ColonColonToken](286,25): ::
SyntaxKind[LineTerminatorToken](287,2): «line terminator»
SyntaxKind[IndentToken](287,2): «indent»
SyntaxKind[Terminal](287,5): `u`
SyntaxKind[Identifier](287,16): Hex4Digits
SyntaxKind[LineTerminatorToken](288,2): «line terminator»
SyntaxKind[Terminal](288,6): `u{`
SyntaxKind[Identifier](288,16): HexDigits
SyntaxKind[Terminal](288,20): `}`
SyntaxKind[LineTerminatorToken](289,1): «line terminator»
SyntaxKind[DedentToken](289,1): «dedent»
SyntaxKind[LineTerminatorToken](290,1): «line terminator»
SyntaxKind[Identifier](290,11): Hex4Digits
SyntaxKind[ColonColonToken](290,14): ::
SyntaxKind[LineTerminatorToken](291,2): «line terminator»
SyntaxKind[IndentToken](291,2): «indent»
SyntaxKind[Identifier](291,10): HexDigit
SyntaxKind[Identifier](291,19): HexDigit
SyntaxKind[Identifier](291,28): HexDigit
SyntaxKind[Identifier](291,37): HexDigit
SyntaxKind[LineTerminatorToken](292,1): «line terminator»
SyntaxKind[DedentToken](292,1): «dedent»
SyntaxKind[LineTerminatorToken](293,1): «line terminator»
SyntaxKind[Identifier](293,25): RegularExpressionLiteral
SyntaxKind[ColonColonToken](293,28): ::
SyntaxKind[LineTerminatorToken](294,2): «line terminator»
SyntaxKind[IndentToken](294,2): «indent»
SyntaxKind[Terminal](294,5): `/`
SyntaxKind[Identifier](294,27): RegularExpressionBody
SyntaxKind[Terminal](294,31): `/`
SyntaxKind[Identifier](294,54): RegularExpressionFlags
SyntaxKind[LineTerminatorToken](295,1): «line terminator»
SyntaxKind[DedentToken](295,1): «dedent»
SyntaxKind[LineTerminatorToken](296,1): «line terminator»
SyntaxKind[Identifier](296,22): RegularExpressionBody
SyntaxKind[ColonColonToken](296,25): ::
SyntaxKind[LineTerminatorToken](297,2): «line terminator»
SyntaxKind[IndentToken](297,2): «indent»
SyntaxKind[Identifier](297,28): RegularExpressionFirstChar
SyntaxKind[Identifier](297,51): RegularExpressionChars
SyntaxKind[LineTerminatorToken](298,1): «line terminator»
SyntaxKind[DedentToken](298,1): «dedent»
SyntaxKind[LineTerminatorToken](299,1): «line terminator»
SyntaxKind[Identifier](299,23): RegularExpressionChars
SyntaxKind[ColonColonToken](299,26): ::
SyntaxKind[LineTerminatorToken](300,2): «line terminator»
SyntaxKind[IndentToken](300,2): «indent»
SyntaxKind[OpenBracketToken](300,3): [
SyntaxKind[EmptyKeyword](300,8): empty
SyntaxKind[CloseBracketToken](300,9): ]
SyntaxKind[LineTerminatorToken](301,2): «line terminator»
SyntaxKind[Identifier](301,24): RegularExpressionChars
SyntaxKind[Identifier](301,46): RegularExpressionChar
SyntaxKind[LineTerminatorToken](302,1): «line terminator»
SyntaxKind[DedentToken](302,1): «dedent»
SyntaxKind[LineTerminatorToken](303,1): «line terminator»
SyntaxKind[Identifier](303,27): RegularExpressionFirstChar
SyntaxKind[ColonColonToken](303,30): ::
SyntaxKind[LineTerminatorToken](304,2): «line terminator»
SyntaxKind[IndentToken](304,2): «indent»
SyntaxKind[Identifier](304,32): RegularExpressionNonTerminator
SyntaxKind[FirstKeyword](304,36): but
SyntaxKind[NotKeyword](304,40): not
SyntaxKind[OneKeyword](304,44): one
SyntaxKind[OfKeyword](304,47): of
SyntaxKind[Terminal](304,51): `*`
SyntaxKind[LastKeyword](304,54): or
SyntaxKind[Terminal](304,58): `\`
SyntaxKind[LastKeyword](304,61): or
SyntaxKind[Terminal](304,65): `/`
SyntaxKind[LastKeyword](304,68): or
SyntaxKind[Terminal](304,72): `[`
SyntaxKind[LineTerminatorToken](305,2): «line terminator»
SyntaxKind[Identifier](305,36): RegularExpressionBackslashSequence
SyntaxKind[LineTerminatorToken](306,2): «line terminator»
SyntaxKind[Identifier](306,24): RegularExpressionClass
SyntaxKind[LineTerminatorToken](307,1): «line terminator»
SyntaxKind[DedentToken](307,1): «dedent»
SyntaxKind[LineTerminatorToken](308,1): «line terminator»
SyntaxKind[Identifier](308,22): RegularExpressionChar
SyntaxKind[ColonColonToken](308,25): ::
SyntaxKind[LineTerminatorToken](309,2): «line terminator»
SyntaxKind[IndentToken](309,2): «indent»
SyntaxKind[Identifier](309,32): RegularExpressionNonTerminator
SyntaxKind[FirstKeyword](309,36): but
SyntaxKind[NotKeyword](309,40): not
SyntaxKind[OneKeyword](309,44): one
SyntaxKind[OfKeyword](309,47): of
SyntaxKind[Terminal](309,51): `\`
SyntaxKind[LastKeyword](309,54): or
SyntaxKind[Terminal](309,58): `/`
SyntaxKind[LastKeyword](309,61): or
SyntaxKind[Terminal](309,65): `[`
SyntaxKind[LineTerminatorToken](310,2): «line terminator»
SyntaxKind[Identifier](310,36): RegularExpressionBackslashSequence
SyntaxKind[LineTerminatorToken](311,2): «line terminator»
SyntaxKind[Identifier](311,24): RegularExpressionClass
SyntaxKind[LineTerminatorToken](312,1): «line terminator»
SyntaxKind[DedentToken](312,1): «dedent»
SyntaxKind[LineTerminatorToken](313,1): «line terminator»
SyntaxKind[Identifier](313,35): RegularExpressionBackslashSequence
SyntaxKind[ColonColonToken](313,38): ::
SyntaxKind[LineTerminatorToken](314,2): «line terminator»
SyntaxKind[IndentToken](314,2): «indent»
SyntaxKind[Terminal](314,5): `\`
SyntaxKind[Identifier](314,36): RegularExpressionNonTerminator
SyntaxKind[LineTerminatorToken](315,1): «line terminator»
SyntaxKind[DedentToken](315,1): «dedent»
SyntaxKind[LineTerminatorToken](316,1): «line terminator»
SyntaxKind[Identifier](316,31): RegularExpressionNonTerminator
SyntaxKind[ColonColonToken](316,34): ::
SyntaxKind[LineTerminatorToken](317,2): «line terminator»
SyntaxKind[IndentToken](317,2): «indent»
SyntaxKind[Identifier](317,17): SourceCharacter
SyntaxKind[FirstKeyword](317,21): but
SyntaxKind[NotKeyword](317,25): not
SyntaxKind[Identifier](317,40): LineTerminator
SyntaxKind[LineTerminatorToken](318,1): «line terminator»
SyntaxKind[DedentToken](318,1): «dedent»
SyntaxKind[LineTerminatorToken](319,1): «line terminator»
SyntaxKind[Identifier](319,23): RegularExpressionClass
SyntaxKind[ColonColonToken](319,26): ::
SyntaxKind[LineTerminatorToken](320,2): «line terminator»
SyntaxKind[IndentToken](320,2): «indent»
SyntaxKind[Terminal](320,5): `[`
SyntaxKind[Identifier](320,33): RegularExpressionClassChars
SyntaxKind[Terminal](320,37): `]`
SyntaxKind[LineTerminatorToken](321,1): «line terminator»
SyntaxKind[DedentToken](321,1): «dedent»
SyntaxKind[LineTerminatorToken](322,1): «line terminator»
SyntaxKind[Identifier](322,28): RegularExpressionClassChars
SyntaxKind[ColonColonToken](322,31): ::
SyntaxKind[LineTerminatorToken](323,2): «line terminator»
SyntaxKind[IndentToken](323,2): «indent»
SyntaxKind[OpenBracketToken](323,3): [
SyntaxKind[EmptyKeyword](323,8): empty
SyntaxKind[CloseBracketToken](323,9): ]
SyntaxKind[LineTerminatorToken](324,2): «line terminator»
SyntaxKind[Identifier](324,29): RegularExpressionClassChars
SyntaxKind[Identifier](324,56): RegularExpressionClassChar
SyntaxKind[LineTerminatorToken](325,1): «line terminator»
SyntaxKind[DedentToken](325,1): «dedent»
SyntaxKind[LineTerminatorToken](326,1): «line terminator»
SyntaxKind[Identifier](326,27): RegularExpressionClassChar
SyntaxKind[ColonColonToken](326,30): ::
SyntaxKind[LineTerminatorToken](327,2): «line terminator»
SyntaxKind[IndentToken](327,2): «indent»
SyntaxKind[Identifier](327,32): RegularExpressionNonTerminator
SyntaxKind[FirstKeyword](327,36): but
SyntaxKind[NotKeyword](327,40): not
SyntaxKind[OneKeyword](327,44): one
SyntaxKind[OfKeyword](327,47): of
SyntaxKind[Terminal](327,51): `]`
SyntaxKind[LastKeyword](327,54): or
SyntaxKind[Terminal](327,58): `\`
SyntaxKind[LineTerminatorToken](328,2): «line terminator»
SyntaxKind[Identifier](328,36): RegularExpressionBackslashSequence
SyntaxKind[LineTerminatorToken](329,1): «line terminator»
SyntaxKind[DedentToken](329,1): «dedent»
SyntaxKind[LineTerminatorToken](330,1): «line terminator»
SyntaxKind[Identifier](330,23): RegularExpressionFlags
SyntaxKind[ColonColonToken](330,26): ::
SyntaxKind[LineTerminatorToken](331,2): «line terminator»
SyntaxKind[IndentToken](331,2): «indent»
SyntaxKind[OpenBracketToken](331,3): [
SyntaxKind[EmptyKeyword](331,8): empty
SyntaxKind[CloseBracketToken](331,9): ]
SyntaxKind[LineTerminatorToken](332,2): «line terminator»
SyntaxKind[Identifier](332,24): RegularExpressionFlags
SyntaxKind[Identifier](332,39): IdentifierPart
SyntaxKind[LineTerminatorToken](333,1): «line terminator»
SyntaxKind[DedentToken](333,1): «dedent»
SyntaxKind[LineTerminatorToken](334,1): «line terminator»
SyntaxKind[Identifier](334,9): Template
SyntaxKind[ColonColonToken](334,12): ::
SyntaxKind[LineTerminatorToken](335,2): «line terminator»
SyntaxKind[IndentToken](335,2): «indent»
SyntaxKind[Identifier](335,24): NoSubstitutionTemplate
SyntaxKind[LineTerminatorToken](336,2): «line terminator»
SyntaxKind[Identifier](336,14): TemplateHead
SyntaxKind[LineTerminatorToken](337,1): «line terminator»
SyntaxKind[DedentToken](337,1): «dedent»
SyntaxKind[LineTerminatorToken](338,1): «line terminator»
SyntaxKind[Identifier](338,23): NoSubstitutionTemplate
SyntaxKind[ColonColonToken](338,26): ::
SyntaxKind[LineTerminatorToken](339,2): «line terminator»
SyntaxKind[IndentToken](339,2): «indent»
SyntaxKind[Terminal](339,5): ```
SyntaxKind[Identifier](339,24): TemplateCharacters
SyntaxKind[QuestionToken](339,25): ?
SyntaxKind[Terminal](339,29): ```
SyntaxKind[LineTerminatorToken](340,1): «line terminator»
SyntaxKind[DedentToken](340,1): «dedent»
SyntaxKind[LineTerminatorToken](341,1): «line terminator»
SyntaxKind[Identifier](341,13): TemplateHead
SyntaxKind[ColonColonToken](341,16): ::
SyntaxKind[LineTerminatorToken](342,2): «line terminator»
SyntaxKind[IndentToken](342,2): «indent»
SyntaxKind[Terminal](342,5): ```
SyntaxKind[Identifier](342,24): TemplateCharacters
SyntaxKind[QuestionToken](342,25): ?
SyntaxKind[Terminal](342,30): `${`
SyntaxKind[LineTerminatorToken](343,1): «line terminator»
SyntaxKind[DedentToken](343,1): «dedent»
SyntaxKind[LineTerminatorToken](344,1): «line terminator»
SyntaxKind[Identifier](344,25): TemplateSubstitutionTail
SyntaxKind[ColonColonToken](344,28): ::
SyntaxKind[LineTerminatorToken](345,2): «line terminator»
SyntaxKind[IndentToken](345,2): «indent»
SyntaxKind[Identifier](345,16): TemplateMiddle
SyntaxKind[LineTerminatorToken](346,2): «line terminator»
SyntaxKind[Identifier](346,14): TemplateTail
SyntaxKind[LineTerminatorToken](347,1): «line terminator»
SyntaxKind[DedentToken](347,1): «dedent»
SyntaxKind[LineTerminatorToken](348,1): «line terminator»
SyntaxKind[Identifier](348,15): TemplateMiddle
SyntaxKind[ColonColonToken](348,18): ::
SyntaxKind[LineTerminatorToken](349,2): «line terminator»
SyntaxKind[IndentToken](349,2): «indent»
SyntaxKind[Terminal](349,5): `}`
SyntaxKind[Identifier](349,24): TemplateCharacters
SyntaxKind[QuestionToken](349,25): ?
SyntaxKind[Terminal](349,30): `${`
SyntaxKind[LineTerminatorToken](350,1): «line terminator»
SyntaxKind[DedentToken](350,1): «dedent»
SyntaxKind[LineTerminatorToken](351,1): «line terminator»
SyntaxKind[Identifier](351,13): TemplateTail
SyntaxKind[ColonColonToken](351,16): ::
SyntaxKind[LineTerminatorToken](352,2): «line terminator»
SyntaxKind[IndentToken](352,2): «indent»
SyntaxKind[Terminal](352,5): `}`
SyntaxKind[Identifier](352,24): TemplateCharacters
SyntaxKind[QuestionToken](352,25): ?
SyntaxKind[Terminal](352,29): ```
SyntaxKind[LineTerminatorToken](353,1): «line terminator»
SyntaxKind[DedentToken](353,1): «dedent»
SyntaxKind[LineTerminatorToken](354,1): «line terminator»
SyntaxKind[Identifier](354,19): TemplateCharacters
SyntaxKind[ColonColonToken](354,22): ::
SyntaxKind[LineTerminatorToken](355,2): «line terminator»
SyntaxKind[IndentToken](355,2): «indent»
SyntaxKind[Identifier](355,19): TemplateCharacter
SyntaxKind[Identifier](355,38): TemplateCharacters
SyntaxKind[QuestionToken](355,39): ?
SyntaxKind[LineTerminatorToken](356,1): «line terminator»
SyntaxKind[DedentToken](356,1): «dedent»
SyntaxKind[LineTerminatorToken](357,1): «line terminator»
SyntaxKind[Identifier](357,18): TemplateCharacter
SyntaxKind[ColonColonToken](357,21): ::
SyntaxKind[LineTerminatorToken](358,2): «line terminator»
SyntaxKind[IndentToken](358,2): «indent»
SyntaxKind[Terminal](358,5): `$`
SyntaxKind[OpenBracketToken](358,7): [
SyntaxKind[LookaheadKeyword](358,16): lookahead
SyntaxKind[ExclamationEqualsToken](358,19): !=
SyntaxKind[Terminal](358,23): `{`
SyntaxKind[CloseBracketToken](358,25): ]
SyntaxKind[LineTerminatorToken](359,2): «line terminator»
SyntaxKind[Terminal](359,5): `\`
SyntaxKind[Identifier](359,20): EscapeSequence
SyntaxKind[LineTerminatorToken](360,2): «line terminator»
SyntaxKind[Identifier](360,18): LineContinuation
SyntaxKind[LineTerminatorToken](361,2): «line terminator»
SyntaxKind[Identifier](361,24): LineTerminatorSequence
SyntaxKind[LineTerminatorToken](362,2): «line terminator»
SyntaxKind[Identifier](362,17): SourceCharacter
SyntaxKind[FirstKeyword](362,21): but
SyntaxKind[NotKeyword](362,25): not
SyntaxKind[OneKeyword](362,29): one
SyntaxKind[OfKeyword](362,32): of
SyntaxKind[Terminal](362,36): ```
SyntaxKind[LastKeyword](362,39): or
SyntaxKind[Terminal](362,43): `\`
SyntaxKind[LastKeyword](362,46): or
SyntaxKind[Terminal](362,50): `$`
SyntaxKind[LastKeyword](362,53): or
SyntaxKind[Identifier](362,68): LineTerminator
SyntaxKind[LineTerminatorToken](363,1): «line terminator»
SyntaxKind[DedentToken](363,1): «dedent»
SyntaxKind[LineTerminatorToken](364,1): «line terminator»
SyntaxKind[LineTerminatorToken](365,1): «line terminator»
SyntaxKind[Identifier](365,20): IdentifierReference
SyntaxKind[OpenBracketToken](365,21): [
SyntaxKind[Identifier](365,26): Yield
SyntaxKind[CloseBracketToken](365,27): ]
SyntaxKind[ColonToken](365,29): :
SyntaxKind[LineTerminatorToken](366,2): «line terminator»
SyntaxKind[IndentToken](366,2): «indent»
SyntaxKind[Identifier](366,12): Identifier
SyntaxKind[LineTerminatorToken](367,2): «line terminator»
SyntaxKind[OpenBracketToken](367,3): [
SyntaxKind[TildeToken](367,4): ~
SyntaxKind[Identifier](367,9): Yield
SyntaxKind[CloseBracketToken](367,10): ]
SyntaxKind[Terminal](367,18): `yield`
SyntaxKind[LineTerminatorToken](368,1): «line terminator»
SyntaxKind[DedentToken](368,1): «dedent»
SyntaxKind[LineTerminatorToken](369,1): «line terminator»
SyntaxKind[Identifier](369,18): BindingIdentifier
SyntaxKind[OpenBracketToken](369,19): [
SyntaxKind[Identifier](369,24): Yield
SyntaxKind[CloseBracketToken](369,25): ]
SyntaxKind[ColonToken](369,27): :
SyntaxKind[LineTerminatorToken](370,2): «line terminator»
SyntaxKind[IndentToken](370,2): «indent»
SyntaxKind[Identifier](370,12): Identifier
SyntaxKind[LineTerminatorToken](371,2): «line terminator»
SyntaxKind[OpenBracketToken](371,3): [
SyntaxKind[TildeToken](371,4): ~
SyntaxKind[Identifier](371,9): Yield
SyntaxKind[CloseBracketToken](371,10): ]
SyntaxKind[Terminal](371,18): `yield`
SyntaxKind[LineTerminatorToken](372,2): «line terminator»
SyntaxKind[LineTerminatorToken](373,1): «line terminator»
SyntaxKind[DedentToken](373,1): «dedent»
SyntaxKind[Identifier](373,16): LabelIdentifier
SyntaxKind[OpenBracketToken](373,17): [
SyntaxKind[Identifier](373,22): Yield
SyntaxKind[CloseBracketToken](373,23): ]
SyntaxKind[ColonToken](373,25): :
SyntaxKind[LineTerminatorToken](374,2): «line terminator»
SyntaxKind[IndentToken](374,2): «indent»
SyntaxKind[Identifier](374,12): Identifier
SyntaxKind[LineTerminatorToken](375,2): «line terminator»
SyntaxKind[OpenBracketToken](375,3): [
SyntaxKind[TildeToken](375,4): ~
SyntaxKind[Identifier](375,9): Yield
SyntaxKind[CloseBracketToken](375,10): ]
SyntaxKind[Terminal](375,18): `yield`
SyntaxKind[LineTerminatorToken](376,1): «line terminator»
SyntaxKind[DedentToken](376,1): «dedent»
SyntaxKind[LineTerminatorToken](377,1): «line terminator»
SyntaxKind[Identifier](377,11): Identifier
SyntaxKind[ColonToken](377,13): :
SyntaxKind[LineTerminatorToken](378,2): «line terminator»
SyntaxKind[IndentToken](378,2): «indent»
SyntaxKind[Identifier](378,16): IdentifierName
SyntaxKind[FirstKeyword](378,20): but
SyntaxKind[NotKeyword](378,24): not
SyntaxKind[Identifier](378,37): ReservedWord
SyntaxKind[LineTerminatorToken](379,1): «line terminator»
SyntaxKind[DedentToken](379,1): «dedent»
SyntaxKind[LineTerminatorToken](380,1): «line terminator»
SyntaxKind[Identifier](380,18): PrimaryExpression
SyntaxKind[OpenBracketToken](380,19): [
SyntaxKind[Identifier](380,24): Yield
SyntaxKind[CloseBracketToken](380,25): ]
SyntaxKind[ColonToken](380,27): :
SyntaxKind[LineTerminatorToken](381,2): «line terminator»
SyntaxKind[IndentToken](381,2): «indent»
SyntaxKind[Terminal](381,8): `this`
SyntaxKind[LineTerminatorToken](382,2): «line terminator»
SyntaxKind[Identifier](382,21): IdentifierReference
SyntaxKind[OpenBracketToken](382,22): [
SyntaxKind[QuestionToken](382,23): ?
SyntaxKind[Identifier](382,28): Yield
SyntaxKind[CloseBracketToken](382,29): ]
SyntaxKind[LineTerminatorToken](383,2): «line terminator»
SyntaxKind[Identifier](383,9): Literal
SyntaxKind[LineTerminatorToken](384,2): «line terminator»
SyntaxKind[Identifier](384,14): ArrayLiteral
SyntaxKind[OpenBracketToken](384,15): [
SyntaxKind[QuestionToken](384,16): ?
SyntaxKind[Identifier](384,21): Yield
SyntaxKind[CloseBracketToken](384,22): ]
SyntaxKind[LineTerminatorToken](385,2): «line terminator»
SyntaxKind[Identifier](385,15): ObjectLiteral
SyntaxKind[OpenBracketToken](385,16): [
SyntaxKind[QuestionToken](385,17): ?
SyntaxKind[Identifier](385,22): Yield
SyntaxKind[CloseBracketToken](385,23): ]
SyntaxKind[LineTerminatorToken](386,2): «line terminator»
SyntaxKind[Identifier](386,20): FunctionExpression
SyntaxKind[LineTerminatorToken](387,2): «line terminator»
SyntaxKind[Identifier](387,17): ClassExpression
SyntaxKind[OpenBracketToken](387,18): [
SyntaxKind[QuestionToken](387,19): ?
SyntaxKind[Identifier](387,24): Yield
SyntaxKind[CloseBracketToken](387,25): ]
SyntaxKind[LineTerminatorToken](388,2): «line terminator»
SyntaxKind[Identifier](388,21): GeneratorExpression
SyntaxKind[LineTerminatorToken](389,2): «line terminator»
SyntaxKind[Identifier](389,26): RegularExpressionLiteral
SyntaxKind[LineTerminatorToken](390,2): «line terminator»
SyntaxKind[Identifier](390,17): TemplateLiteral
SyntaxKind[OpenBracketToken](390,18): [
SyntaxKind[QuestionToken](390,19): ?
SyntaxKind[Identifier](390,24): Yield
SyntaxKind[CloseBracketToken](390,25): ]
SyntaxKind[LineTerminatorToken](391,2): «line terminator»
SyntaxKind[Identifier](391,51): CoverParenthesizedExpressionAndArrowParameterList
SyntaxKind[OpenBracketToken](391,52): [
SyntaxKind[QuestionToken](391,53): ?
SyntaxKind[Identifier](391,58): Yield
SyntaxKind[CloseBracketToken](391,59): ]
SyntaxKind[LineTerminatorToken](392,1): «line terminator»
SyntaxKind[DedentToken](392,1): «dedent»
SyntaxKind[LineTerminatorToken](393,1): «line terminator»
SyntaxKind[Identifier](393,50): CoverParenthesizedExpressionAndArrowParameterList
SyntaxKind[OpenBracketToken](393,51): [
SyntaxKind[Identifier](393,56): Yield
SyntaxKind[CloseBracketToken](393,57): ]
SyntaxKind[ColonToken](393,59): :
SyntaxKind[LineTerminatorToken](394,2): «line terminator»
SyntaxKind[IndentToken](394,2): «indent»
SyntaxKind[Terminal](394,5): `(`
SyntaxKind[Identifier](394,16): Expression
SyntaxKind[OpenBracketToken](394,17): [
SyntaxKind[Identifier](394,19): In
SyntaxKind[CommaToken](394,20): ,
SyntaxKind[QuestionToken](394,22): ?
SyntaxKind[Identifier](394,27): Yield
SyntaxKind[CloseBracketToken](394,28): ]
SyntaxKind[Terminal](394,32): `)`
SyntaxKind[LineTerminatorToken](395,2): «line terminator»
SyntaxKind[Terminal](395,5): `(`
SyntaxKind[Terminal](395,9): `)`
SyntaxKind[LineTerminatorToken](396,2): «line terminator»
SyntaxKind[Terminal](396,5): `(`
SyntaxKind[Terminal](396,11): `...`
SyntaxKind[Identifier](396,29): BindingIdentifier
SyntaxKind[OpenBracketToken](396,30): [
SyntaxKind[QuestionToken](396,31): ?
SyntaxKind[Identifier](396,36): Yield
SyntaxKind[CloseBracketToken](396,37): ]
SyntaxKind[Terminal](396,41): `)`
SyntaxKind[LineTerminatorToken](397,2): «line terminator»
SyntaxKind[Terminal](397,5): `(`
SyntaxKind[Identifier](397,16): Expression
SyntaxKind[OpenBracketToken](397,17): [
SyntaxKind[Identifier](397,19): In
SyntaxKind[CommaToken](397,20): ,
SyntaxKind[QuestionToken](397,22): ?
SyntaxKind[Identifier](397,27): Yield
SyntaxKind[CloseBracketToken](397,28): ]
SyntaxKind[Terminal](397,32): `,`
SyntaxKind[Terminal](397,38): `...`
SyntaxKind[Identifier](397,56): BindingIdentifier
SyntaxKind[OpenBracketToken](397,57): [
SyntaxKind[QuestionToken](397,58): ?
SyntaxKind[Identifier](397,63): Yield
SyntaxKind[CloseBracketToken](397,64): ]
SyntaxKind[Terminal](397,68): `)`
SyntaxKind[LineTerminatorToken](398,1): «line terminator»
SyntaxKind[DedentToken](398,1): «dedent»
SyntaxKind[LineTerminatorToken](399,1): «line terminator»
SyntaxKind[Identifier](399,8): Literal
SyntaxKind[ColonToken](399,10): :
SyntaxKind[LineTerminatorToken](400,2): «line terminator»
SyntaxKind[IndentToken](400,2): «indent»
SyntaxKind[Identifier](400,13): NullLiteral
SyntaxKind[LineTerminatorToken](401,2): «line terminator»
SyntaxKind[Identifier](401,16): BooleanLiteral
SyntaxKind[LineTerminatorToken](402,2): «line terminator»
SyntaxKind[Identifier](402,16): NumericLiteral
SyntaxKind[LineTerminatorToken](403,2): «line terminator»
SyntaxKind[Identifier](403,15): StringLiteral
SyntaxKind[LineTerminatorToken](404,1): «line terminator»
SyntaxKind[DedentToken](404,1): «dedent»
SyntaxKind[LineTerminatorToken](405,1): «line terminator»
SyntaxKind[Identifier](405,13): ArrayLiteral
SyntaxKind[OpenBracketToken](405,14): [
SyntaxKind[Identifier](405,19): Yield
SyntaxKind[CloseBracketToken](405,20): ]
SyntaxKind[ColonToken](405,22): :
SyntaxKind[LineTerminatorToken](406,2): «line terminator»
SyntaxKind[IndentToken](406,2): «indent»
SyntaxKind[Terminal](406,5): `[`
SyntaxKind[Identifier](406,13): Elision
SyntaxKind[QuestionToken](406,14): ?
SyntaxKind[Terminal](406,18): `]`
SyntaxKind[LineTerminatorToken](407,2): «line terminator»
SyntaxKind[Terminal](407,5): `[`
SyntaxKind[Identifier](407,17): ElementList
SyntaxKind[OpenBracketToken](407,18): [
SyntaxKind[QuestionToken](407,19): ?
SyntaxKind[Identifier](407,24): Yield
SyntaxKind[CloseBracketToken](407,25): ]
SyntaxKind[Terminal](407,29): `]`
SyntaxKind[LineTerminatorToken](408,2): «line terminator»
SyntaxKind[Terminal](408,5): `[`
SyntaxKind[Identifier](408,17): ElementList
SyntaxKind[OpenBracketToken](408,18): [
SyntaxKind[QuestionToken](408,19): ?
SyntaxKind[Identifier](408,24): Yield
SyntaxKind[CloseBracketToken](408,25): ]
SyntaxKind[Terminal](408,29): `,`
SyntaxKind[Identifier](408,37): Elision
SyntaxKind[QuestionToken](408,38): ?
SyntaxKind[Terminal](408,42): `]`
SyntaxKind[LineTerminatorToken](409,1): «line terminator»
SyntaxKind[DedentToken](409,1): «dedent»
SyntaxKind[LineTerminatorToken](410,1): «line terminator»
SyntaxKind[Identifier](410,12): ElementList
SyntaxKind[OpenBracketToken](410,13): [
SyntaxKind[Identifier](410,18): Yield
SyntaxKind[CloseBracketToken](410,19): ]
SyntaxKind[ColonToken](410,21): :
SyntaxKind[LineTerminatorToken](411,2): «line terminator»
SyntaxKind[IndentToken](411,2): «indent»
SyntaxKind[Identifier](411,9): Elision
SyntaxKind[QuestionToken](411,10): ?
SyntaxKind[Identifier](411,31): AssignmentExpression
SyntaxKind[OpenBracketToken](411,32): [
SyntaxKind[Identifier](411,34): In
SyntaxKind[CommaToken](411,35): ,
SyntaxKind[QuestionToken](411,37): ?
SyntaxKind[Identifier](411,42): Yield
SyntaxKind[CloseBracketToken](411,43): ]
SyntaxKind[LineTerminatorToken](412,2): «line terminator»
SyntaxKind[Identifier](412,9): Elision
SyntaxKind[QuestionToken](412,10): ?
SyntaxKind[Identifier](412,24): SpreadElement
SyntaxKind[OpenBracketToken](412,25): [
SyntaxKind[QuestionToken](412,26): ?
SyntaxKind[Identifier](412,31): Yield
SyntaxKind[CloseBracketToken](412,32): ]
SyntaxKind[LineTerminatorToken](413,2): «line terminator»
SyntaxKind[Identifier](413,13): ElementList
SyntaxKind[OpenBracketToken](413,14): [
SyntaxKind[QuestionToken](413,15): ?
SyntaxKind[Identifier](413,20): Yield
SyntaxKind[CloseBracketToken](413,21): ]
SyntaxKind[Terminal](413,25): `,`
SyntaxKind[Identifier](413,33): Elision
SyntaxKind[QuestionToken](413,34): ?
SyntaxKind[Identifier](413,55): AssignmentExpression
SyntaxKind[OpenBracketToken](413,56): [
SyntaxKind[Identifier](413,58): In
SyntaxKind[CommaToken](413,59): ,
SyntaxKind[QuestionToken](413,61): ?
SyntaxKind[Identifier](413,66): Yield
SyntaxKind[CloseBracketToken](413,67): ]
SyntaxKind[LineTerminatorToken](414,2): «line terminator»
SyntaxKind[Identifier](414,13): ElementList
SyntaxKind[OpenBracketToken](414,14): [
SyntaxKind[QuestionToken](414,15): ?
SyntaxKind[Identifier](414,20): Yield
SyntaxKind[CloseBracketToken](414,21): ]
SyntaxKind[Terminal](414,25): `,`
SyntaxKind[Identifier](414,33): Elision
SyntaxKind[QuestionToken](414,34): ?
SyntaxKind[Identifier](414,48): SpreadElement
SyntaxKind[OpenBracketToken](414,49): [
SyntaxKind[QuestionToken](414,50): ?
SyntaxKind[Identifier](414,55): Yield
SyntaxKind[CloseBracketToken](414,56): ]
SyntaxKind[LineTerminatorToken](415,1): «line terminator»
SyntaxKind[DedentToken](415,1): «dedent»
SyntaxKind[LineTerminatorToken](416,1): «line terminator»
SyntaxKind[Identifier](416,8): Elision
SyntaxKind[ColonToken](416,10): :
SyntaxKind[LineTerminatorToken](417,2): «line terminator»
SyntaxKind[IndentToken](417,2): «indent»
SyntaxKind[Terminal](417,5): `,`
SyntaxKind[LineTerminatorToken](418,2): «line terminator»
SyntaxKind[Identifier](418,9): Elision
SyntaxKind[Terminal](418,13): `,`
SyntaxKind[LineTerminatorToken](419,1): «line terminator»
SyntaxKind[DedentToken](419,1): «dedent»
SyntaxKind[LineTerminatorToken](420,1): «line terminator»
SyntaxKind[Identifier](420,14): SpreadElement
SyntaxKind[OpenBracketToken](420,15): [
SyntaxKind[Identifier](420,20): Yield
SyntaxKind[CloseBracketToken](420,21): ]
SyntaxKind[ColonToken](420,23): :
SyntaxKind[LineTerminatorToken](421,2): «line terminator»
SyntaxKind[IndentToken](421,2): «indent»
SyntaxKind[Terminal](421,7): `...`
SyntaxKind[Identifier](421,28): AssignmentExpression
SyntaxKind[OpenBracketToken](421,29): [
SyntaxKind[Identifier](421,31): In
SyntaxKind[CommaToken](421,32): ,
SyntaxKind[QuestionToken](421,34): ?
SyntaxKind[Identifier](421,39): Yield
SyntaxKind[CloseBracketToken](421,40): ]
SyntaxKind[LineTerminatorToken](422,1): «line terminator»
SyntaxKind[DedentToken](422,1): «dedent»
SyntaxKind[LineTerminatorToken](423,1): «line terminator»
SyntaxKind[Identifier](423,14): ObjectLiteral
SyntaxKind[OpenBracketToken](423,15): [
SyntaxKind[Identifier](423,20): Yield
SyntaxKind[CloseBracketToken](423,21): ]
SyntaxKind[ColonToken](423,23): :
SyntaxKind[LineTerminatorToken](424,2): «line terminator»
SyntaxKind[IndentToken](424,2): «indent»
SyntaxKind[Terminal](424,5): `{`
SyntaxKind[Terminal](424,9): `}`
SyntaxKind[LineTerminatorToken](425,2): «line terminator»
SyntaxKind[Terminal](425,5): `{`
SyntaxKind[Identifier](425,28): PropertyDefinitionList
SyntaxKind[OpenBracketToken](425,29): [
SyntaxKind[QuestionToken](425,30): ?
SyntaxKind[Identifier](425,35): Yield
SyntaxKind[CloseBracketToken](425,36): ]
SyntaxKind[Terminal](425,40): `}`
SyntaxKind[LineTerminatorToken](426,2): «line terminator»
SyntaxKind[Terminal](426,5): `{`
SyntaxKind[Identifier](426,28): PropertyDefinitionList
SyntaxKind[OpenBracketToken](426,29): [
SyntaxKind[QuestionToken](426,30): ?
SyntaxKind[Identifier](426,35): Yield
SyntaxKind[CloseBracketToken](426,36): ]
SyntaxKind[Terminal](426,40): `,`
SyntaxKind[Terminal](426,44): `}`
SyntaxKind[LineTerminatorToken](427,1): «line terminator»
SyntaxKind[DedentToken](427,1): «dedent»
SyntaxKind[LineTerminatorToken](428,1): «line terminator»
SyntaxKind[Identifier](428,23): PropertyDefinitionList
SyntaxKind[OpenBracketToken](428,24): [
SyntaxKind[Identifier](428,29): Yield
SyntaxKind[CloseBracketToken](428,30): ]
SyntaxKind[ColonToken](428,32): :
SyntaxKind[LineTerminatorToken](429,2): «line terminator»
SyntaxKind[IndentToken](429,2): «indent»
SyntaxKind[Identifier](429,20): PropertyDefinition
SyntaxKind[OpenBracketToken](429,21): [
SyntaxKind[QuestionToken](429,22): ?
SyntaxKind[Identifier](429,27): Yield
SyntaxKind[CloseBracketToken](429,28): ]
SyntaxKind[LineTerminatorToken](430,2): «line terminator»
SyntaxKind[Identifier](430,24): PropertyDefinitionList
SyntaxKind[OpenBracketToken](430,25): [
SyntaxKind[QuestionToken](430,26): ?
SyntaxKind[Identifier](430,31): Yield
SyntaxKind[CloseBracketToken](430,32): ]
SyntaxKind[Terminal](430,36): `,`
SyntaxKind[Identifier](430,55): PropertyDefinition
SyntaxKind[OpenBracketToken](430,56): [
SyntaxKind[QuestionToken](430,57): ?
SyntaxKind[Identifier](430,62): Yield
SyntaxKind[CloseBracketToken](430,63): ]
SyntaxKind[LineTerminatorToken](431,1): «line terminator»
SyntaxKind[DedentToken](431,1): «dedent»
SyntaxKind[LineTerminatorToken](432,1): «line terminator»
SyntaxKind[Identifier](432,19): PropertyDefinition
SyntaxKind[OpenBracketToken](432,20): [
SyntaxKind[Identifier](432,25): Yield
SyntaxKind[CloseBracketToken](432,26): ]
SyntaxKind[ColonToken](432,28): :
SyntaxKind[LineTerminatorToken](433,2): «line terminator»
SyntaxKind[IndentToken](433,2): «indent»
SyntaxKind[Identifier](433,21): IdentifierReference
SyntaxKind[OpenBracketToken](433,22): [
SyntaxKind[QuestionToken](433,23): ?
SyntaxKind[Identifier](433,28): Yield
SyntaxKind[CloseBracketToken](433,29): ]
SyntaxKind[LineTerminatorToken](434,2): «line terminator»
SyntaxKind[Identifier](434,22): CoverInitializedName
SyntaxKind[OpenBracketToken](434,23): [
SyntaxKind[QuestionToken](434,24): ?
SyntaxKind[Identifier](434,29): Yield
SyntaxKind[CloseBracketToken](434,30): ]
SyntaxKind[LineTerminatorToken](435,2): «line terminator»
SyntaxKind[Identifier](435,14): PropertyName
SyntaxKind[OpenBracketToken](435,15): [
SyntaxKind[QuestionToken](435,16): ?
SyntaxKind[Identifier](435,21): Yield
SyntaxKind[CloseBracketToken](435,22): ]
SyntaxKind[Terminal](435,26): `:`
SyntaxKind[Identifier](435,47): AssignmentExpression
SyntaxKind[OpenBracketToken](435,48): [
SyntaxKind[Identifier](435,50): In
SyntaxKind[CommaToken](435,51): ,
SyntaxKind[QuestionToken](435,53): ?
SyntaxKind[Identifier](435,58): Yield
SyntaxKind[CloseBracketToken](435,59): ]
SyntaxKind[LineTerminatorToken](436,2): «line terminator»
SyntaxKind[Identifier](436,18): MethodDefinition
SyntaxKind[OpenBracketToken](436,19): [
SyntaxKind[QuestionToken](436,20): ?
SyntaxKind[Identifier](436,25): Yield
SyntaxKind[CloseBracketToken](436,26): ]
SyntaxKind[LineTerminatorToken](437,1): «line terminator»
SyntaxKind[DedentToken](437,1): «dedent»
SyntaxKind[LineTerminatorToken](438,1): «line terminator»
SyntaxKind[Identifier](438,13): PropertyName
SyntaxKind[OpenBracketToken](438,14): [
SyntaxKind[Identifier](438,19): Yield
SyntaxKind[CloseBracketToken](438,20): ]
SyntaxKind[ColonToken](438,22): :
SyntaxKind[LineTerminatorToken](439,2): «line terminator»
SyntaxKind[IndentToken](439,2): «indent»
SyntaxKind[Identifier](439,21): LiteralPropertyName
SyntaxKind[LineTerminatorToken](440,2): «line terminator»
SyntaxKind[Identifier](440,22): ComputedPropertyName
SyntaxKind[OpenBracketToken](440,23): [
SyntaxKind[QuestionToken](440,24): ?
SyntaxKind[Identifier](440,29): Yield
SyntaxKind[CloseBracketToken](440,30): ]
SyntaxKind[LineTerminatorToken](441,1): «line terminator»
SyntaxKind[DedentToken](441,1): «dedent»
SyntaxKind[LineTerminatorToken](442,1): «line terminator»
SyntaxKind[Identifier](442,20): LiteralPropertyName
SyntaxKind[ColonToken](442,22): :
SyntaxKind[LineTerminatorToken](443,2): «line terminator»
SyntaxKind[IndentToken](443,2): «indent»
SyntaxKind[Identifier](443,16): IdentifierName
SyntaxKind[LineTerminatorToken](444,2): «line terminator»
SyntaxKind[Identifier](444,15): StringLiteral
SyntaxKind[LineTerminatorToken](445,2): «line terminator»
SyntaxKind[Identifier](445,16): NumericLiteral
SyntaxKind[LineTerminatorToken](446,1): «line terminator»
SyntaxKind[DedentToken](446,1): «dedent»
SyntaxKind[LineTerminatorToken](447,1): «line terminator»
SyntaxKind[Identifier](447,21): ComputedPropertyName
SyntaxKind[OpenBracketToken](447,22): [
SyntaxKind[Identifier](447,27): Yield
SyntaxKind[CloseBracketToken](447,28): ]
SyntaxKind[ColonToken](447,30): :
SyntaxKind[LineTerminatorToken](448,2): «line terminator»
SyntaxKind[IndentToken](448,2): «indent»
SyntaxKind[Terminal](448,5): `[`
SyntaxKind[Identifier](448,26): AssignmentExpression
SyntaxKind[OpenBracketToken](448,27): [
SyntaxKind[Identifier](448,29): In
SyntaxKind[CommaToken](448,30): ,
SyntaxKind[QuestionToken](448,32): ?
SyntaxKind[Identifier](448,37): Yield
SyntaxKind[CloseBracketToken](448,38): ]
SyntaxKind[Terminal](448,43): `]`
SyntaxKind[LineTerminatorToken](449,1): «line terminator»
SyntaxKind[DedentToken](449,1): «dedent»
SyntaxKind[LineTerminatorToken](450,1): «line terminator»
SyntaxKind[Identifier](450,21): CoverInitializedName
SyntaxKind[OpenBracketToken](450,22): [
SyntaxKind[Identifier](450,27): Yield
SyntaxKind[CloseBracketToken](450,28): ]
SyntaxKind[ColonToken](450,30): :
SyntaxKind[LineTerminatorToken](451,2): «line terminator»
SyntaxKind[IndentToken](451,2): «indent»
SyntaxKind[Identifier](451,21): IdentifierReference
SyntaxKind[OpenBracketToken](451,22): [
SyntaxKind[QuestionToken](451,23): ?
SyntaxKind[Identifier](451,28): Yield
SyntaxKind[CloseBracketToken](451,29): ]
SyntaxKind[Identifier](451,41): Initializer
SyntaxKind[OpenBracketToken](451,42): [
SyntaxKind[Identifier](451,44): In
SyntaxKind[CommaToken](451,45): ,
SyntaxKind[QuestionToken](451,47): ?
SyntaxKind[Identifier](451,52): Yield
SyntaxKind[CloseBracketToken](451,53): ]
SyntaxKind[LineTerminatorToken](452,1): «line terminator»
SyntaxKind[DedentToken](452,1): «dedent»
SyntaxKind[LineTerminatorToken](453,1): «line terminator»
SyntaxKind[Identifier](453,12): Initializer
SyntaxKind[OpenBracketToken](453,13): [
SyntaxKind[Identifier](453,15): In
SyntaxKind[CommaToken](453,16): ,
SyntaxKind[Identifier](453,22): Yield
SyntaxKind[CloseBracketToken](453,23): ]
SyntaxKind[ColonToken](453,25): :
SyntaxKind[LineTerminatorToken](454,2): «line terminator»
SyntaxKind[IndentToken](454,2): «indent»
SyntaxKind[Terminal](454,5): `=`
SyntaxKind[Identifier](454,26): AssignmentExpression
SyntaxKind[OpenBracketToken](454,27): [
SyntaxKind[QuestionToken](454,28): ?
SyntaxKind[Identifier](454,30): In
SyntaxKind[CommaToken](454,31): ,
SyntaxKind[QuestionToken](454,33): ?
SyntaxKind[Identifier](454,38): Yield
SyntaxKind[CloseBracketToken](454,39): ]
SyntaxKind[LineTerminatorToken](455,1): «line terminator»
SyntaxKind[DedentToken](455,1): «dedent»
SyntaxKind[LineTerminatorToken](456,1): «line terminator»
SyntaxKind[Identifier](456,16): TemplateLiteral
SyntaxKind[OpenBracketToken](456,17): [
SyntaxKind[Identifier](456,22): Yield
SyntaxKind[CloseBracketToken](456,23): ]
SyntaxKind[ColonToken](456,25): :
SyntaxKind[LineTerminatorToken](457,2): «line terminator»
SyntaxKind[IndentToken](457,2): «indent»
SyntaxKind[Identifier](457,24): NoSubstitutionTemplate
SyntaxKind[LineTerminatorToken](458,2): «line terminator»
SyntaxKind[Identifier](458,14): TemplateHead
SyntaxKind[Identifier](458,25): Expression
SyntaxKind[OpenBracketToken](458,26): [
SyntaxKind[Identifier](458,28): In
SyntaxKind[CommaToken](458,29): ,
SyntaxKind[QuestionToken](458,31): ?
SyntaxKind[Identifier](458,36): Yield
SyntaxKind[CloseBracketToken](458,37): ]
SyntaxKind[Identifier](458,51): TemplateSpans
SyntaxKind[OpenBracketToken](458,52): [
SyntaxKind[QuestionToken](458,53): ?
SyntaxKind[Identifier](458,58): Yield
SyntaxKind[CloseBracketToken](458,59): ]
SyntaxKind[LineTerminatorToken](459,1): «line terminator»
SyntaxKind[DedentToken](459,1): «dedent»
SyntaxKind[LineTerminatorToken](460,1): «line terminator»
SyntaxKind[Identifier](460,14): TemplateSpans
SyntaxKind[OpenBracketToken](460,15): [
SyntaxKind[Identifier](460,20): Yield
SyntaxKind[CloseBracketToken](460,21): ]
SyntaxKind[ColonToken](460,23): :
SyntaxKind[LineTerminatorToken](461,2): «line terminator»
SyntaxKind[IndentToken](461,2): «indent»
SyntaxKind[Identifier](461,14): TemplateTail
SyntaxKind[LineTerminatorToken](462,2): «line terminator»
SyntaxKind[Identifier](462,20): TemplateMiddleList
SyntaxKind[OpenBracketToken](462,21): [
SyntaxKind[QuestionToken](462,22): ?
SyntaxKind[Identifier](462,27): Yield
SyntaxKind[CloseBracketToken](462,28): ]
SyntaxKind[Identifier](462,41): TemplateTail
SyntaxKind[LineTerminatorToken](463,1): «line terminator»
SyntaxKind[DedentToken](463,1): «dedent»
SyntaxKind[LineTerminatorToken](464,1): «line terminator»
SyntaxKind[Identifier](464,19): TemplateMiddleList
SyntaxKind[OpenBracketToken](464,20): [
SyntaxKind[Identifier](464,25): Yield
SyntaxKind[CloseBracketToken](464,26): ]
SyntaxKind[ColonToken](464,28): :
SyntaxKind[LineTerminatorToken](465,2): «line terminator»
SyntaxKind[IndentToken](465,2): «indent»
SyntaxKind[Identifier](465,16): TemplateMiddle
SyntaxKind[Identifier](465,28): Expression
SyntaxKind[OpenBracketToken](465,29): [
SyntaxKind[Identifier](465,31): In
SyntaxKind[CommaToken](465,32): ,
SyntaxKind[QuestionToken](465,34): ?
SyntaxKind[Identifier](465,39): Yield
SyntaxKind[CloseBracketToken](465,40): ]
SyntaxKind[LineTerminatorToken](466,2): «line terminator»
SyntaxKind[Identifier](466,20): TemplateMiddleList
SyntaxKind[OpenBracketToken](466,21): [
SyntaxKind[QuestionToken](466,22): ?
SyntaxKind[Identifier](466,27): Yield
SyntaxKind[CloseBracketToken](466,28): ]
SyntaxKind[Identifier](466,44): TemplateMiddle
SyntaxKind[Identifier](466,56): Expression
SyntaxKind[OpenBracketToken](466,57): [
SyntaxKind[Identifier](466,59): In
SyntaxKind[CommaToken](466,60): ,
SyntaxKind[QuestionToken](466,62): ?
SyntaxKind[Identifier](466,67): Yield
SyntaxKind[CloseBracketToken](466,68): ]
SyntaxKind[LineTerminatorToken](467,1): «line terminator»
SyntaxKind[DedentToken](467,1): «dedent»
SyntaxKind[LineTerminatorToken](468,1): «line terminator»
SyntaxKind[Identifier](468,17): MemberExpression
SyntaxKind[OpenBracketToken](468,18): [
SyntaxKind[Identifier](468,23): Yield
SyntaxKind[CloseBracketToken](468,24): ]
SyntaxKind[ColonToken](468,26): :
SyntaxKind[LineTerminatorToken](469,2): «line terminator»
SyntaxKind[IndentToken](469,2): «indent»
SyntaxKind[Identifier](469,19): PrimaryExpression
SyntaxKind[OpenBracketToken](469,20): [
SyntaxKind[QuestionToken](469,21): ?
SyntaxKind[Identifier](469,26): Yield
SyntaxKind[CloseBracketToken](469,27): ]
SyntaxKind[LineTerminatorToken](470,2): «line terminator»
SyntaxKind[Identifier](470,18): MemberExpression
SyntaxKind[OpenBracketToken](470,19): [
SyntaxKind[QuestionToken](470,20): ?
SyntaxKind[Identifier](470,25): Yield
SyntaxKind[CloseBracketToken](470,26): ]
SyntaxKind[Terminal](470,30): `[`
SyntaxKind[Identifier](470,41): Expression
SyntaxKind[OpenBracketToken](470,42): [
SyntaxKind[Identifier](470,44): In
SyntaxKind[CommaToken](470,45): ,
SyntaxKind[QuestionToken](470,47): ?
SyntaxKind[Identifier](470,52): Yield
SyntaxKind[CloseBracketToken](470,53): ]
SyntaxKind[Terminal](470,57): `]`
SyntaxKind[LineTerminatorToken](471,2): «line terminator»
SyntaxKind[Identifier](471,18): MemberExpression
SyntaxKind[OpenBracketToken](471,19): [
SyntaxKind[QuestionToken](471,20): ?
SyntaxKind[Identifier](471,25): Yield
SyntaxKind[CloseBracketToken](471,26): ]
SyntaxKind[Terminal](471,30): `.`
SyntaxKind[Identifier](471,45): IdentifierName
SyntaxKind[LineTerminatorToken](472,2): «line terminator»
SyntaxKind[Identifier](472,18): MemberExpression
SyntaxKind[OpenBracketToken](472,19): [
SyntaxKind[QuestionToken](472,20): ?
SyntaxKind[Identifier](472,25): Yield
SyntaxKind[CloseBracketToken](472,26): ]
SyntaxKind[Identifier](472,42): TemplateLiteral
SyntaxKind[OpenBracketToken](472,43): [
SyntaxKind[QuestionToken](472,44): ?
SyntaxKind[Identifier](472,49): Yield
SyntaxKind[CloseBracketToken](472,50): ]
SyntaxKind[LineTerminatorToken](473,2): «line terminator»
SyntaxKind[Identifier](473,15): SuperProperty
SyntaxKind[OpenBracketToken](473,16): [
SyntaxKind[QuestionToken](473,17): ?
SyntaxKind[Identifier](473,22): Yield
SyntaxKind[CloseBracketToken](473,23): ]
SyntaxKind[LineTerminatorToken](474,2): «line terminator»
SyntaxKind[Identifier](474,14): MetaProperty
SyntaxKind[LineTerminatorToken](475,2): «line terminator»
SyntaxKind[Terminal](475,7): `new`
SyntaxKind[Identifier](475,24): MemberExpression
SyntaxKind[OpenBracketToken](475,25): [
SyntaxKind[QuestionToken](475,26): ?
SyntaxKind[Identifier](475,31): Yield
SyntaxKind[CloseBracketToken](475,32): ]
SyntaxKind[Identifier](475,42): Arguments
SyntaxKind[OpenBracketToken](475,43): [
SyntaxKind[QuestionToken](475,44): ?
SyntaxKind[Identifier](475,49): Yield
SyntaxKind[CloseBracketToken](475,50): ]
SyntaxKind[LineTerminatorToken](476,1): «line terminator»
SyntaxKind[DedentToken](476,1): «dedent»
SyntaxKind[LineTerminatorToken](477,1): «line terminator»
SyntaxKind[Identifier](477,14): SuperProperty
SyntaxKind[OpenBracketToken](477,15): [
SyntaxKind[Identifier](477,20): Yield
SyntaxKind[CloseBracketToken](477,21): ]
SyntaxKind[ColonToken](477,23): :
SyntaxKind[LineTerminatorToken](478,2): «line terminator»
SyntaxKind[IndentToken](478,2): «indent»
SyntaxKind[Terminal](478,9): `super`
SyntaxKind[Terminal](478,13): `[`
SyntaxKind[Identifier](478,24): Expression
SyntaxKind[OpenBracketToken](478,25): [
SyntaxKind[Identifier](478,27): In
SyntaxKind[CommaToken](478,28): ,
SyntaxKind[QuestionToken](478,30): ?
SyntaxKind[Identifier](478,35): Yield
SyntaxKind[CloseBracketToken](478,36): ]
SyntaxKind[Terminal](478,40): `]`
SyntaxKind[LineTerminatorToken](479,2): «line terminator»
SyntaxKind[Terminal](479,9): `super`
SyntaxKind[Terminal](479,13): `.`
SyntaxKind[Identifier](479,28): IdentifierName
SyntaxKind[LineTerminatorToken](480,1): «line terminator»
SyntaxKind[DedentToken](480,1): «dedent»
SyntaxKind[LineTerminatorToken](481,1): «line terminator»
SyntaxKind[Identifier](481,13): MetaProperty
SyntaxKind[ColonToken](481,15): :
SyntaxKind[LineTerminatorToken](482,2): «line terminator»
SyntaxKind[IndentToken](482,2): «indent»
SyntaxKind[Identifier](482,11): NewTarget
SyntaxKind[LineTerminatorToken](483,1): «line terminator»
SyntaxKind[DedentToken](483,1): «dedent»
SyntaxKind[LineTerminatorToken](484,1): «line terminator»
SyntaxKind[Identifier](484,10): NewTarget
SyntaxKind[ColonToken](484,12): :
SyntaxKind[LineTerminatorToken](485,2): «line terminator»
SyntaxKind[IndentToken](485,2): «indent»
SyntaxKind[Terminal](485,7): `new`
SyntaxKind[Terminal](485,11): `.`
SyntaxKind[Terminal](485,20): `target`
SyntaxKind[LineTerminatorToken](486,1): «line terminator»
SyntaxKind[DedentToken](486,1): «dedent»
SyntaxKind[LineTerminatorToken](487,1): «line terminator»
SyntaxKind[Identifier](487,14): NewExpression
SyntaxKind[OpenBracketToken](487,15): [
SyntaxKind[Identifier](487,20): Yield
SyntaxKind[CloseBracketToken](487,21): ]
SyntaxKind[ColonToken](487,23): :
SyntaxKind[LineTerminatorToken](488,2): «line terminator»
SyntaxKind[IndentToken](488,2): «indent»
SyntaxKind[Identifier](488,18): MemberExpression
SyntaxKind[OpenBracketToken](488,19): [
SyntaxKind[QuestionToken](488,20): ?
SyntaxKind[Identifier](488,25): Yield
SyntaxKind[CloseBracketToken](488,26): ]
SyntaxKind[LineTerminatorToken](489,2): «line terminator»
SyntaxKind[Terminal](489,7): `new`
SyntaxKind[Identifier](489,21): NewExpression
SyntaxKind[OpenBracketToken](489,22): [
SyntaxKind[QuestionToken](489,23): ?
SyntaxKind[Identifier](489,28): Yield
SyntaxKind[CloseBracketToken](489,29): ]
SyntaxKind[LineTerminatorToken](490,1): «line terminator»
SyntaxKind[DedentToken](490,1): «dedent»
SyntaxKind[LineTerminatorToken](491,1): «line terminator»
SyntaxKind[Identifier](491,15): CallExpression
SyntaxKind[OpenBracketToken](491,16): [
SyntaxKind[Identifier](491,21): Yield
SyntaxKind[CloseBracketToken](491,22): ]
SyntaxKind[ColonToken](491,24): :
SyntaxKind[LineTerminatorToken](492,2): «line terminator»
SyntaxKind[IndentToken](492,2): «indent»
SyntaxKind[Identifier](492,18): MemberExpression
SyntaxKind[OpenBracketToken](492,19): [
SyntaxKind[QuestionToken](492,20): ?
SyntaxKind[Identifier](492,25): Yield
SyntaxKind[CloseBracketToken](492,26): ]
SyntaxKind[Identifier](492,36): Arguments
SyntaxKind[OpenBracketToken](492,37): [
SyntaxKind[QuestionToken](492,38): ?
SyntaxKind[Identifier](492,43): Yield
SyntaxKind[CloseBracketToken](492,44): ]
SyntaxKind[LineTerminatorToken](493,2): «line terminator»
SyntaxKind[Identifier](493,11): SuperCall
SyntaxKind[OpenBracketToken](493,12): [
SyntaxKind[QuestionToken](493,13): ?
SyntaxKind[Identifier](493,18): Yield
SyntaxKind[CloseBracketToken](493,19): ]
SyntaxKind[LineTerminatorToken](494,2): «line terminator»
SyntaxKind[Identifier](494,16): CallExpression
SyntaxKind[OpenBracketToken](494,17): [
SyntaxKind[QuestionToken](494,18): ?
SyntaxKind[Identifier](494,23): Yield
SyntaxKind[CloseBracketToken](494,24): ]
SyntaxKind[Identifier](494,34): Arguments
SyntaxKind[OpenBracketToken](494,35): [
SyntaxKind[QuestionToken](494,36): ?
SyntaxKind[Identifier](494,41): Yield
SyntaxKind[CloseBracketToken](494,42): ]
SyntaxKind[LineTerminatorToken](495,2): «line terminator»
SyntaxKind[Identifier](495,16): CallExpression
SyntaxKind[OpenBracketToken](495,17): [
SyntaxKind[QuestionToken](495,18): ?
SyntaxKind[Identifier](495,23): Yield
SyntaxKind[CloseBracketToken](495,24): ]
SyntaxKind[Terminal](495,28): `[`
SyntaxKind[Identifier](495,39): Expression
SyntaxKind[OpenBracketToken](495,40): [
SyntaxKind[Identifier](495,42): In
SyntaxKind[CommaToken](495,43): ,
SyntaxKind[QuestionToken](495,45): ?
SyntaxKind[Identifier](495,50): Yield
SyntaxKind[CloseBracketToken](495,51): ]
SyntaxKind[Terminal](495,55): `]`
SyntaxKind[LineTerminatorToken](496,2): «line terminator»
SyntaxKind[Identifier](496,16): CallExpression
SyntaxKind[OpenBracketToken](496,17): [
SyntaxKind[QuestionToken](496,18): ?
SyntaxKind[Identifier](496,23): Yield
SyntaxKind[CloseBracketToken](496,24): ]
SyntaxKind[Terminal](496,28): `.`
SyntaxKind[Identifier](496,43): IdentifierName
SyntaxKind[LineTerminatorToken](497,2): «line terminator»
SyntaxKind[Identifier](497,16): CallExpression
SyntaxKind[OpenBracketToken](497,17): [
SyntaxKind[QuestionToken](497,18): ?
SyntaxKind[Identifier](497,23): Yield
SyntaxKind[CloseBracketToken](497,24): ]
SyntaxKind[Identifier](497,40): TemplateLiteral
SyntaxKind[OpenBracketToken](497,41): [
SyntaxKind[QuestionToken](497,42): ?
SyntaxKind[Identifier](497,47): Yield
SyntaxKind[CloseBracketToken](497,48): ]
SyntaxKind[LineTerminatorToken](498,1): «line terminator»
SyntaxKind[DedentToken](498,1): «dedent»
SyntaxKind[LineTerminatorToken](499,1): «line terminator»
SyntaxKind[Identifier](499,10): SuperCall
SyntaxKind[OpenBracketToken](499,11): [
SyntaxKind[Identifier](499,16): Yield
SyntaxKind[CloseBracketToken](499,17): ]
SyntaxKind[ColonToken](499,19): :
SyntaxKind[LineTerminatorToken](500,2): «line terminator»
SyntaxKind[IndentToken](500,2): «indent»
SyntaxKind[Terminal](500,9): `super`
SyntaxKind[Identifier](500,19): Arguments
SyntaxKind[OpenBracketToken](500,20): [
SyntaxKind[QuestionToken](500,21): ?
SyntaxKind[Identifier](500,26): Yield
SyntaxKind[CloseBracketToken](500,27): ]
SyntaxKind[LineTerminatorToken](501,1): «line terminator»
SyntaxKind[DedentToken](501,1): «dedent»
SyntaxKind[LineTerminatorToken](502,1): «line terminator»
SyntaxKind[Identifier](502,10): Arguments
SyntaxKind[OpenBracketToken](502,11): [
SyntaxKind[Identifier](502,16): Yield
SyntaxKind[CloseBracketToken](502,17): ]
SyntaxKind[ColonToken](502,19): :
SyntaxKind[LineTerminatorToken](503,2): «line terminator»
SyntaxKind[IndentToken](503,2): «indent»
SyntaxKind[Terminal](503,5): `(`
SyntaxKind[Terminal](503,9): `)`
SyntaxKind[LineTerminatorToken](504,2): «line terminator»
SyntaxKind[Terminal](504,5): `(`
SyntaxKind[Identifier](504,18): ArgumentList
SyntaxKind[OpenBracketToken](504,19): [
SyntaxKind[QuestionToken](504,20): ?
SyntaxKind[Identifier](504,25): Yield
SyntaxKind[CloseBracketToken](504,26): ]
SyntaxKind[Terminal](504,31): `)`
SyntaxKind[LineTerminatorToken](505,1): «line terminator»
SyntaxKind[DedentToken](505,1): «dedent»
SyntaxKind[LineTerminatorToken](506,1): «line terminator»
SyntaxKind[Identifier](506,13): ArgumentList
SyntaxKind[OpenBracketToken](506,14): [
SyntaxKind[Identifier](506,19): Yield
SyntaxKind[CloseBracketToken](506,20): ]
SyntaxKind[ColonToken](506,22): :
SyntaxKind[LineTerminatorToken](507,2): «line terminator»
SyntaxKind[IndentToken](507,2): «indent»
SyntaxKind[Identifier](507,22): AssignmentExpression
SyntaxKind[OpenBracketToken](507,23): [
SyntaxKind[Identifier](507,25): In
SyntaxKind[CommaToken](507,26): ,
SyntaxKind[QuestionToken](507,28): ?
SyntaxKind[Identifier](507,33): Yield
SyntaxKind[CloseBracketToken](507,34): ]
SyntaxKind[LineTerminatorToken](508,2): «line terminator»
SyntaxKind[Terminal](508,7): `...`
SyntaxKind[Identifier](508,28): AssignmentExpression
SyntaxKind[OpenBracketToken](508,29): [
SyntaxKind[Identifier](508,31): In
SyntaxKind[CommaToken](508,32): ,
SyntaxKind[QuestionToken](508,34): ?
SyntaxKind[Identifier](508,39): Yield
SyntaxKind[CloseBracketToken](508,40): ]
SyntaxKind[LineTerminatorToken](509,2): «line terminator»
SyntaxKind[Identifier](509,14): ArgumentList
SyntaxKind[OpenBracketToken](509,15): [
SyntaxKind[QuestionToken](509,16): ?
SyntaxKind[Identifier](509,21): Yield
SyntaxKind[CloseBracketToken](509,22): ]
SyntaxKind[Terminal](509,26): `,`
SyntaxKind[Identifier](509,47): AssignmentExpression
SyntaxKind[OpenBracketToken](509,48): [
SyntaxKind[Identifier](509,50): In
SyntaxKind[CommaToken](509,51): ,
SyntaxKind[QuestionToken](509,53): ?
SyntaxKind[Identifier](509,58): Yield
SyntaxKind[CloseBracketToken](509,59): ]
SyntaxKind[LineTerminatorToken](510,2): «line terminator»
SyntaxKind[Identifier](510,14): ArgumentList
SyntaxKind[OpenBracketToken](510,15): [
SyntaxKind[QuestionToken](510,16): ?
SyntaxKind[Identifier](510,21): Yield
SyntaxKind[CloseBracketToken](510,22): ]
SyntaxKind[Terminal](510,26): `,`
SyntaxKind[Terminal](510,32): `...`
SyntaxKind[Identifier](510,53): AssignmentExpression
SyntaxKind[OpenBracketToken](510,54): [
SyntaxKind[Identifier](510,56): In
SyntaxKind[CommaToken](510,57): ,
SyntaxKind[QuestionToken](510,59): ?
SyntaxKind[Identifier](510,64): Yield
SyntaxKind[CloseBracketToken](510,65): ]
SyntaxKind[LineTerminatorToken](511,1): «line terminator»
SyntaxKind[DedentToken](511,1): «dedent»
SyntaxKind[LineTerminatorToken](512,1): «line terminator»
SyntaxKind[Identifier](512,23): LeftHandSideExpression
SyntaxKind[OpenBracketToken](512,24): [
SyntaxKind[Identifier](512,29): Yield
SyntaxKind[CloseBracketToken](512,30): ]
SyntaxKind[ColonToken](512,32): :
SyntaxKind[LineTerminatorToken](513,2): «line terminator»
SyntaxKind[IndentToken](513,2): «indent»
SyntaxKind[Identifier](513,15): NewExpression
SyntaxKind[OpenBracketToken](513,16): [
SyntaxKind[QuestionToken](513,17): ?
SyntaxKind[Identifier](513,22): Yield
SyntaxKind[CloseBracketToken](513,23): ]
SyntaxKind[LineTerminatorToken](514,2): «line terminator»
SyntaxKind[Identifier](514,16): CallExpression
SyntaxKind[OpenBracketToken](514,17): [
SyntaxKind[QuestionToken](514,18): ?
SyntaxKind[Identifier](514,23): Yield
SyntaxKind[CloseBracketToken](514,24): ]
SyntaxKind[LineTerminatorToken](515,1): «line terminator»
SyntaxKind[DedentToken](515,1): «dedent»
SyntaxKind[LineTerminatorToken](516,1): «line terminator»
SyntaxKind[Identifier](516,18): PostfixExpression
SyntaxKind[OpenBracketToken](516,19): [
SyntaxKind[Identifier](516,24): Yield
SyntaxKind[CloseBracketToken](516,25): ]
SyntaxKind[ColonToken](516,27): :
SyntaxKind[LineTerminatorToken](517,2): «line terminator»
SyntaxKind[IndentToken](517,2): «indent»
SyntaxKind[Identifier](517,24): LeftHandSideExpression
SyntaxKind[OpenBracketToken](517,25): [
SyntaxKind[QuestionToken](517,26): ?
SyntaxKind[Identifier](517,31): Yield
SyntaxKind[CloseBracketToken](517,32): ]
SyntaxKind[LineTerminatorToken](518,2): «line terminator»
SyntaxKind[Identifier](518,24): LeftHandSideExpression
SyntaxKind[OpenBracketToken](518,25): [
SyntaxKind[QuestionToken](518,26): ?
SyntaxKind[Identifier](518,31): Yield
SyntaxKind[CloseBracketToken](518,32): ]
SyntaxKind[OpenBracketToken](518,34): [
SyntaxKind[NoKeyword](518,36): no
SyntaxKind[Identifier](518,51): LineTerminator
SyntaxKind[HereKeyword](518,56): here
SyntaxKind[CloseBracketToken](518,57): ]
SyntaxKind[Terminal](518,62): `++`
SyntaxKind[LineTerminatorToken](519,2): «line terminator»
SyntaxKind[Identifier](519,24): LeftHandSideExpression
SyntaxKind[OpenBracketToken](519,25): [
SyntaxKind[QuestionToken](519,26): ?
SyntaxKind[Identifier](519,31): Yield
SyntaxKind[CloseBracketToken](519,32): ]
SyntaxKind[OpenBracketToken](519,34): [
SyntaxKind[NoKeyword](519,36): no
SyntaxKind[Identifier](519,51): LineTerminator
SyntaxKind[HereKeyword](519,56): here
SyntaxKind[CloseBracketToken](519,57): ]
SyntaxKind[Terminal](519,62): `--`
SyntaxKind[LineTerminatorToken](520,1): «line terminator»
SyntaxKind[DedentToken](520,1): «dedent»
SyntaxKind[LineTerminatorToken](521,1): «line terminator»
SyntaxKind[Identifier](521,16): UnaryExpression
SyntaxKind[OpenBracketToken](521,17): [
SyntaxKind[Identifier](521,22): Yield
SyntaxKind[CloseBracketToken](521,23): ]
SyntaxKind[ColonToken](521,25): :
SyntaxKind[LineTerminatorToken](522,2): «line terminator»
SyntaxKind[IndentToken](522,2): «indent»
SyntaxKind[Identifier](522,19): PostfixExpression
SyntaxKind[OpenBracketToken](522,20): [
SyntaxKind[QuestionToken](522,21): ?
SyntaxKind[Identifier](522,26): Yield
SyntaxKind[CloseBracketToken](522,27): ]
SyntaxKind[LineTerminatorToken](523,2): «line terminator»
SyntaxKind[Terminal](523,10): `delete`
SyntaxKind[Identifier](523,26): UnaryExpression
SyntaxKind[OpenBracketToken](523,27): [
SyntaxKind[QuestionToken](523,28): ?
SyntaxKind[Identifier](523,33): Yield
SyntaxKind[CloseBracketToken](523,34): ]
SyntaxKind[LineTerminatorToken](524,2): «line terminator»
SyntaxKind[Terminal](524,8): `void`
SyntaxKind[Identifier](524,24): UnaryExpression
SyntaxKind[OpenBracketToken](524,25): [
SyntaxKind[QuestionToken](524,26): ?
SyntaxKind[Identifier](524,31): Yield
SyntaxKind[CloseBracketToken](524,32): ]
SyntaxKind[LineTerminatorToken](525,2): «line terminator»
SyntaxKind[Terminal](525,10): `typeof`
SyntaxKind[Identifier](525,26): UnaryExpression
SyntaxKind[OpenBracketToken](525,27): [
SyntaxKind[QuestionToken](525,28): ?
SyntaxKind[Identifier](525,33): Yield
SyntaxKind[CloseBracketToken](525,34): ]
SyntaxKind[LineTerminatorToken](526,2): «line terminator»
SyntaxKind[Terminal](526,6): `++`
SyntaxKind[Identifier](526,22): UnaryExpression
SyntaxKind[OpenBracketToken](526,23): [
SyntaxKind[QuestionToken](526,24): ?
SyntaxKind[Identifier](526,29): Yield
SyntaxKind[CloseBracketToken](526,30): ]
SyntaxKind[LineTerminatorToken](527,2): «line terminator»
SyntaxKind[Terminal](527,6): `--`
SyntaxKind[Identifier](527,22): UnaryExpression
SyntaxKind[OpenBracketToken](527,23): [
SyntaxKind[QuestionToken](527,24): ?
SyntaxKind[Identifier](527,29): Yield
SyntaxKind[CloseBracketToken](527,30): ]
SyntaxKind[LineTerminatorToken](528,2): «line terminator»
SyntaxKind[Terminal](528,5): `+`
SyntaxKind[Identifier](528,21): UnaryExpression
SyntaxKind[OpenBracketToken](528,22): [
SyntaxKind[QuestionToken](528,23): ?
SyntaxKind[Identifier](528,28): Yield
SyntaxKind[CloseBracketToken](528,29): ]
SyntaxKind[LineTerminatorToken](529,2): «line terminator»
SyntaxKind[Terminal](529,5): `-`
SyntaxKind[Identifier](529,21): UnaryExpression
SyntaxKind[OpenBracketToken](529,22): [
SyntaxKind[QuestionToken](529,23): ?
SyntaxKind[Identifier](529,28): Yield
SyntaxKind[CloseBracketToken](529,29): ]
SyntaxKind[LineTerminatorToken](530,2): «line terminator»
SyntaxKind[Terminal](530,5): `~`
SyntaxKind[Identifier](530,21): UnaryExpression
SyntaxKind[OpenBracketToken](530,22): [
SyntaxKind[QuestionToken](530,23): ?
SyntaxKind[Identifier](530,28): Yield
SyntaxKind[CloseBracketToken](530,29): ]
SyntaxKind[LineTerminatorToken](531,2): «line terminator»
SyntaxKind[Terminal](531,5): `!`
SyntaxKind[Identifier](531,21): UnaryExpression
SyntaxKind[OpenBracketToken](531,22): [
SyntaxKind[QuestionToken](531,23): ?
SyntaxKind[Identifier](531,28): Yield
SyntaxKind[CloseBracketToken](531,29): ]
SyntaxKind[LineTerminatorToken](532,1): «line terminator»
SyntaxKind[DedentToken](532,1): «dedent»
SyntaxKind[LineTerminatorToken](533,1): «line terminator»
SyntaxKind[Identifier](533,25): MultiplicativeExpression
SyntaxKind[OpenBracketToken](533,26): [
SyntaxKind[Identifier](533,31): Yield
SyntaxKind[CloseBracketToken](533,32): ]
SyntaxKind[ColonToken](533,34): :
SyntaxKind[LineTerminatorToken](534,2): «line terminator»
SyntaxKind[IndentToken](534,2): «indent»
SyntaxKind[Identifier](534,17): UnaryExpression
SyntaxKind[OpenBracketToken](534,18): [
SyntaxKind[QuestionToken](534,19): ?
SyntaxKind[Identifier](534,24): Yield
SyntaxKind[CloseBracketToken](534,25): ]
SyntaxKind[LineTerminatorToken](535,2): «line terminator»
SyntaxKind[Identifier](535,26): MultiplicativeExpression
SyntaxKind[OpenBracketToken](535,27): [
SyntaxKind[QuestionToken](535,28): ?
SyntaxKind[Identifier](535,33): Yield
SyntaxKind[CloseBracketToken](535,34): ]
SyntaxKind[Identifier](535,57): MultiplicativeOperator
SyntaxKind[Identifier](535,73): UnaryExpression
SyntaxKind[OpenBracketToken](535,74): [
SyntaxKind[QuestionToken](535,75): ?
SyntaxKind[Identifier](535,80): Yield
SyntaxKind[CloseBracketToken](535,81): ]
SyntaxKind[LineTerminatorToken](536,1): «line terminator»
SyntaxKind[DedentToken](536,1): «dedent»
SyntaxKind[LineTerminatorToken](537,1): «line terminator»
SyntaxKind[Identifier](537,23): MultiplicativeOperator
SyntaxKind[ColonToken](537,25): :
SyntaxKind[OneKeyword](537,29): one
SyntaxKind[OfKeyword](537,32): of
SyntaxKind[LineTerminatorToken](538,2): «line terminator»
SyntaxKind[IndentToken](538,2): «indent»
SyntaxKind[Terminal](538,5): `*`
SyntaxKind[Terminal](538,9): `/`
SyntaxKind[Terminal](538,13): `%`
SyntaxKind[LineTerminatorToken](539,1): «line terminator»
SyntaxKind[DedentToken](539,1): «dedent»
SyntaxKind[LineTerminatorToken](540,1): «line terminator»
SyntaxKind[Identifier](540,19): AdditiveExpression
SyntaxKind[OpenBracketToken](540,20): [
SyntaxKind[Identifier](540,25): Yield
SyntaxKind[CloseBracketToken](540,26): ]
SyntaxKind[ColonToken](540,28): :
SyntaxKind[LineTerminatorToken](541,2): «line terminator»
SyntaxKind[IndentToken](541,2): «indent»
SyntaxKind[Identifier](541,26): MultiplicativeExpression
SyntaxKind[OpenBracketToken](541,27): [
SyntaxKind[QuestionToken](541,28): ?
SyntaxKind[Identifier](541,33): Yield
SyntaxKind[CloseBracketToken](541,34): ]
SyntaxKind[LineTerminatorToken](542,2): «line terminator»
SyntaxKind[Identifier](542,20): AdditiveExpression
SyntaxKind[OpenBracketToken](542,21): [
SyntaxKind[QuestionToken](542,22): ?
SyntaxKind[Identifier](542,27): Yield
SyntaxKind[CloseBracketToken](542,28): ]
SyntaxKind[Terminal](542,32): `+`
SyntaxKind[Identifier](542,57): MultiplicativeExpression
SyntaxKind[OpenBracketToken](542,58): [
SyntaxKind[QuestionToken](542,59): ?
SyntaxKind[Identifier](542,64): Yield
SyntaxKind[CloseBracketToken](542,65): ]
SyntaxKind[LineTerminatorToken](543,2): «line terminator»
SyntaxKind[Identifier](543,20): AdditiveExpression
SyntaxKind[OpenBracketToken](543,21): [
SyntaxKind[QuestionToken](543,22): ?
SyntaxKind[Identifier](543,27): Yield
SyntaxKind[CloseBracketToken](543,28): ]
SyntaxKind[Terminal](543,32): `-`
SyntaxKind[Identifier](543,57): MultiplicativeExpression
SyntaxKind[OpenBracketToken](543,58): [
SyntaxKind[QuestionToken](543,59): ?
SyntaxKind[Identifier](543,64): Yield
SyntaxKind[CloseBracketToken](543,65): ]
SyntaxKind[LineTerminatorToken](544,1): «line terminator»
SyntaxKind[DedentToken](544,1): «dedent»
SyntaxKind[LineTerminatorToken](545,1): «line terminator»
SyntaxKind[Identifier](545,16): ShiftExpression
SyntaxKind[OpenBracketToken](545,17): [
SyntaxKind[Identifier](545,22): Yield
SyntaxKind[CloseBracketToken](545,23): ]
SyntaxKind[ColonToken](545,25): :
SyntaxKind[LineTerminatorToken](546,2): «line terminator»
SyntaxKind[IndentToken](546,2): «indent»
SyntaxKind[Identifier](546,20): AdditiveExpression
SyntaxKind[OpenBracketToken](546,21): [
SyntaxKind[QuestionToken](546,22): ?
SyntaxKind[Identifier](546,27): Yield
SyntaxKind[CloseBracketToken](546,28): ]
SyntaxKind[LineTerminatorToken](547,2): «line terminator»
SyntaxKind[Identifier](547,17): ShiftExpression
SyntaxKind[OpenBracketToken](547,18): [
SyntaxKind[QuestionToken](547,19): ?
SyntaxKind[Identifier](547,24): Yield
SyntaxKind[CloseBracketToken](547,25): ]
SyntaxKind[Terminal](547,30): `<<`
SyntaxKind[Identifier](547,49): AdditiveExpression
SyntaxKind[OpenBracketToken](547,50): [
SyntaxKind[QuestionToken](547,51): ?
SyntaxKind[Identifier](547,56): Yield
SyntaxKind[CloseBracketToken](547,57): ]
SyntaxKind[LineTerminatorToken](548,2): «line terminator»
SyntaxKind[Identifier](548,17): ShiftExpression
SyntaxKind[OpenBracketToken](548,18): [
SyntaxKind[QuestionToken](548,19): ?
SyntaxKind[Identifier](548,24): Yield
SyntaxKind[CloseBracketToken](548,25): ]
SyntaxKind[Terminal](548,30): `>>`
SyntaxKind[Identifier](548,49): AdditiveExpression
SyntaxKind[OpenBracketToken](548,50): [
SyntaxKind[QuestionToken](548,51): ?
SyntaxKind[Identifier](548,56): Yield
SyntaxKind[CloseBracketToken](548,57): ]
SyntaxKind[LineTerminatorToken](549,2): «line terminator»
SyntaxKind[Identifier](549,17): ShiftExpression
SyntaxKind[OpenBracketToken](549,18): [
SyntaxKind[QuestionToken](549,19): ?
SyntaxKind[Identifier](549,24): Yield
SyntaxKind[CloseBracketToken](549,25): ]
SyntaxKind[Terminal](549,31): `>>>`
SyntaxKind[Identifier](549,50): AdditiveExpression
SyntaxKind[OpenBracketToken](549,51): [
SyntaxKind[QuestionToken](549,52): ?
SyntaxKind[Identifier](549,57): Yield
SyntaxKind[CloseBracketToken](549,58): ]
SyntaxKind[LineTerminatorToken](550,1): «line terminator»
SyntaxKind[DedentToken](550,1): «dedent»
SyntaxKind[LineTerminatorToken](551,1): «line terminator»
SyntaxKind[Identifier](551,21): RelationalExpression
SyntaxKind[OpenBracketToken](551,22): [
SyntaxKind[Identifier](551,24): In
SyntaxKind[CommaToken](551,25): ,
SyntaxKind[Identifier](551,31): Yield
SyntaxKind[CloseBracketToken](551,32): ]
SyntaxKind[ColonToken](551,34): :
SyntaxKind[LineTerminatorToken](552,2): «line terminator»
SyntaxKind[IndentToken](552,2): «indent»
SyntaxKind[Identifier](552,17): ShiftExpression
SyntaxKind[OpenBracketToken](552,18): [
SyntaxKind[QuestionToken](552,19): ?
SyntaxKind[Identifier](552,24): Yield
SyntaxKind[CloseBracketToken](552,25): ]
SyntaxKind[LineTerminatorToken](553,2): «line terminator»
SyntaxKind[Identifier](553,22): RelationalExpression
SyntaxKind[OpenBracketToken](553,23): [
SyntaxKind[QuestionToken](553,24): ?
SyntaxKind[Identifier](553,26): In
SyntaxKind[CommaToken](553,27): ,
SyntaxKind[QuestionToken](553,29): ?
SyntaxKind[Identifier](553,34): Yield
SyntaxKind[CloseBracketToken](553,35): ]
SyntaxKind[Terminal](553,39): `<`
SyntaxKind[Identifier](553,55): ShiftExpression
SyntaxKind[OpenBracketToken](553,56): [
SyntaxKind[QuestionToken](553,57): ?
SyntaxKind[Identifier](553,62): Yield
SyntaxKind[CloseBracketToken](553,63): ]
SyntaxKind[LineTerminatorToken](554,2): «line terminator»
SyntaxKind[Identifier](554,22): RelationalExpression
SyntaxKind[OpenBracketToken](554,23): [
SyntaxKind[QuestionToken](554,24): ?
SyntaxKind[Identifier](554,26): In
SyntaxKind[CommaToken](554,27): ,
SyntaxKind[QuestionToken](554,29): ?
SyntaxKind[Identifier](554,34): Yield
SyntaxKind[CloseBracketToken](554,35): ]
SyntaxKind[Terminal](554,39): `>`
SyntaxKind[Identifier](554,55): ShiftExpression
SyntaxKind[OpenBracketToken](554,56): [
SyntaxKind[QuestionToken](554,57): ?
SyntaxKind[Identifier](554,62): Yield
SyntaxKind[CloseBracketToken](554,63): ]
SyntaxKind[LineTerminatorToken](555,2): «line terminator»
SyntaxKind[Identifier](555,22): RelationalExpression
SyntaxKind[OpenBracketToken](555,23): [
SyntaxKind[QuestionToken](555,24): ?
SyntaxKind[Identifier](555,26): In
SyntaxKind[CommaToken](555,27): ,
SyntaxKind[QuestionToken](555,29): ?
SyntaxKind[Identifier](555,34): Yield
SyntaxKind[CloseBracketToken](555,35): ]
SyntaxKind[Terminal](555,40): `<=`
SyntaxKind[Identifier](555,56): ShiftExpression
SyntaxKind[OpenBracketToken](555,57): [
SyntaxKind[QuestionToken](555,58): ?
SyntaxKind[Identifier](555,63): Yield
SyntaxKind[CloseBracketToken](555,64): ]
SyntaxKind[LineTerminatorToken](556,2): «line terminator»
SyntaxKind[Identifier](556,22): RelationalExpression
SyntaxKind[OpenBracketToken](556,23): [
SyntaxKind[QuestionToken](556,24): ?
SyntaxKind[Identifier](556,26): In
SyntaxKind[CommaToken](556,27): ,
SyntaxKind[QuestionToken](556,29): ?
SyntaxKind[Identifier](556,34): Yield
SyntaxKind[CloseBracketToken](556,35): ]
SyntaxKind[Terminal](556,40): `>=`
SyntaxKind[Identifier](556,56): ShiftExpression
SyntaxKind[OpenBracketToken](556,57): [
SyntaxKind[QuestionToken](556,58): ?
SyntaxKind[Identifier](556,63): Yield
SyntaxKind[CloseBracketToken](556,64): ]
SyntaxKind[LineTerminatorToken](557,2): «line terminator»
SyntaxKind[Identifier](557,22): RelationalExpression
SyntaxKind[OpenBracketToken](557,23): [
SyntaxKind[QuestionToken](557,24): ?
SyntaxKind[Identifier](557,26): In
SyntaxKind[CommaToken](557,27): ,
SyntaxKind[QuestionToken](557,29): ?
SyntaxKind[Identifier](557,34): Yield
SyntaxKind[CloseBracketToken](557,35): ]
SyntaxKind[Terminal](557,48): `instanceof`
SyntaxKind[Identifier](557,64): ShiftExpression
SyntaxKind[OpenBracketToken](557,65): [
SyntaxKind[QuestionToken](557,66): ?
SyntaxKind[Identifier](557,71): Yield
SyntaxKind[CloseBracketToken](557,72): ]
SyntaxKind[LineTerminatorToken](558,2): «line terminator»
SyntaxKind[OpenBracketToken](558,3): [
SyntaxKind[PlusToken](558,4): +
SyntaxKind[Identifier](558,6): In
SyntaxKind[CloseBracketToken](558,7): ]
SyntaxKind[Identifier](558,28): RelationalExpression
SyntaxKind[OpenBracketToken](558,29): [
SyntaxKind[Identifier](558,31): In
SyntaxKind[CommaToken](558,32): ,
SyntaxKind[QuestionToken](558,34): ?
SyntaxKind[Identifier](558,39): Yield
SyntaxKind[CloseBracketToken](558,40): ]
SyntaxKind[Terminal](558,45): `in`
SyntaxKind[Identifier](558,61): ShiftExpression
SyntaxKind[OpenBracketToken](558,62): [
SyntaxKind[QuestionToken](558,63): ?
SyntaxKind[Identifier](558,68): Yield
SyntaxKind[CloseBracketToken](558,69): ]
SyntaxKind[LineTerminatorToken](559,1): «line terminator»
SyntaxKind[DedentToken](559,1): «dedent»
SyntaxKind[LineTerminatorToken](560,1): «line terminator»
SyntaxKind[Identifier](560,19): EqualityExpression
SyntaxKind[OpenBracketToken](560,20): [
SyntaxKind[Identifier](560,22): In
SyntaxKind[CommaToken](560,23): ,
SyntaxKind[Identifier](560,29): Yield
SyntaxKind[CloseBracketToken](560,30): ]
SyntaxKind[ColonToken](560,32): :
SyntaxKind[LineTerminatorToken](561,2): «line terminator»
SyntaxKind[IndentToken](561,2): «indent»
SyntaxKind[Identifier](561,22): RelationalExpression
SyntaxKind[OpenBracketToken](561,23): [
SyntaxKind[QuestionToken](561,24): ?
SyntaxKind[Identifier](561,26): In
SyntaxKind[CommaToken](561,27): ,
SyntaxKind[QuestionToken](561,29): ?
SyntaxKind[Identifier](561,34): Yield
SyntaxKind[CloseBracketToken](561,35): ]
SyntaxKind[LineTerminatorToken](562,2): «line terminator»
SyntaxKind[Identifier](562,20): EqualityExpression
SyntaxKind[OpenBracketToken](562,21): [
SyntaxKind[QuestionToken](562,22): ?
SyntaxKind[Identifier](562,24): In
SyntaxKind[CommaToken](562,25): ,
SyntaxKind[QuestionToken](562,27): ?
SyntaxKind[Identifier](562,32): Yield
SyntaxKind[CloseBracketToken](562,33): ]
SyntaxKind[Terminal](562,38): `==`
SyntaxKind[Identifier](562,59): RelationalExpression
SyntaxKind[OpenBracketToken](562,60): [
SyntaxKind[QuestionToken](562,61): ?
SyntaxKind[Identifier](562,63): In
SyntaxKind[CommaToken](562,64): ,
SyntaxKind[QuestionToken](562,66): ?
SyntaxKind[Identifier](562,71): Yield
SyntaxKind[CloseBracketToken](562,72): ]
SyntaxKind[LineTerminatorToken](563,2): «line terminator»
SyntaxKind[Identifier](563,20): EqualityExpression
SyntaxKind[OpenBracketToken](563,21): [
SyntaxKind[QuestionToken](563,22): ?
SyntaxKind[Identifier](563,24): In
SyntaxKind[CommaToken](563,25): ,
SyntaxKind[QuestionToken](563,27): ?
SyntaxKind[Identifier](563,32): Yield
SyntaxKind[CloseBracketToken](563,33): ]
SyntaxKind[Terminal](563,38): `!=`
SyntaxKind[Identifier](563,59): RelationalExpression
SyntaxKind[OpenBracketToken](563,60): [
SyntaxKind[QuestionToken](563,61): ?
SyntaxKind[Identifier](563,63): In
SyntaxKind[CommaToken](563,64): ,
SyntaxKind[QuestionToken](563,66): ?
SyntaxKind[Identifier](563,71): Yield
SyntaxKind[CloseBracketToken](563,72): ]
SyntaxKind[LineTerminatorToken](564,2): «line terminator»
SyntaxKind[Identifier](564,20): EqualityExpression
SyntaxKind[OpenBracketToken](564,21): [
SyntaxKind[QuestionToken](564,22): ?
SyntaxKind[Identifier](564,24): In
SyntaxKind[CommaToken](564,25): ,
SyntaxKind[QuestionToken](564,27): ?
SyntaxKind[Identifier](564,32): Yield
SyntaxKind[CloseBracketToken](564,33): ]
SyntaxKind[Terminal](564,39): `===`
SyntaxKind[Identifier](564,60): RelationalExpression
SyntaxKind[OpenBracketToken](564,61): [
SyntaxKind[QuestionToken](564,62): ?
SyntaxKind[Identifier](564,64): In
SyntaxKind[CommaToken](564,65): ,
SyntaxKind[QuestionToken](564,67): ?
SyntaxKind[Identifier](564,72): Yield
SyntaxKind[CloseBracketToken](564,73): ]
SyntaxKind[LineTerminatorToken](565,2): «line terminator»
SyntaxKind[Identifier](565,20): EqualityExpression
SyntaxKind[OpenBracketToken](565,21): [
SyntaxKind[QuestionToken](565,22): ?
SyntaxKind[Identifier](565,24): In
SyntaxKind[CommaToken](565,25): ,
SyntaxKind[QuestionToken](565,27): ?
SyntaxKind[Identifier](565,32): Yield
SyntaxKind[CloseBracketToken](565,33): ]
SyntaxKind[Terminal](565,39): `!==`
SyntaxKind[Identifier](565,60): RelationalExpression
SyntaxKind[OpenBracketToken](565,61): [
SyntaxKind[QuestionToken](565,62): ?
SyntaxKind[Identifier](565,64): In
SyntaxKind[CommaToken](565,65): ,
SyntaxKind[QuestionToken](565,67): ?
SyntaxKind[Identifier](565,72): Yield
SyntaxKind[CloseBracketToken](565,73): ]
SyntaxKind[LineTerminatorToken](566,1): «line terminator»
SyntaxKind[DedentToken](566,1): «dedent»
SyntaxKind[LineTerminatorToken](567,1): «line terminator»
SyntaxKind[Identifier](567,21): BitwiseANDExpression
SyntaxKind[OpenBracketToken](567,22): [
SyntaxKind[Identifier](567,24): In
SyntaxKind[CommaToken](567,25): ,
SyntaxKind[Identifier](567,31): Yield
SyntaxKind[CloseBracketToken](567,32): ]
SyntaxKind[ColonToken](567,34): :
SyntaxKind[LineTerminatorToken](568,2): «line terminator»
SyntaxKind[IndentToken](568,2): «indent»
SyntaxKind[Identifier](568,20): EqualityExpression
SyntaxKind[OpenBracketToken](568,21): [
SyntaxKind[QuestionToken](568,22): ?
SyntaxKind[Identifier](568,24): In
SyntaxKind[CommaToken](568,25): ,
SyntaxKind[QuestionToken](568,27): ?
SyntaxKind[Identifier](568,32): Yield
SyntaxKind[CloseBracketToken](568,33): ]
SyntaxKind[LineTerminatorToken](569,2): «line terminator»
SyntaxKind[Identifier](569,22): BitwiseANDExpression
SyntaxKind[OpenBracketToken](569,23): [
SyntaxKind[QuestionToken](569,24): ?
SyntaxKind[Identifier](569,26): In
SyntaxKind[CommaToken](569,27): ,
SyntaxKind[QuestionToken](569,29): ?
SyntaxKind[Identifier](569,34): Yield
SyntaxKind[CloseBracketToken](569,35): ]
SyntaxKind[Terminal](569,39): `&`
SyntaxKind[Identifier](569,58): EqualityExpression
SyntaxKind[OpenBracketToken](569,59): [
SyntaxKind[QuestionToken](569,60): ?
SyntaxKind[Identifier](569,62): In
SyntaxKind[CommaToken](569,63): ,
SyntaxKind[QuestionToken](569,65): ?
SyntaxKind[Identifier](569,70): Yield
SyntaxKind[CloseBracketToken](569,71): ]
SyntaxKind[LineTerminatorToken](570,1): «line terminator»
SyntaxKind[DedentToken](570,1): «dedent»
SyntaxKind[LineTerminatorToken](571,1): «line terminator»
SyntaxKind[Identifier](571,21): BitwiseXORExpression
SyntaxKind[OpenBracketToken](571,22): [
SyntaxKind[Identifier](571,24): In
SyntaxKind[CommaToken](571,25): ,
SyntaxKind[Identifier](571,31): Yield
SyntaxKind[CloseBracketToken](571,32): ]
SyntaxKind[ColonToken](571,34): :
SyntaxKind[LineTerminatorToken](572,2): «line terminator»
SyntaxKind[IndentToken](572,2): «indent»
SyntaxKind[Identifier](572,22): BitwiseANDExpression
SyntaxKind[OpenBracketToken](572,23): [
SyntaxKind[QuestionToken](572,24): ?
SyntaxKind[Identifier](572,26): In
SyntaxKind[CommaToken](572,27): ,
SyntaxKind[QuestionToken](572,29): ?
SyntaxKind[Identifier](572,34): Yield
SyntaxKind[CloseBracketToken](572,35): ]
SyntaxKind[LineTerminatorToken](573,2): «line terminator»
SyntaxKind[Identifier](573,22): BitwiseXORExpression
SyntaxKind[OpenBracketToken](573,23): [
SyntaxKind[QuestionToken](573,24): ?
SyntaxKind[Identifier](573,26): In
SyntaxKind[CommaToken](573,27): ,
SyntaxKind[QuestionToken](573,29): ?
SyntaxKind[Identifier](573,34): Yield
SyntaxKind[CloseBracketToken](573,35): ]
SyntaxKind[Terminal](573,39): `^`
SyntaxKind[Identifier](573,60): BitwiseANDExpression
SyntaxKind[OpenBracketToken](573,61): [
SyntaxKind[QuestionToken](573,62): ?
SyntaxKind[Identifier](573,64): In
SyntaxKind[CommaToken](573,65): ,
SyntaxKind[QuestionToken](573,67): ?
SyntaxKind[Identifier](573,72): Yield
SyntaxKind[CloseBracketToken](573,73): ]
SyntaxKind[LineTerminatorToken](574,1): «line terminator»
SyntaxKind[DedentToken](574,1): «dedent»
SyntaxKind[LineTerminatorToken](575,1): «line terminator»
SyntaxKind[Identifier](575,20): BitwiseORExpression
SyntaxKind[OpenBracketToken](575,21): [
SyntaxKind[Identifier](575,23): In
SyntaxKind[CommaToken](575,24): ,
SyntaxKind[Identifier](575,30): Yield
SyntaxKind[CloseBracketToken](575,31): ]
SyntaxKind[ColonToken](575,33): :
SyntaxKind[LineTerminatorToken](576,2): «line terminator»
SyntaxKind[IndentToken](576,2): «indent»
SyntaxKind[Identifier](576,22): BitwiseXORExpression
SyntaxKind[OpenBracketToken](576,23): [
SyntaxKind[QuestionToken](576,24): ?
SyntaxKind[Identifier](576,26): In
SyntaxKind[CommaToken](576,27): ,
SyntaxKind[QuestionToken](576,29): ?
SyntaxKind[Identifier](576,34): Yield
SyntaxKind[CloseBracketToken](576,35): ]
SyntaxKind[LineTerminatorToken](577,2): «line terminator»
SyntaxKind[Identifier](577,21): BitwiseORExpression
SyntaxKind[OpenBracketToken](577,22): [
SyntaxKind[QuestionToken](577,23): ?
SyntaxKind[Identifier](577,25): In
SyntaxKind[CommaToken](577,26): ,
SyntaxKind[QuestionToken](577,28): ?
SyntaxKind[Identifier](577,33): Yield
SyntaxKind[CloseBracketToken](577,34): ]
SyntaxKind[Terminal](577,38): `|`
SyntaxKind[Identifier](577,59): BitwiseXORExpression
SyntaxKind[OpenBracketToken](577,60): [
SyntaxKind[QuestionToken](577,61): ?
SyntaxKind[Identifier](577,63): In
SyntaxKind[CommaToken](577,64): ,
SyntaxKind[QuestionToken](577,66): ?
SyntaxKind[Identifier](577,71): Yield
SyntaxKind[CloseBracketToken](577,72): ]
SyntaxKind[LineTerminatorToken](578,1): «line terminator»
SyntaxKind[DedentToken](578,1): «dedent»
SyntaxKind[LineTerminatorToken](579,1): «line terminator»
SyntaxKind[Identifier](579,21): LogicalANDExpression
SyntaxKind[OpenBracketToken](579,22): [
SyntaxKind[Identifier](579,24): In
SyntaxKind[CommaToken](579,25): ,
SyntaxKind[Identifier](579,31): Yield
SyntaxKind[CloseBracketToken](579,32): ]
SyntaxKind[ColonToken](579,34): :
SyntaxKind[LineTerminatorToken](580,2): «line terminator»
SyntaxKind[IndentToken](580,2): «indent»
SyntaxKind[Identifier](580,21): BitwiseORExpression
SyntaxKind[OpenBracketToken](580,22): [
SyntaxKind[QuestionToken](580,23): ?
SyntaxKind[Identifier](580,25): In
SyntaxKind[CommaToken](580,26): ,
SyntaxKind[QuestionToken](580,28): ?
SyntaxKind[Identifier](580,33): Yield
SyntaxKind[CloseBracketToken](580,34): ]
SyntaxKind[LineTerminatorToken](581,2): «line terminator»
SyntaxKind[Identifier](581,22): LogicalANDExpression
SyntaxKind[OpenBracketToken](581,23): [
SyntaxKind[QuestionToken](581,24): ?
SyntaxKind[Identifier](581,26): In
SyntaxKind[CommaToken](581,27): ,
SyntaxKind[QuestionToken](581,29): ?
SyntaxKind[Identifier](581,34): Yield
SyntaxKind[CloseBracketToken](581,35): ]
SyntaxKind[Terminal](581,40): `&&`
SyntaxKind[Identifier](581,60): BitwiseORExpression
SyntaxKind[OpenBracketToken](581,61): [
SyntaxKind[QuestionToken](581,62): ?
SyntaxKind[Identifier](581,64): In
SyntaxKind[CommaToken](581,65): ,
SyntaxKind[QuestionToken](581,67): ?
SyntaxKind[Identifier](581,72): Yield
SyntaxKind[CloseBracketToken](581,73): ]
SyntaxKind[LineTerminatorToken](582,1): «line terminator»
SyntaxKind[DedentToken](582,1): «dedent»
SyntaxKind[LineTerminatorToken](583,1): «line terminator»
SyntaxKind[Identifier](583,20): LogicalORExpression
SyntaxKind[OpenBracketToken](583,21): [
SyntaxKind[Identifier](583,23): In
SyntaxKind[CommaToken](583,24): ,
SyntaxKind[Identifier](583,30): Yield
SyntaxKind[CloseBracketToken](583,31): ]
SyntaxKind[ColonToken](583,33): :
SyntaxKind[LineTerminatorToken](584,2): «line terminator»
SyntaxKind[IndentToken](584,2): «indent»
SyntaxKind[Identifier](584,22): LogicalANDExpression
SyntaxKind[OpenBracketToken](584,23): [
SyntaxKind[QuestionToken](584,24): ?
SyntaxKind[Identifier](584,26): In
SyntaxKind[CommaToken](584,27): ,
SyntaxKind[QuestionToken](584,29): ?
SyntaxKind[Identifier](584,34): Yield
SyntaxKind[CloseBracketToken](584,35): ]
SyntaxKind[LineTerminatorToken](585,2): «line terminator»
SyntaxKind[Identifier](585,21): LogicalORExpression
SyntaxKind[OpenBracketToken](585,22): [
SyntaxKind[QuestionToken](585,23): ?
SyntaxKind[Identifier](585,25): In
SyntaxKind[CommaToken](585,26): ,
SyntaxKind[QuestionToken](585,28): ?
SyntaxKind[Identifier](585,33): Yield
SyntaxKind[CloseBracketToken](585,34): ]
SyntaxKind[Terminal](585,39): `||`
SyntaxKind[Identifier](585,60): LogicalANDExpression
SyntaxKind[OpenBracketToken](585,61): [
SyntaxKind[QuestionToken](585,62): ?
SyntaxKind[Identifier](585,64): In
SyntaxKind[CommaToken](585,65): ,
SyntaxKind[QuestionToken](585,67): ?
SyntaxKind[Identifier](585,72): Yield
SyntaxKind[CloseBracketToken](585,73): ]
SyntaxKind[LineTerminatorToken](586,1): «line terminator»
SyntaxKind[DedentToken](586,1): «dedent»
SyntaxKind[LineTerminatorToken](587,1): «line terminator»
SyntaxKind[Identifier](587,22): ConditionalExpression
SyntaxKind[OpenBracketToken](587,23): [
SyntaxKind[Identifier](587,25): In
SyntaxKind[CommaToken](587,26): ,
SyntaxKind[Identifier](587,32): Yield
SyntaxKind[CloseBracketToken](587,33): ]
SyntaxKind[ColonToken](587,35): :
SyntaxKind[LineTerminatorToken](588,2): «line terminator»
SyntaxKind[IndentToken](588,2): «indent»
SyntaxKind[Identifier](588,21): LogicalORExpression
SyntaxKind[OpenBracketToken](588,22): [
SyntaxKind[QuestionToken](588,23): ?
SyntaxKind[Identifier](588,25): In
SyntaxKind[CommaToken](588,26): ,
SyntaxKind[QuestionToken](588,28): ?
SyntaxKind[Identifier](588,33): Yield
SyntaxKind[CloseBracketToken](588,34): ]
SyntaxKind[LineTerminatorToken](589,2): «line terminator»
SyntaxKind[Identifier](589,21): LogicalORExpression
SyntaxKind[OpenBracketToken](589,22): [
SyntaxKind[QuestionToken](589,23): ?
SyntaxKind[Identifier](589,25): In
SyntaxKind[CommaToken](589,26): ,
SyntaxKind[QuestionToken](589,28): ?
SyntaxKind[Identifier](589,33): Yield
SyntaxKind[CloseBracketToken](589,34): ]
SyntaxKind[Terminal](589,38): `?`
SyntaxKind[Identifier](589,59): AssignmentExpression
SyntaxKind[OpenBracketToken](589,60): [
SyntaxKind[Identifier](589,62): In
SyntaxKind[CommaToken](589,63): ,
SyntaxKind[QuestionToken](589,65): ?
SyntaxKind[Identifier](589,70): Yield
SyntaxKind[CloseBracketToken](589,71): ]
SyntaxKind[Terminal](589,75): `:`
SyntaxKind[Identifier](589,96): AssignmentExpression
SyntaxKind[OpenBracketToken](589,97): [
SyntaxKind[QuestionToken](589,98): ?
SyntaxKind[Identifier](589,100): In
SyntaxKind[CommaToken](589,101): ,
SyntaxKind[QuestionToken](589,103): ?
SyntaxKind[Identifier](589,108): Yield
SyntaxKind[CloseBracketToken](589,109): ]
SyntaxKind[LineTerminatorToken](590,1): «line terminator»
SyntaxKind[DedentToken](590,1): «dedent»
SyntaxKind[LineTerminatorToken](591,1): «line terminator»
SyntaxKind[Identifier](591,21): AssignmentExpression
SyntaxKind[OpenBracketToken](591,22): [
SyntaxKind[Identifier](591,24): In
SyntaxKind[CommaToken](591,25): ,
SyntaxKind[Identifier](591,31): Yield
SyntaxKind[CloseBracketToken](591,32): ]
SyntaxKind[ColonToken](591,34): :
SyntaxKind[LineTerminatorToken](592,2): «line terminator»
SyntaxKind[IndentToken](592,2): «indent»
SyntaxKind[Identifier](592,23): ConditionalExpression
SyntaxKind[OpenBracketToken](592,24): [
SyntaxKind[QuestionToken](592,25): ?
SyntaxKind[Identifier](592,27): In
SyntaxKind[CommaToken](592,28): ,
SyntaxKind[QuestionToken](592,30): ?
SyntaxKind[Identifier](592,35): Yield
SyntaxKind[CloseBracketToken](592,36): ]
SyntaxKind[LineTerminatorToken](593,2): «line terminator»
SyntaxKind[OpenBracketToken](593,3): [
SyntaxKind[PlusToken](593,4): +
SyntaxKind[Identifier](593,9): Yield
SyntaxKind[CloseBracketToken](593,10): ]
SyntaxKind[Identifier](593,26): YieldExpression
SyntaxKind[OpenBracketToken](593,27): [
SyntaxKind[QuestionToken](593,28): ?
SyntaxKind[Identifier](593,30): In
SyntaxKind[CloseBracketToken](593,31): ]
SyntaxKind[LineTerminatorToken](594,2): «line terminator»
SyntaxKind[Identifier](594,15): ArrowFunction
SyntaxKind[OpenBracketToken](594,16): [
SyntaxKind[QuestionToken](594,17): ?
SyntaxKind[Identifier](594,19): In
SyntaxKind[CommaToken](594,20): ,
SyntaxKind[QuestionToken](594,22): ?
SyntaxKind[Identifier](594,27): Yield
SyntaxKind[CloseBracketToken](594,28): ]
SyntaxKind[LineTerminatorToken](595,2): «line terminator»
SyntaxKind[Identifier](595,24): LeftHandSideExpression
SyntaxKind[OpenBracketToken](595,25): [
SyntaxKind[QuestionToken](595,26): ?
SyntaxKind[Identifier](595,31): Yield
SyntaxKind[CloseBracketToken](595,32): ]
SyntaxKind[Terminal](595,36): `=`
SyntaxKind[Identifier](595,57): AssignmentExpression
SyntaxKind[OpenBracketToken](595,58): [
SyntaxKind[QuestionToken](595,59): ?
SyntaxKind[Identifier](595,61): In
SyntaxKind[CommaToken](595,62): ,
SyntaxKind[QuestionToken](595,64): ?
SyntaxKind[Identifier](595,69): Yield
SyntaxKind[CloseBracketToken](595,70): ]
SyntaxKind[LineTerminatorToken](596,2): «line terminator»
SyntaxKind[Identifier](596,24): LeftHandSideExpression
SyntaxKind[OpenBracketToken](596,25): [
SyntaxKind[QuestionToken](596,26): ?
SyntaxKind[Identifier](596,31): Yield
SyntaxKind[CloseBracketToken](596,32): ]
SyntaxKind[Identifier](596,51): AssignmentOperator
SyntaxKind[Identifier](596,72): AssignmentExpression
SyntaxKind[OpenBracketToken](596,73): [
SyntaxKind[QuestionToken](596,74): ?
SyntaxKind[Identifier](596,76): In
SyntaxKind[CommaToken](596,77): ,
SyntaxKind[QuestionToken](596,79): ?
SyntaxKind[Identifier](596,84): Yield
SyntaxKind[CloseBracketToken](596,85): ]
SyntaxKind[LineTerminatorToken](597,1): «line terminator»
SyntaxKind[DedentToken](597,1): «dedent»
SyntaxKind[LineTerminatorToken](598,1): «line terminator»
SyntaxKind[Identifier](598,19): AssignmentOperator
SyntaxKind[ColonToken](598,21): :
SyntaxKind[OneKeyword](598,25): one
SyntaxKind[OfKeyword](598,28): of
SyntaxKind[LineTerminatorToken](599,2): «line terminator»
SyntaxKind[IndentToken](599,2): «indent»
SyntaxKind[Terminal](599,6): `*=`
SyntaxKind[Terminal](599,11): `/=`
SyntaxKind[Terminal](599,16): `%=`
SyntaxKind[Terminal](599,21): `+=`
SyntaxKind[Terminal](599,26): `-=`
SyntaxKind[Terminal](599,32): `<<=`
SyntaxKind[Terminal](599,38): `>>=`
SyntaxKind[Terminal](599,45): `>>>=`
SyntaxKind[Terminal](599,50): `&=`
SyntaxKind[Terminal](599,55): `^=`
SyntaxKind[Terminal](599,60): `|=`
SyntaxKind[LineTerminatorToken](600,1): «line terminator»
SyntaxKind[DedentToken](600,1): «dedent»
SyntaxKind[LineTerminatorToken](601,1): «line terminator»
SyntaxKind[Identifier](601,11): Expression
SyntaxKind[OpenBracketToken](601,12): [
SyntaxKind[Identifier](601,14): In
SyntaxKind[CommaToken](601,15): ,
SyntaxKind[Identifier](601,21): Yield
SyntaxKind[CloseBracketToken](601,22): ]
SyntaxKind[ColonToken](601,24): :
SyntaxKind[LineTerminatorToken](602,2): «line terminator»
SyntaxKind[IndentToken](602,2): «indent»
SyntaxKind[Identifier](602,22): AssignmentExpression
SyntaxKind[OpenBracketToken](602,23): [
SyntaxKind[QuestionToken](602,24): ?
SyntaxKind[Identifier](602,26): In
SyntaxKind[CommaToken](602,27): ,
SyntaxKind[QuestionToken](602,29): ?
SyntaxKind[Identifier](602,34): Yield
SyntaxKind[CloseBracketToken](602,35): ]
SyntaxKind[LineTerminatorToken](603,2): «line terminator»
SyntaxKind[Identifier](603,12): Expression
SyntaxKind[OpenBracketToken](603,13): [
SyntaxKind[QuestionToken](603,14): ?
SyntaxKind[Identifier](603,16): In
SyntaxKind[CommaToken](603,17): ,
SyntaxKind[QuestionToken](603,19): ?
SyntaxKind[Identifier](603,24): Yield
SyntaxKind[CloseBracketToken](603,25): ]
SyntaxKind[Terminal](603,29): `,`
SyntaxKind[Identifier](603,50): AssignmentExpression
SyntaxKind[OpenBracketToken](603,51): [
SyntaxKind[QuestionToken](603,52): ?
SyntaxKind[Identifier](603,54): In
SyntaxKind[CommaToken](603,55): ,
SyntaxKind[QuestionToken](603,57): ?
SyntaxKind[Identifier](603,62): Yield
SyntaxKind[CloseBracketToken](603,63): ]
SyntaxKind[LineTerminatorToken](604,1): «line terminator»
SyntaxKind[DedentToken](604,1): «dedent»
SyntaxKind[LineTerminatorToken](605,1): «line terminator»
SyntaxKind[LineTerminatorToken](606,1): «line terminator»
SyntaxKind[LineTerminatorToken](607,1): «line terminator»
SyntaxKind[Identifier](607,10): Statement
SyntaxKind[OpenBracketToken](607,11): [
SyntaxKind[Identifier](607,16): Yield
SyntaxKind[CommaToken](607,17): ,
SyntaxKind[Identifier](607,24): Return
SyntaxKind[CloseBracketToken](607,25): ]
SyntaxKind[ColonToken](607,27): :
SyntaxKind[LineTerminatorToken](608,2): «line terminator»
SyntaxKind[IndentToken](608,2): «indent»
SyntaxKind[Identifier](608,16): BlockStatement
SyntaxKind[OpenBracketToken](608,17): [
SyntaxKind[QuestionToken](608,18): ?
SyntaxKind[Identifier](608,23): Yield
SyntaxKind[CommaToken](608,24): ,
SyntaxKind[QuestionToken](608,26): ?
SyntaxKind[Identifier](608,32): Return
SyntaxKind[CloseBracketToken](608,33): ]
SyntaxKind[LineTerminatorToken](609,2): «line terminator»
SyntaxKind[Identifier](609,19): VariableStatement
SyntaxKind[OpenBracketToken](609,20): [
SyntaxKind[QuestionToken](609,21): ?
SyntaxKind[Identifier](609,26): Yield
SyntaxKind[CloseBracketToken](609,27): ]
SyntaxKind[LineTerminatorToken](610,2): «line terminator»
SyntaxKind[Identifier](610,16): EmptyStatement
SyntaxKind[LineTerminatorToken](611,2): «line terminator»
SyntaxKind[Identifier](611,21): ExpressionStatement
SyntaxKind[OpenBracketToken](611,22): [
SyntaxKind[QuestionToken](611,23): ?
SyntaxKind[Identifier](611,28): Yield
SyntaxKind[CloseBracketToken](611,29): ]
SyntaxKind[LineTerminatorToken](612,2): «line terminator»
SyntaxKind[Identifier](612,13): IfStatement
SyntaxKind[OpenBracketToken](612,14): [
SyntaxKind[QuestionToken](612,15): ?
SyntaxKind[Identifier](612,20): Yield
SyntaxKind[CommaToken](612,21): ,
SyntaxKind[QuestionToken](612,23): ?
SyntaxKind[Identifier](612,29): Return
SyntaxKind[CloseBracketToken](612,30): ]
SyntaxKind[LineTerminatorToken](613,2): «line terminator»
SyntaxKind[Identifier](613,20): BreakableStatement
SyntaxKind[OpenBracketToken](613,21): [
SyntaxKind[QuestionToken](613,22): ?
SyntaxKind[Identifier](613,27): Yield
SyntaxKind[CommaToken](613,28): ,
SyntaxKind[QuestionToken](613,30): ?
SyntaxKind[Identifier](613,36): Return
SyntaxKind[CloseBracketToken](613,37): ]
SyntaxKind[LineTerminatorToken](614,2): «line terminator»
SyntaxKind[Identifier](614,19): ContinueStatement
SyntaxKind[OpenBracketToken](614,20): [
SyntaxKind[QuestionToken](614,21): ?
SyntaxKind[Identifier](614,26): Yield
SyntaxKind[CloseBracketToken](614,27): ]
SyntaxKind[LineTerminatorToken](615,2): «line terminator»
SyntaxKind[Identifier](615,16): BreakStatement
SyntaxKind[OpenBracketToken](615,17): [
SyntaxKind[QuestionToken](615,18): ?
SyntaxKind[Identifier](615,23): Yield
SyntaxKind[CloseBracketToken](615,24): ]
SyntaxKind[LineTerminatorToken](616,2): «line terminator»
SyntaxKind[OpenBracketToken](616,3): [
SyntaxKind[PlusToken](616,4): +
SyntaxKind[Identifier](616,10): Return
SyntaxKind[CloseBracketToken](616,11): ]
SyntaxKind[Identifier](616,27): ReturnStatement
SyntaxKind[OpenBracketToken](616,28): [
SyntaxKind[QuestionToken](616,29): ?
SyntaxKind[Identifier](616,34): Yield
SyntaxKind[CloseBracketToken](616,35): ]
SyntaxKind[LineTerminatorToken](617,2): «line terminator»
SyntaxKind[Identifier](617,15): WithStatement
SyntaxKind[OpenBracketToken](617,16): [
SyntaxKind[QuestionToken](617,17): ?
SyntaxKind[Identifier](617,22): Yield
SyntaxKind[CommaToken](617,23): ,
SyntaxKind[QuestionToken](617,25): ?
SyntaxKind[Identifier](617,31): Return
SyntaxKind[CloseBracketToken](617,32): ]
SyntaxKind[LineTerminatorToken](618,2): «line terminator»
SyntaxKind[Identifier](618,19): LabelledStatement
SyntaxKind[OpenBracketToken](618,20): [
SyntaxKind[QuestionToken](618,21): ?
SyntaxKind[Identifier](618,26): Yield
SyntaxKind[CommaToken](618,27): ,
SyntaxKind[QuestionToken](618,29): ?
SyntaxKind[Identifier](618,35): Return
SyntaxKind[CloseBracketToken](618,36): ]
SyntaxKind[LineTerminatorToken](619,2): «line terminator»
SyntaxKind[Identifier](619,16): ThrowStatement
SyntaxKind[OpenBracketToken](619,17): [
SyntaxKind[QuestionToken](619,18): ?
SyntaxKind[Identifier](619,23): Yield
SyntaxKind[CloseBracketToken](619,24): ]
SyntaxKind[LineTerminatorToken](620,2): «line terminator»
SyntaxKind[Identifier](620,14): TryStatement
SyntaxKind[OpenBracketToken](620,15): [
SyntaxKind[QuestionToken](620,16): ?
SyntaxKind[Identifier](620,21): Yield
SyntaxKind[CommaToken](620,22): ,
SyntaxKind[QuestionToken](620,24): ?
SyntaxKind[Identifier](620,30): Return
SyntaxKind[CloseBracketToken](620,31): ]
SyntaxKind[LineTerminatorToken](621,2): «line terminator»
SyntaxKind[Identifier](621,19): DebuggerStatement
SyntaxKind[LineTerminatorToken](622,1): «line terminator»
SyntaxKind[DedentToken](622,1): «dedent»
SyntaxKind[LineTerminatorToken](623,1): «line terminator»
SyntaxKind[Identifier](623,12): Declaration
SyntaxKind[OpenBracketToken](623,13): [
SyntaxKind[Identifier](623,18): Yield
SyntaxKind[CloseBracketToken](623,19): ]
SyntaxKind[ColonToken](623,21): :
SyntaxKind[LineTerminatorToken](624,2): «line terminator»
SyntaxKind[IndentToken](624,2): «indent»
SyntaxKind[Identifier](624,22): HoistableDeclaration
SyntaxKind[OpenBracketToken](624,23): [
SyntaxKind[QuestionToken](624,24): ?
SyntaxKind[Identifier](624,29): Yield
SyntaxKind[CloseBracketToken](624,30): ]
SyntaxKind[LineTerminatorToken](625,2): «line terminator»
SyntaxKind[Identifier](625,18): ClassDeclaration
SyntaxKind[OpenBracketToken](625,19): [
SyntaxKind[QuestionToken](625,20): ?
SyntaxKind[Identifier](625,25): Yield
SyntaxKind[CloseBracketToken](625,26): ]
SyntaxKind[LineTerminatorToken](626,2): «line terminator»
SyntaxKind[Identifier](626,20): LexicalDeclaration
SyntaxKind[OpenBracketToken](626,21): [
SyntaxKind[Identifier](626,23): In
SyntaxKind[CommaToken](626,24): ,
SyntaxKind[QuestionToken](626,26): ?
SyntaxKind[Identifier](626,31): Yield
SyntaxKind[CloseBracketToken](626,32): ]
SyntaxKind[LineTerminatorToken](627,1): «line terminator»
SyntaxKind[DedentToken](627,1): «dedent»
SyntaxKind[LineTerminatorToken](628,1): «line terminator»
SyntaxKind[Identifier](628,21): HoistableDeclaration
SyntaxKind[OpenBracketToken](628,22): [
SyntaxKind[Identifier](628,27): Yield
SyntaxKind[CommaToken](628,28): ,
SyntaxKind[Identifier](628,36): Default
SyntaxKind[CloseBracketToken](628,37): ]
SyntaxKind[ColonToken](628,39): :
SyntaxKind[LineTerminatorToken](629,2): «line terminator»
SyntaxKind[IndentToken](629,2): «indent»
SyntaxKind[Identifier](629,21): FunctionDeclaration
SyntaxKind[OpenBracketToken](629,22): [
SyntaxKind[QuestionToken](629,23): ?
SyntaxKind[Identifier](629,28): Yield
SyntaxKind[CommaToken](629,29): ,
SyntaxKind[QuestionToken](629,31): ?
SyntaxKind[Identifier](629,38): Default
SyntaxKind[CloseBracketToken](629,39): ]
SyntaxKind[LineTerminatorToken](630,2): «line terminator»
SyntaxKind[Identifier](630,22): GeneratorDeclaration
SyntaxKind[OpenBracketToken](630,23): [
SyntaxKind[QuestionToken](630,24): ?
SyntaxKind[Identifier](630,29): Yield
SyntaxKind[CommaToken](630,30): ,
SyntaxKind[QuestionToken](630,32): ?
SyntaxKind[Identifier](630,39): Default
SyntaxKind[CloseBracketToken](630,40): ]
SyntaxKind[LineTerminatorToken](631,1): «line terminator»
SyntaxKind[DedentToken](631,1): «dedent»
SyntaxKind[LineTerminatorToken](632,1): «line terminator»
SyntaxKind[Identifier](632,19): BreakableStatement
SyntaxKind[OpenBracketToken](632,20): [
SyntaxKind[Identifier](632,25): Yield
SyntaxKind[CommaToken](632,26): ,
SyntaxKind[Identifier](632,33): Return
SyntaxKind[CloseBracketToken](632,34): ]
SyntaxKind[ColonToken](632,36): :
SyntaxKind[LineTerminatorToken](633,2): «line terminator»
SyntaxKind[IndentToken](633,2): «indent»
SyntaxKind[Identifier](633,20): IterationStatement
SyntaxKind[OpenBracketToken](633,21): [
SyntaxKind[QuestionToken](633,22): ?
SyntaxKind[Identifier](633,27): Yield
SyntaxKind[CommaToken](633,28): ,
SyntaxKind[QuestionToken](633,30): ?
SyntaxKind[Identifier](633,36): Return
SyntaxKind[CloseBracketToken](633,37): ]
SyntaxKind[LineTerminatorToken](634,2): «line terminator»
SyntaxKind[Identifier](634,17): SwitchStatement
SyntaxKind[OpenBracketToken](634,18): [
SyntaxKind[QuestionToken](634,19): ?
SyntaxKind[Identifier](634,24): Yield
SyntaxKind[CommaToken](634,25): ,
SyntaxKind[QuestionToken](634,27): ?
SyntaxKind[Identifier](634,33): Return
SyntaxKind[CloseBracketToken](634,34): ]
SyntaxKind[LineTerminatorToken](635,1): «line terminator»
SyntaxKind[DedentToken](635,1): «dedent»
SyntaxKind[LineTerminatorToken](636,1): «line terminator»
SyntaxKind[Identifier](636,15): BlockStatement
SyntaxKind[OpenBracketToken](636,16): [
SyntaxKind[Identifier](636,21): Yield
SyntaxKind[CommaToken](636,22): ,
SyntaxKind[Identifier](636,29): Return
SyntaxKind[CloseBracketToken](636,30): ]
SyntaxKind[ColonToken](636,32): :
SyntaxKind[LineTerminatorToken](637,2): «line terminator»
SyntaxKind[IndentToken](637,2): «indent»
SyntaxKind[Identifier](637,7): Block
SyntaxKind[OpenBracketToken](637,8): [
SyntaxKind[QuestionToken](637,9): ?
SyntaxKind[Identifier](637,14): Yield
SyntaxKind[CommaToken](637,15): ,
SyntaxKind[QuestionToken](637,17): ?
SyntaxKind[Identifier](637,23): Return
SyntaxKind[CloseBracketToken](637,24): ]
SyntaxKind[LineTerminatorToken](638,1): «line terminator»
SyntaxKind[DedentToken](638,1): «dedent»
SyntaxKind[LineTerminatorToken](639,1): «line terminator»
SyntaxKind[Identifier](639,6): Block
SyntaxKind[OpenBracketToken](639,7): [
SyntaxKind[Identifier](639,12): Yield
SyntaxKind[CommaToken](639,13): ,
SyntaxKind[Identifier](639,20): Return
SyntaxKind[CloseBracketToken](639,21): ]
SyntaxKind[ColonToken](639,23): :
SyntaxKind[LineTerminatorToken](640,2): «line terminator»
SyntaxKind[IndentToken](640,2): «indent»
SyntaxKind[Terminal](640,5): `{`
SyntaxKind[Identifier](640,19): StatementList
SyntaxKind[OpenBracketToken](640,20): [
SyntaxKind[QuestionToken](640,21): ?
SyntaxKind[Identifier](640,26): Yield
SyntaxKind[CommaToken](640,27): ,
SyntaxKind[QuestionToken](640,29): ?
SyntaxKind[Identifier](640,35): Return
SyntaxKind[CloseBracketToken](640,36): ]
SyntaxKind[QuestionToken](640,37): ?
SyntaxKind[Terminal](640,41): `}`
SyntaxKind[LineTerminatorToken](641,1): «line terminator»
SyntaxKind[DedentToken](641,1): «dedent»
SyntaxKind[LineTerminatorToken](642,1): «line terminator»
SyntaxKind[Identifier](642,14): StatementList
SyntaxKind[OpenBracketToken](642,15): [
SyntaxKind[Identifier](642,20): Yield
SyntaxKind[CommaToken](642,21): ,
SyntaxKind[Identifier](642,28): Return
SyntaxKind[CloseBracketToken](642,29): ]
SyntaxKind[ColonToken](642,31): :
SyntaxKind[LineTerminatorToken](643,2): «line terminator»
SyntaxKind[IndentToken](643,2): «indent»
SyntaxKind[Identifier](643,19): StatementListItem
SyntaxKind[OpenBracketToken](643,20): [
SyntaxKind[QuestionToken](643,21): ?
SyntaxKind[Identifier](643,26): Yield
SyntaxKind[CommaToken](643,27): ,
SyntaxKind[QuestionToken](643,29): ?
SyntaxKind[Identifier](643,35): Return
SyntaxKind[CloseBracketToken](643,36): ]
SyntaxKind[LineTerminatorToken](644,2): «line terminator»
SyntaxKind[Identifier](644,15): StatementList
SyntaxKind[OpenBracketToken](644,16): [
SyntaxKind[QuestionToken](644,17): ?
SyntaxKind[Identifier](644,22): Yield
SyntaxKind[CommaToken](644,23): ,
SyntaxKind[QuestionToken](644,25): ?
SyntaxKind[Identifier](644,31): Return
SyntaxKind[CloseBracketToken](644,32): ]
SyntaxKind[Identifier](644,50): StatementListItem
SyntaxKind[OpenBracketToken](644,51): [
SyntaxKind[QuestionToken](644,52): ?
SyntaxKind[Identifier](644,57): Yield
SyntaxKind[CommaToken](644,58): ,
SyntaxKind[QuestionToken](644,60): ?
SyntaxKind[Identifier](644,66): Return
SyntaxKind[CloseBracketToken](644,67): ]
SyntaxKind[LineTerminatorToken](645,1): «line terminator»
SyntaxKind[DedentToken](645,1): «dedent»
SyntaxKind[LineTerminatorToken](646,1): «line terminator»
SyntaxKind[Identifier](646,18): StatementListItem
SyntaxKind[OpenBracketToken](646,19): [
SyntaxKind[Identifier](646,24): Yield
SyntaxKind[CommaToken](646,25): ,
SyntaxKind[Identifier](646,32): Return
SyntaxKind[CloseBracketToken](646,33): ]
SyntaxKind[ColonToken](646,35): :
SyntaxKind[LineTerminatorToken](647,2): «line terminator»
SyntaxKind[IndentToken](647,2): «indent»
SyntaxKind[Identifier](647,11): Statement
SyntaxKind[OpenBracketToken](647,12): [
SyntaxKind[QuestionToken](647,13): ?
SyntaxKind[Identifier](647,18): Yield
SyntaxKind[CommaToken](647,19): ,
SyntaxKind[QuestionToken](647,21): ?
SyntaxKind[Identifier](647,27): Return
SyntaxKind[CloseBracketToken](647,28): ]
SyntaxKind[LineTerminatorToken](648,2): «line terminator»
SyntaxKind[Identifier](648,13): Declaration
SyntaxKind[OpenBracketToken](648,14): [
SyntaxKind[QuestionToken](648,15): ?
SyntaxKind[Identifier](648,20): Yield
SyntaxKind[CloseBracketToken](648,21): ]
SyntaxKind[LineTerminatorToken](649,1): «line terminator»
SyntaxKind[DedentToken](649,1): «dedent»
SyntaxKind[LineTerminatorToken](650,1): «line terminator»
SyntaxKind[Identifier](650,19): LexicalDeclaration
SyntaxKind[OpenBracketToken](650,20): [
SyntaxKind[Identifier](650,22): In
SyntaxKind[CommaToken](650,23): ,
SyntaxKind[Identifier](650,29): Yield
SyntaxKind[CloseBracketToken](650,30): ]
SyntaxKind[ColonToken](650,32): :
SyntaxKind[LineTerminatorToken](651,2): «line terminator»
SyntaxKind[IndentToken](651,2): «indent»
SyntaxKind[Identifier](651,12): LetOrConst
SyntaxKind[Identifier](651,24): BindingList
SyntaxKind[OpenBracketToken](651,25): [
SyntaxKind[QuestionToken](651,26): ?
SyntaxKind[Identifier](651,28): In
SyntaxKind[CommaToken](651,29): ,
SyntaxKind[QuestionToken](651,31): ?
SyntaxKind[Identifier](651,36): Yield
SyntaxKind[CloseBracketToken](651,37): ]
SyntaxKind[Terminal](651,41): `;`
SyntaxKind[LineTerminatorToken](652,1): «line terminator»
SyntaxKind[DedentToken](652,1): «dedent»
SyntaxKind[LineTerminatorToken](653,1): «line terminator»
SyntaxKind[Identifier](653,11): LetOrConst
SyntaxKind[ColonToken](653,13): :
SyntaxKind[LineTerminatorToken](654,2): «line terminator»
SyntaxKind[IndentToken](654,2): «indent»
SyntaxKind[Terminal](654,7): `let`
SyntaxKind[LineTerminatorToken](655,2): «line terminator»
SyntaxKind[Terminal](655,9): `const`
SyntaxKind[LineTerminatorToken](656,1): «line terminator»
SyntaxKind[DedentToken](656,1): «dedent»
SyntaxKind[LineTerminatorToken](657,1): «line terminator»
SyntaxKind[Identifier](657,12): BindingList
SyntaxKind[OpenBracketToken](657,13): [
SyntaxKind[Identifier](657,15): In
SyntaxKind[CommaToken](657,16): ,
SyntaxKind[Identifier](657,22): Yield
SyntaxKind[CloseBracketToken](657,23): ]
SyntaxKind[ColonToken](657,25): :
SyntaxKind[LineTerminatorToken](658,2): «line terminator»
SyntaxKind[IndentToken](658,2): «indent»
SyntaxKind[Identifier](658,16): LexicalBinding
SyntaxKind[OpenBracketToken](658,17): [
SyntaxKind[QuestionToken](658,18): ?
SyntaxKind[Identifier](658,20): In
SyntaxKind[CommaToken](658,21): ,
SyntaxKind[QuestionToken](658,23): ?
SyntaxKind[Identifier](658,28): Yield
SyntaxKind[CloseBracketToken](658,29): ]
SyntaxKind[LineTerminatorToken](659,2): «line terminator»
SyntaxKind[Identifier](659,13): BindingList
SyntaxKind[OpenBracketToken](659,14): [
SyntaxKind[QuestionToken](659,15): ?
SyntaxKind[Identifier](659,17): In
SyntaxKind[CommaToken](659,18): ,
SyntaxKind[QuestionToken](659,20): ?
SyntaxKind[Identifier](659,25): Yield
SyntaxKind[CloseBracketToken](659,26): ]
SyntaxKind[Terminal](659,30): `,`
SyntaxKind[Identifier](659,45): LexicalBinding
SyntaxKind[OpenBracketToken](659,46): [
SyntaxKind[QuestionToken](659,47): ?
SyntaxKind[Identifier](659,49): In
SyntaxKind[CommaToken](659,50): ,
SyntaxKind[QuestionToken](659,52): ?
SyntaxKind[Identifier](659,57): Yield
SyntaxKind[CloseBracketToken](659,58): ]
SyntaxKind[LineTerminatorToken](660,1): «line terminator»
SyntaxKind[DedentToken](660,1): «dedent»
SyntaxKind[LineTerminatorToken](661,1): «line terminator»
SyntaxKind[Identifier](661,15): LexicalBinding
SyntaxKind[OpenBracketToken](661,16): [
SyntaxKind[Identifier](661,18): In
SyntaxKind[CommaToken](661,19): ,
SyntaxKind[Identifier](661,25): Yield
SyntaxKind[CloseBracketToken](661,26): ]
SyntaxKind[ColonToken](661,29): :
SyntaxKind[LineTerminatorToken](662,2): «line terminator»
SyntaxKind[IndentToken](662,2): «indent»
SyntaxKind[Identifier](662,19): BindingIdentifier
SyntaxKind[OpenBracketToken](662,20): [
SyntaxKind[QuestionToken](662,21): ?
SyntaxKind[Identifier](662,26): Yield
SyntaxKind[CloseBracketToken](662,27): ]
SyntaxKind[Identifier](662,39): Initializer
SyntaxKind[OpenBracketToken](662,40): [
SyntaxKind[QuestionToken](662,41): ?
SyntaxKind[Identifier](662,43): In
SyntaxKind[CommaToken](662,44): ,
SyntaxKind[QuestionToken](662,46): ?
SyntaxKind[Identifier](662,51): Yield
SyntaxKind[CloseBracketToken](662,52): ]
SyntaxKind[QuestionToken](662,53): ?
SyntaxKind[LineTerminatorToken](663,2): «line terminator»
SyntaxKind[Identifier](663,16): BindingPattern
SyntaxKind[OpenBracketToken](663,17): [
SyntaxKind[QuestionToken](663,18): ?
SyntaxKind[Identifier](663,23): Yield
SyntaxKind[CloseBracketToken](663,24): ]
SyntaxKind[Identifier](663,36): Initializer
SyntaxKind[OpenBracketToken](663,37): [
SyntaxKind[QuestionToken](663,38): ?
SyntaxKind[Identifier](663,40): In
SyntaxKind[CommaToken](663,41): ,
SyntaxKind[QuestionToken](663,43): ?
SyntaxKind[Identifier](663,48): Yield
SyntaxKind[CloseBracketToken](663,49): ]
SyntaxKind[LineTerminatorToken](664,1): «line terminator»
SyntaxKind[DedentToken](664,1): «dedent»
SyntaxKind[LineTerminatorToken](665,1): «line terminator»
SyntaxKind[Identifier](665,18): VariableStatement
SyntaxKind[OpenBracketToken](665,19): [
SyntaxKind[Identifier](665,24): Yield
SyntaxKind[CloseBracketToken](665,25): ]
SyntaxKind[ColonToken](665,27): :
SyntaxKind[LineTerminatorToken](666,2): «line terminator»
SyntaxKind[IndentToken](666,2): «indent»
SyntaxKind[Terminal](666,7): `var`
SyntaxKind[Identifier](666,31): VariableDeclarationList
SyntaxKind[OpenBracketToken](666,32): [
SyntaxKind[Identifier](666,34): In
SyntaxKind[CommaToken](666,35): ,
SyntaxKind[QuestionToken](666,37): ?
SyntaxKind[Identifier](666,42): Yield
SyntaxKind[CloseBracketToken](666,43): ]
SyntaxKind[Terminal](666,47): `;`
SyntaxKind[LineTerminatorToken](667,1): «line terminator»
SyntaxKind[DedentToken](667,1): «dedent»
SyntaxKind[LineTerminatorToken](668,1): «line terminator»
SyntaxKind[Identifier](668,24): VariableDeclarationList
SyntaxKind[OpenBracketToken](668,25): [
SyntaxKind[Identifier](668,27): In
SyntaxKind[CommaToken](668,28): ,
SyntaxKind[Identifier](668,34): Yield
SyntaxKind[CloseBracketToken](668,35): ]
SyntaxKind[ColonToken](668,37): :
SyntaxKind[LineTerminatorToken](669,2): «line terminator»
SyntaxKind[IndentToken](669,2): «indent»
SyntaxKind[Identifier](669,21): VariableDeclaration
SyntaxKind[OpenBracketToken](669,22): [
SyntaxKind[QuestionToken](669,23): ?
SyntaxKind[Identifier](669,25): In
SyntaxKind[CommaToken](669,26): ,
SyntaxKind[QuestionToken](669,28): ?
SyntaxKind[Identifier](669,33): Yield
SyntaxKind[CloseBracketToken](669,34): ]
SyntaxKind[LineTerminatorToken](670,2): «line terminator»
SyntaxKind[Identifier](670,25): VariableDeclarationList
SyntaxKind[OpenBracketToken](670,26): [
SyntaxKind[QuestionToken](670,27): ?
SyntaxKind[Identifier](670,29): In
SyntaxKind[CommaToken](670,30): ,
SyntaxKind[QuestionToken](670,32): ?
SyntaxKind[Identifier](670,37): Yield
SyntaxKind[CloseBracketToken](670,38): ]
SyntaxKind[Terminal](670,42): `,`
SyntaxKind[Identifier](670,62): VariableDeclaration
SyntaxKind[OpenBracketToken](670,63): [
SyntaxKind[QuestionToken](670,64): ?
SyntaxKind[Identifier](670,66): In
SyntaxKind[CommaToken](670,67): ,
SyntaxKind[QuestionToken](670,69): ?
SyntaxKind[Identifier](670,74): Yield
SyntaxKind[CloseBracketToken](670,75): ]
SyntaxKind[LineTerminatorToken](671,1): «line terminator»
SyntaxKind[DedentToken](671,1): «dedent»
SyntaxKind[LineTerminatorToken](672,1): «line terminator»
SyntaxKind[Identifier](672,20): VariableDeclaration
SyntaxKind[OpenBracketToken](672,21): [
SyntaxKind[Identifier](672,23): In
SyntaxKind[CommaToken](672,24): ,
SyntaxKind[Identifier](672,30): Yield
SyntaxKind[CloseBracketToken](672,31): ]
SyntaxKind[ColonToken](672,33): :
SyntaxKind[LineTerminatorToken](673,2): «line terminator»
SyntaxKind[IndentToken](673,2): «indent»
SyntaxKind[Identifier](673,19): BindingIdentifier
SyntaxKind[OpenBracketToken](673,20): [
SyntaxKind[QuestionToken](673,21): ?
SyntaxKind[Identifier](673,26): Yield
SyntaxKind[CloseBracketToken](673,27): ]
SyntaxKind[Identifier](673,39): Initializer
SyntaxKind[OpenBracketToken](673,40): [
SyntaxKind[QuestionToken](673,41): ?
SyntaxKind[Identifier](673,43): In
SyntaxKind[CommaToken](673,44): ,
SyntaxKind[QuestionToken](673,46): ?
SyntaxKind[Identifier](673,51): Yield
SyntaxKind[CloseBracketToken](673,52): ]
SyntaxKind[QuestionToken](673,53): ?
SyntaxKind[LineTerminatorToken](674,2): «line terminator»
SyntaxKind[Identifier](674,16): BindingPattern
SyntaxKind[OpenBracketToken](674,17): [
SyntaxKind[QuestionToken](674,18): ?
SyntaxKind[Identifier](674,23): Yield
SyntaxKind[CloseBracketToken](674,24): ]
SyntaxKind[Identifier](674,36): Initializer
SyntaxKind[OpenBracketToken](674,37): [
SyntaxKind[QuestionToken](674,38): ?
SyntaxKind[Identifier](674,40): In
SyntaxKind[CommaToken](674,41): ,
SyntaxKind[QuestionToken](674,43): ?
SyntaxKind[Identifier](674,48): Yield
SyntaxKind[CloseBracketToken](674,49): ]
SyntaxKind[LineTerminatorToken](675,1): «line terminator»
SyntaxKind[DedentToken](675,1): «dedent»
SyntaxKind[LineTerminatorToken](676,1): «line terminator»
SyntaxKind[Identifier](676,15): BindingPattern
SyntaxKind[OpenBracketToken](676,16): [
SyntaxKind[Identifier](676,21): Yield
SyntaxKind[CloseBracketToken](676,22): ]
SyntaxKind[ColonToken](676,24): :
SyntaxKind[LineTerminatorToken](677,2): «line terminator»
SyntaxKind[IndentToken](677,2): «indent»
SyntaxKind[Identifier](677,22): ObjectBindingPattern
SyntaxKind[OpenBracketToken](677,23): [
SyntaxKind[QuestionToken](677,24): ?
SyntaxKind[Identifier](677,29): Yield
SyntaxKind[CloseBracketToken](677,30): ]
SyntaxKind[LineTerminatorToken](678,2): «line terminator»
SyntaxKind[Identifier](678,21): ArrayBindingPattern
SyntaxKind[OpenBracketToken](678,22): [
SyntaxKind[QuestionToken](678,23): ?
SyntaxKind[Identifier](678,28): Yield
SyntaxKind[CloseBracketToken](678,29): ]
SyntaxKind[LineTerminatorToken](679,1): «line terminator»
SyntaxKind[DedentToken](679,1): «dedent»
SyntaxKind[LineTerminatorToken](680,1): «line terminator»
SyntaxKind[Identifier](680,21): ObjectBindingPattern
SyntaxKind[OpenBracketToken](680,22): [
SyntaxKind[Identifier](680,27): Yield
SyntaxKind[CloseBracketToken](680,28): ]
SyntaxKind[ColonToken](680,30): :
SyntaxKind[LineTerminatorToken](681,2): «line terminator»
SyntaxKind[IndentToken](681,2): «indent»
SyntaxKind[Terminal](681,5): `{`
SyntaxKind[Terminal](681,9): `}`
SyntaxKind[LineTerminatorToken](682,2): «line terminator»
SyntaxKind[Terminal](682,5): `{`
SyntaxKind[Identifier](682,25): BindingPropertyList
SyntaxKind[OpenBracketToken](682,26): [
SyntaxKind[QuestionToken](682,27): ?
SyntaxKind[Identifier](682,32): Yield
SyntaxKind[CloseBracketToken](682,33): ]
SyntaxKind[Terminal](682,37): `}`
SyntaxKind[LineTerminatorToken](683,2): «line terminator»
SyntaxKind[Terminal](683,5): `{`
SyntaxKind[Identifier](683,25): BindingPropertyList
SyntaxKind[OpenBracketToken](683,26): [
SyntaxKind[QuestionToken](683,27): ?
SyntaxKind[Identifier](683,32): Yield
SyntaxKind[CloseBracketToken](683,33): ]
SyntaxKind[Terminal](683,37): `,`
SyntaxKind[Terminal](683,41): `}`
SyntaxKind[LineTerminatorToken](684,1): «line terminator»
SyntaxKind[DedentToken](684,1): «dedent»
SyntaxKind[LineTerminatorToken](685,1): «line terminator»
SyntaxKind[Identifier](685,20): ArrayBindingPattern
SyntaxKind[OpenBracketToken](685,21): [
SyntaxKind[Identifier](685,26): Yield
SyntaxKind[CloseBracketToken](685,27): ]
SyntaxKind[ColonToken](685,29): :
SyntaxKind[LineTerminatorToken](686,2): «line terminator»
SyntaxKind[IndentToken](686,2): «indent»
SyntaxKind[Terminal](686,5): `[`
SyntaxKind[Identifier](686,13): Elision
SyntaxKind[QuestionToken](686,14): ?
SyntaxKind[Identifier](686,33): BindingRestElement
SyntaxKind[OpenBracketToken](686,34): [
SyntaxKind[QuestionToken](686,35): ?
SyntaxKind[Identifier](686,40): Yield
SyntaxKind[CloseBracketToken](686,41): ]
SyntaxKind[QuestionToken](686,42): ?
SyntaxKind[Terminal](686,46): `]`
SyntaxKind[LineTerminatorToken](687,2): «line terminator»
SyntaxKind[Terminal](687,5): `[`
SyntaxKind[Identifier](687,24): BindingElementList
SyntaxKind[OpenBracketToken](687,25): [
SyntaxKind[QuestionToken](687,26): ?
SyntaxKind[Identifier](687,31): Yield
SyntaxKind[CloseBracketToken](687,32): ]
SyntaxKind[Terminal](687,36): `]`
SyntaxKind[LineTerminatorToken](688,2): «line terminator»
SyntaxKind[Terminal](688,5): `[`
SyntaxKind[Identifier](688,24): BindingElementList
SyntaxKind[OpenBracketToken](688,25): [
SyntaxKind[QuestionToken](688,26): ?
SyntaxKind[Identifier](688,31): Yield
SyntaxKind[CloseBracketToken](688,32): ]
SyntaxKind[Terminal](688,36): `,`
SyntaxKind[Identifier](688,44): Elision
SyntaxKind[QuestionToken](688,45): ?
SyntaxKind[Identifier](688,64): BindingRestElement
SyntaxKind[OpenBracketToken](688,65): [
SyntaxKind[QuestionToken](688,66): ?
SyntaxKind[Identifier](688,71): Yield
SyntaxKind[CloseBracketToken](688,72): ]
SyntaxKind[QuestionToken](688,73): ?
SyntaxKind[Terminal](688,77): `]`
SyntaxKind[LineTerminatorToken](689,1): «line terminator»
SyntaxKind[DedentToken](689,1): «dedent»
SyntaxKind[LineTerminatorToken](690,1): «line terminator»
SyntaxKind[Identifier](690,20): BindingPropertyList
SyntaxKind[OpenBracketToken](690,21): [
SyntaxKind[Identifier](690,26): Yield
SyntaxKind[CloseBracketToken](690,27): ]
SyntaxKind[ColonToken](690,29): :
SyntaxKind[LineTerminatorToken](691,2): «line terminator»
SyntaxKind[IndentToken](691,2): «indent»
SyntaxKind[Identifier](691,17): BindingProperty
SyntaxKind[OpenBracketToken](691,18): [
SyntaxKind[QuestionToken](691,19): ?
SyntaxKind[Identifier](691,24): Yield
SyntaxKind[CloseBracketToken](691,25): ]
SyntaxKind[LineTerminatorToken](692,2): «line terminator»
SyntaxKind[Identifier](692,21): BindingPropertyList
SyntaxKind[OpenBracketToken](692,22): [
SyntaxKind[QuestionToken](692,23): ?
SyntaxKind[Identifier](692,28): Yield
SyntaxKind[CloseBracketToken](692,29): ]
SyntaxKind[Terminal](692,33): `,`
SyntaxKind[Identifier](692,49): BindingProperty
SyntaxKind[OpenBracketToken](692,50): [
SyntaxKind[QuestionToken](692,51): ?
SyntaxKind[Identifier](692,56): Yield
SyntaxKind[CloseBracketToken](692,57): ]
SyntaxKind[LineTerminatorToken](693,1): «line terminator»
SyntaxKind[DedentToken](693,1): «dedent»
SyntaxKind[LineTerminatorToken](694,1): «line terminator»
SyntaxKind[Identifier](694,19): BindingElementList
SyntaxKind[OpenBracketToken](694,20): [
SyntaxKind[Identifier](694,25): Yield
SyntaxKind[CloseBracketToken](694,26): ]
SyntaxKind[ColonToken](694,28): :
SyntaxKind[LineTerminatorToken](695,2): «line terminator»
SyntaxKind[IndentToken](695,2): «indent»
SyntaxKind[Identifier](695,23): BindingElisionElement
SyntaxKind[OpenBracketToken](695,24): [
SyntaxKind[QuestionToken](695,25): ?
SyntaxKind[Identifier](695,30): Yield
SyntaxKind[CloseBracketToken](695,31): ]
SyntaxKind[LineTerminatorToken](696,2): «line terminator»
SyntaxKind[Identifier](696,20): BindingElementList
SyntaxKind[OpenBracketToken](696,21): [
SyntaxKind[QuestionToken](696,22): ?
SyntaxKind[Identifier](696,27): Yield
SyntaxKind[CloseBracketToken](696,28): ]
SyntaxKind[Terminal](696,32): `,`
SyntaxKind[Identifier](696,54): BindingElisionElement
SyntaxKind[OpenBracketToken](696,55): [
SyntaxKind[QuestionToken](696,56): ?
SyntaxKind[Identifier](696,61): Yield
SyntaxKind[CloseBracketToken](696,62): ]
SyntaxKind[LineTerminatorToken](697,1): «line terminator»
SyntaxKind[DedentToken](697,1): «dedent»
SyntaxKind[LineTerminatorToken](698,1): «line terminator»
SyntaxKind[Identifier](698,22): BindingElisionElement
SyntaxKind[OpenBracketToken](698,23): [
SyntaxKind[Identifier](698,28): Yield
SyntaxKind[CloseBracketToken](698,29): ]
SyntaxKind[ColonToken](698,31): :
SyntaxKind[LineTerminatorToken](699,2): «line terminator»
SyntaxKind[IndentToken](699,2): «indent»
SyntaxKind[Identifier](699,9): Elision
SyntaxKind[QuestionToken](699,10): ?
SyntaxKind[Identifier](699,25): BindingElement
SyntaxKind[OpenBracketToken](699,26): [
SyntaxKind[QuestionToken](699,27): ?
SyntaxKind[Identifier](699,32): Yield
SyntaxKind[CloseBracketToken](699,33): ]
SyntaxKind[LineTerminatorToken](700,1): «line terminator»
SyntaxKind[DedentToken](700,1): «dedent»
SyntaxKind[LineTerminatorToken](701,1): «line terminator»
SyntaxKind[Identifier](701,16): BindingProperty
SyntaxKind[OpenBracketToken](701,17): [
SyntaxKind[Identifier](701,22): Yield
SyntaxKind[CloseBracketToken](701,23): ]
SyntaxKind[ColonToken](701,25): :
SyntaxKind[LineTerminatorToken](702,2): «line terminator»
SyntaxKind[IndentToken](702,2): «indent»
SyntaxKind[Identifier](702,19): SingleNameBinding
SyntaxKind[OpenBracketToken](702,20): [
SyntaxKind[QuestionToken](702,21): ?
SyntaxKind[Identifier](702,26): Yield
SyntaxKind[CloseBracketToken](702,27): ]
SyntaxKind[LineTerminatorToken](703,2): «line terminator»
SyntaxKind[Identifier](703,14): PropertyName
SyntaxKind[OpenBracketToken](703,15): [
SyntaxKind[QuestionToken](703,16): ?
SyntaxKind[Identifier](703,21): Yield
SyntaxKind[CloseBracketToken](703,22): ]
SyntaxKind[Terminal](703,26): `:`
SyntaxKind[Identifier](703,41): BindingElement
SyntaxKind[OpenBracketToken](703,42): [
SyntaxKind[QuestionToken](703,43): ?
SyntaxKind[Identifier](703,48): Yield
SyntaxKind[CloseBracketToken](703,49): ]
SyntaxKind[LineTerminatorToken](704,1): «line terminator»
SyntaxKind[DedentToken](704,1): «dedent»
SyntaxKind[LineTerminatorToken](705,1): «line terminator»
SyntaxKind[Identifier](705,15): BindingElement
SyntaxKind[OpenBracketToken](705,16): [
SyntaxKind[Identifier](705,21): Yield
SyntaxKind[CloseBracketToken](705,22): ]
SyntaxKind[ColonToken](705,24): :
SyntaxKind[LineTerminatorToken](706,2): «line terminator»
SyntaxKind[IndentToken](706,2): «indent»
SyntaxKind[Identifier](706,19): SingleNameBinding
SyntaxKind[OpenBracketToken](706,20): [
SyntaxKind[QuestionToken](706,21): ?
SyntaxKind[Identifier](706,26): Yield
SyntaxKind[CloseBracketToken](706,27): ]
SyntaxKind[LineTerminatorToken](707,2): «line terminator»
SyntaxKind[Identifier](707,16): BindingPattern
SyntaxKind[OpenBracketToken](707,17): [
SyntaxKind[QuestionToken](707,18): ?
SyntaxKind[Identifier](707,23): Yield
SyntaxKind[CloseBracketToken](707,24): ]
SyntaxKind[Identifier](707,36): Initializer
SyntaxKind[OpenBracketToken](707,37): [
SyntaxKind[Identifier](707,39): In
SyntaxKind[CommaToken](707,40): ,
SyntaxKind[QuestionToken](707,42): ?
SyntaxKind[Identifier](707,47): Yield
SyntaxKind[CloseBracketToken](707,48): ]
SyntaxKind[QuestionToken](707,49): ?
SyntaxKind[LineTerminatorToken](708,1): «line terminator»
SyntaxKind[DedentToken](708,1): «dedent»
SyntaxKind[LineTerminatorToken](709,1): «line terminator»
SyntaxKind[Identifier](709,18): SingleNameBinding
SyntaxKind[OpenBracketToken](709,19): [
SyntaxKind[Identifier](709,24): Yield
SyntaxKind[CloseBracketToken](709,25): ]
SyntaxKind[ColonToken](709,27): :
SyntaxKind[LineTerminatorToken](710,2): «line terminator»
SyntaxKind[IndentToken](710,2): «indent»
SyntaxKind[Identifier](710,19): BindingIdentifier
SyntaxKind[OpenBracketToken](710,20): [
SyntaxKind[QuestionToken](710,21): ?
SyntaxKind[Identifier](710,26): Yield
SyntaxKind[CloseBracketToken](710,27): ]
SyntaxKind[Identifier](710,39): Initializer
SyntaxKind[OpenBracketToken](710,40): [
SyntaxKind[Identifier](710,42): In
SyntaxKind[CommaToken](710,43): ,
SyntaxKind[QuestionToken](710,45): ?
SyntaxKind[Identifier](710,50): Yield
SyntaxKind[CloseBracketToken](710,51): ]
SyntaxKind[QuestionToken](710,52): ?
SyntaxKind[LineTerminatorToken](711,1): «line terminator»
SyntaxKind[DedentToken](711,1): «dedent»
SyntaxKind[LineTerminatorToken](712,1): «line terminator»
SyntaxKind[Identifier](712,19): BindingRestElement
SyntaxKind[OpenBracketToken](712,20): [
SyntaxKind[Identifier](712,25): Yield
SyntaxKind[CloseBracketToken](712,26): ]
SyntaxKind[ColonToken](712,28): :
SyntaxKind[LineTerminatorToken](713,2): «line terminator»
SyntaxKind[IndentToken](713,2): «indent»
SyntaxKind[Terminal](713,7): `...`
SyntaxKind[Identifier](713,25): BindingIdentifier
SyntaxKind[OpenBracketToken](713,26): [
SyntaxKind[QuestionToken](713,27): ?
SyntaxKind[Identifier](713,32): Yield
SyntaxKind[CloseBracketToken](713,33): ]
SyntaxKind[LineTerminatorToken](714,1): «line terminator»
SyntaxKind[DedentToken](714,1): «dedent»
SyntaxKind[LineTerminatorToken](715,1): «line terminator»
SyntaxKind[Identifier](715,15): EmptyStatement
SyntaxKind[ColonToken](715,17): :
SyntaxKind[LineTerminatorToken](716,2): «line terminator»
SyntaxKind[IndentToken](716,2): «indent»
SyntaxKind[Terminal](716,5): `;`
SyntaxKind[LineTerminatorToken](717,1): «line terminator»
SyntaxKind[DedentToken](717,1): «dedent»
SyntaxKind[LineTerminatorToken](718,1): «line terminator»
SyntaxKind[Identifier](718,20): ExpressionStatement
SyntaxKind[OpenBracketToken](718,21): [
SyntaxKind[Identifier](718,26): Yield
SyntaxKind[CloseBracketToken](718,27): ]
SyntaxKind[ColonToken](718,29): :
SyntaxKind[LineTerminatorToken](719,2): «line terminator»
SyntaxKind[IndentToken](719,2): «indent»
SyntaxKind[OpenBracketToken](719,3): [
SyntaxKind[LookaheadKeyword](719,12): lookahead
SyntaxKind[LessThanExclamationToken](719,15): <!
SyntaxKind[OpenBraceToken](719,17): {
SyntaxKind[Terminal](719,21): `{`
SyntaxKind[CommaToken](719,22): ,
SyntaxKind[Terminal](719,33): `function`
SyntaxKind[CommaToken](719,34): ,
SyntaxKind[Terminal](719,42): `class`
SyntaxKind[CommaToken](719,43): ,
SyntaxKind[Terminal](719,49): `let`
SyntaxKind[Terminal](719,53): `[`
SyntaxKind[CloseBraceToken](719,55): }
SyntaxKind[CloseBracketToken](719,56): ]
SyntaxKind[Identifier](719,67): Expression
SyntaxKind[OpenBracketToken](719,68): [
SyntaxKind[Identifier](719,70): In
SyntaxKind[CommaToken](719,71): ,
SyntaxKind[QuestionToken](719,73): ?
SyntaxKind[Identifier](719,78): Yield
SyntaxKind[CloseBracketToken](719,79): ]
SyntaxKind[Terminal](719,83): `;`
SyntaxKind[LineTerminatorToken](720,1): «line terminator»
SyntaxKind[DedentToken](720,1): «dedent»
SyntaxKind[LineTerminatorToken](721,1): «line terminator»
SyntaxKind[Identifier](721,12): IfStatement
SyntaxKind[OpenBracketToken](721,13): [
SyntaxKind[Identifier](721,18): Yield
SyntaxKind[CommaToken](721,19): ,
SyntaxKind[Identifier](721,26): Return
SyntaxKind[CloseBracketToken](721,27): ]
SyntaxKind[ColonToken](721,29): :
SyntaxKind[LineTerminatorToken](722,2): «line terminator»
SyntaxKind[IndentToken](722,2): «indent»
SyntaxKind[Terminal](722,6): `if`
SyntaxKind[Terminal](722,10): `(`
SyntaxKind[Identifier](722,21): Expression
SyntaxKind[OpenBracketToken](722,22): [
SyntaxKind[Identifier](722,24): In
SyntaxKind[CommaToken](722,25): ,
SyntaxKind[QuestionToken](722,27): ?
SyntaxKind[Identifier](722,32): Yield
SyntaxKind[CloseBracketToken](722,33): ]
SyntaxKind[Terminal](722,37): `)`
SyntaxKind[Identifier](722,47): Statement
SyntaxKind[OpenBracketToken](722,48): [
SyntaxKind[QuestionToken](722,49): ?
SyntaxKind[Identifier](722,54): Yield
SyntaxKind[CommaToken](722,55): ,
SyntaxKind[QuestionToken](722,57): ?
SyntaxKind[Identifier](722,63): Return
SyntaxKind[CloseBracketToken](722,64): ]
SyntaxKind[Terminal](722,71): `else`
SyntaxKind[Identifier](722,81): Statement
SyntaxKind[OpenBracketToken](722,82): [
SyntaxKind[QuestionToken](722,83): ?
SyntaxKind[Identifier](722,88): Yield
SyntaxKind[CommaToken](722,89): ,
SyntaxKind[QuestionToken](722,91): ?
SyntaxKind[Identifier](722,97): Return
SyntaxKind[CloseBracketToken](722,98): ]
SyntaxKind[LineTerminatorToken](723,2): «line terminator»
SyntaxKind[Terminal](723,6): `if`
SyntaxKind[Terminal](723,10): `(`
SyntaxKind[Identifier](723,21): Expression
SyntaxKind[OpenBracketToken](723,22): [
SyntaxKind[Identifier](723,24): In
SyntaxKind[CommaToken](723,25): ,
SyntaxKind[QuestionToken](723,27): ?
SyntaxKind[Identifier](723,32): Yield
SyntaxKind[CloseBracketToken](723,33): ]
SyntaxKind[Terminal](723,37): `)`
SyntaxKind[Identifier](723,47): Statement
SyntaxKind[OpenBracketToken](723,48): [
SyntaxKind[QuestionToken](723,49): ?
SyntaxKind[Identifier](723,54): Yield
SyntaxKind[CommaToken](723,55): ,
SyntaxKind[QuestionToken](723,57): ?
SyntaxKind[Identifier](723,63): Return
SyntaxKind[CloseBracketToken](723,64): ]
SyntaxKind[LineTerminatorToken](724,1): «line terminator»
SyntaxKind[DedentToken](724,1): «dedent»
SyntaxKind[LineTerminatorToken](725,1): «line terminator»
SyntaxKind[Identifier](725,19): IterationStatement
SyntaxKind[OpenBracketToken](725,20): [
SyntaxKind[Identifier](725,25): Yield
SyntaxKind[CommaToken](725,26): ,
SyntaxKind[Identifier](725,33): Return
SyntaxKind[CloseBracketToken](725,34): ]
SyntaxKind[ColonToken](725,36): :
SyntaxKind[LineTerminatorToken](726,2): «line terminator»
SyntaxKind[IndentToken](726,2): «indent»
SyntaxKind[Terminal](726,6): `do`
SyntaxKind[Identifier](726,16): Statement
SyntaxKind[OpenBracketToken](726,17): [
SyntaxKind[QuestionToken](726,18): ?
SyntaxKind[Identifier](726,23): Yield
SyntaxKind[CommaToken](726,24): ,
SyntaxKind[QuestionToken](726,26): ?
SyntaxKind[Identifier](726,32): Return
SyntaxKind[CloseBracketToken](726,33): ]
SyntaxKind[Terminal](726,41): `while`
SyntaxKind[Terminal](726,45): `(`
SyntaxKind[Identifier](726,56): Expression
SyntaxKind[OpenBracketToken](726,57): [
SyntaxKind[Identifier](726,59): In
SyntaxKind[CommaToken](726,60): ,
SyntaxKind[QuestionToken](726,62): ?
SyntaxKind[Identifier](726,67): Yield
SyntaxKind[CloseBracketToken](726,68): ]
SyntaxKind[Terminal](726,72): `)`
SyntaxKind[Terminal](726,76): `;`
SyntaxKind[LineTerminatorToken](727,2): «line terminator»
SyntaxKind[Terminal](727,9): `while`
SyntaxKind[Terminal](727,13): `(`
SyntaxKind[Identifier](727,24): Expression
SyntaxKind[OpenBracketToken](727,25): [
SyntaxKind[Identifier](727,27): In
SyntaxKind[CommaToken](727,28): ,
SyntaxKind[QuestionToken](727,30): ?
SyntaxKind[Identifier](727,35): Yield
SyntaxKind[CloseBracketToken](727,36): ]
SyntaxKind[Terminal](727,40): `)`
SyntaxKind[Identifier](727,50): Statement
SyntaxKind[OpenBracketToken](727,51): [
SyntaxKind[QuestionToken](727,52): ?
SyntaxKind[Identifier](727,57): Yield
SyntaxKind[CommaToken](727,58): ,
SyntaxKind[QuestionToken](727,60): ?
SyntaxKind[Identifier](727,66): Return
SyntaxKind[CloseBracketToken](727,67): ]
SyntaxKind[LineTerminatorToken](728,2): «line terminator»
SyntaxKind[Terminal](728,7): `for`
SyntaxKind[Terminal](728,11): `(`
SyntaxKind[OpenBracketToken](728,13): [
SyntaxKind[LookaheadKeyword](728,22): lookahead
SyntaxKind[LessThanExclamationToken](728,25): <!
SyntaxKind[OpenBraceToken](728,27): {
SyntaxKind[Terminal](728,33): `let`
SyntaxKind[Terminal](728,37): `[`
SyntaxKind[CloseBraceToken](728,39): }
SyntaxKind[CloseBracketToken](728,40): ]
SyntaxKind[Identifier](728,51): Expression
SyntaxKind[OpenBracketToken](728,52): [
SyntaxKind[QuestionToken](728,53): ?
SyntaxKind[Identifier](728,58): Yield
SyntaxKind[CloseBracketToken](728,59): ]
SyntaxKind[QuestionToken](728,60): ?
SyntaxKind[Terminal](728,64): `;`
SyntaxKind[Identifier](728,75): Expression
SyntaxKind[OpenBracketToken](728,76): [
SyntaxKind[Identifier](728,78): In
SyntaxKind[CommaToken](728,79): ,
SyntaxKind[QuestionToken](728,81): ?
SyntaxKind[Identifier](728,86): Yield
SyntaxKind[CloseBracketToken](728,87): ]
SyntaxKind[QuestionToken](728,88): ?
SyntaxKind[Terminal](728,92): `;`
SyntaxKind[Identifier](728,103): Expression
SyntaxKind[OpenBracketToken](728,104): [
SyntaxKind[Identifier](728,106): In
SyntaxKind[CommaToken](728,107): ,
SyntaxKind[QuestionToken](728,109): ?
SyntaxKind[Identifier](728,114): Yield
SyntaxKind[CloseBracketToken](728,115): ]
SyntaxKind[QuestionToken](728,116): ?
SyntaxKind[Terminal](728,120): `)`
SyntaxKind[Identifier](728,130): Statement
SyntaxKind[OpenBracketToken](728,131): [
SyntaxKind[QuestionToken](728,132): ?
SyntaxKind[Identifier](728,137): Yield
SyntaxKind[CommaToken](728,138): ,
SyntaxKind[QuestionToken](728,140): ?
SyntaxKind[Identifier](728,146): Return
SyntaxKind[CloseBracketToken](728,147): ]
SyntaxKind[LineTerminatorToken](729,2): «line terminator»
SyntaxKind[Terminal](729,7): `for`
SyntaxKind[Terminal](729,11): `(`
SyntaxKind[Terminal](729,17): `var`
SyntaxKind[Identifier](729,41): VariableDeclarationList
SyntaxKind[OpenBracketToken](729,42): [
SyntaxKind[QuestionToken](729,43): ?
SyntaxKind[Identifier](729,48): Yield
SyntaxKind[CloseBracketToken](729,49): ]
SyntaxKind[Terminal](729,53): `;`
SyntaxKind[Identifier](729,64): Expression
SyntaxKind[OpenBracketToken](729,65): [
SyntaxKind[Identifier](729,67): In
SyntaxKind[CommaToken](729,68): ,
SyntaxKind[QuestionToken](729,70): ?
SyntaxKind[Identifier](729,75): Yield
SyntaxKind[CloseBracketToken](729,76): ]
SyntaxKind[QuestionToken](729,77): ?
SyntaxKind[Terminal](729,81): `;`
SyntaxKind[Identifier](729,92): Expression
SyntaxKind[OpenBracketToken](729,93): [
SyntaxKind[Identifier](729,95): In
SyntaxKind[CommaToken](729,96): ,
SyntaxKind[QuestionToken](729,98): ?
SyntaxKind[Identifier](729,103): Yield
SyntaxKind[CloseBracketToken](729,104): ]
SyntaxKind[QuestionToken](729,105): ?
SyntaxKind[Terminal](729,109): `)`
SyntaxKind[Identifier](729,119): Statement
SyntaxKind[OpenBracketToken](729,120): [
SyntaxKind[QuestionToken](729,121): ?
SyntaxKind[Identifier](729,126): Yield
SyntaxKind[CommaToken](729,127): ,
SyntaxKind[QuestionToken](729,129): ?
SyntaxKind[Identifier](729,135): Return
SyntaxKind[CloseBracketToken](729,136): ]
SyntaxKind[LineTerminatorToken](730,2): «line terminator»
SyntaxKind[Terminal](730,7): `for`
SyntaxKind[Terminal](730,11): `(`
SyntaxKind[Identifier](730,30): LexicalDeclaration
SyntaxKind[OpenBracketToken](730,31): [
SyntaxKind[QuestionToken](730,32): ?
SyntaxKind[Identifier](730,37): Yield
SyntaxKind[CloseBracketToken](730,38): ]
SyntaxKind[Identifier](730,49): Expression
SyntaxKind[OpenBracketToken](730,50): [
SyntaxKind[Identifier](730,52): In
SyntaxKind[CommaToken](730,53): ,
SyntaxKind[QuestionToken](730,55): ?
SyntaxKind[Identifier](730,60): Yield
SyntaxKind[CloseBracketToken](730,61): ]
SyntaxKind[QuestionToken](730,62): ?
SyntaxKind[Terminal](730,66): `;`
SyntaxKind[Identifier](730,77): Expression
SyntaxKind[OpenBracketToken](730,78): [
SyntaxKind[Identifier](730,80): In
SyntaxKind[CommaToken](730,81): ,
SyntaxKind[QuestionToken](730,83): ?
SyntaxKind[Identifier](730,88): Yield
SyntaxKind[CloseBracketToken](730,89): ]
SyntaxKind[QuestionToken](730,90): ?
SyntaxKind[Terminal](730,94): `)`
SyntaxKind[Identifier](730,104): Statement
SyntaxKind[OpenBracketToken](730,105): [
SyntaxKind[QuestionToken](730,106): ?
SyntaxKind[Identifier](730,111): Yield
SyntaxKind[CommaToken](730,112): ,
SyntaxKind[QuestionToken](730,114): ?
SyntaxKind[Identifier](730,120): Return
SyntaxKind[CloseBracketToken](730,121): ]
SyntaxKind[LineTerminatorToken](731,2): «line terminator»
SyntaxKind[Terminal](731,7): `for`
SyntaxKind[Terminal](731,11): `(`
SyntaxKind[OpenBracketToken](731,13): [
SyntaxKind[LookaheadKeyword](731,22): lookahead
SyntaxKind[LessThanExclamationToken](731,25): <!
SyntaxKind[OpenBraceToken](731,27): {
SyntaxKind[Terminal](731,33): `let`
SyntaxKind[Terminal](731,37): `[`
SyntaxKind[CloseBraceToken](731,39): }
SyntaxKind[CloseBracketToken](731,40): ]
SyntaxKind[Identifier](731,63): LeftHandSideExpression
SyntaxKind[OpenBracketToken](731,64): [
SyntaxKind[QuestionToken](731,65): ?
SyntaxKind[Identifier](731,70): Yield
SyntaxKind[CloseBracketToken](731,71): ]
SyntaxKind[Terminal](731,76): `in`
SyntaxKind[Identifier](731,87): Expression
SyntaxKind[OpenBracketToken](731,88): [
SyntaxKind[Identifier](731,90): In
SyntaxKind[CommaToken](731,91): ,
SyntaxKind[QuestionToken](731,93): ?
SyntaxKind[Identifier](731,98): Yield
SyntaxKind[CloseBracketToken](731,99): ]
SyntaxKind[Terminal](731,103): `)`
SyntaxKind[Identifier](731,113): Statement
SyntaxKind[OpenBracketToken](731,114): [
SyntaxKind[QuestionToken](731,115): ?
SyntaxKind[Identifier](731,120): Yield
SyntaxKind[CommaToken](731,121): ,
SyntaxKind[QuestionToken](731,123): ?
SyntaxKind[Identifier](731,129): Return
SyntaxKind[CloseBracketToken](731,130): ]
SyntaxKind[LineTerminatorToken](732,2): «line terminator»
SyntaxKind[Terminal](732,7): `for`
SyntaxKind[Terminal](732,11): `(`
SyntaxKind[Terminal](732,17): `var`
SyntaxKind[Identifier](732,28): ForBinding
SyntaxKind[OpenBracketToken](732,29): [
SyntaxKind[QuestionToken](732,30): ?
SyntaxKind[Identifier](732,35): Yield
SyntaxKind[CloseBracketToken](732,36): ]
SyntaxKind[Terminal](732,41): `in`
SyntaxKind[Identifier](732,52): Expression
SyntaxKind[OpenBracketToken](732,53): [
SyntaxKind[Identifier](732,55): In
SyntaxKind[CommaToken](732,56): ,
SyntaxKind[QuestionToken](732,58): ?
SyntaxKind[Identifier](732,63): Yield
SyntaxKind[CloseBracketToken](732,64): ]
SyntaxKind[Terminal](732,68): `)`
SyntaxKind[Identifier](732,78): Statement
SyntaxKind[OpenBracketToken](732,79): [
SyntaxKind[QuestionToken](732,80): ?
SyntaxKind[Identifier](732,85): Yield
SyntaxKind[CommaToken](732,86): ,
SyntaxKind[QuestionToken](732,88): ?
SyntaxKind[Identifier](732,94): Return
SyntaxKind[CloseBracketToken](732,95): ]
SyntaxKind[LineTerminatorToken](733,2): «line terminator»
SyntaxKind[Terminal](733,7): `for`
SyntaxKind[Terminal](733,11): `(`
SyntaxKind[Identifier](733,26): ForDeclaration
SyntaxKind[OpenBracketToken](733,27): [
SyntaxKind[QuestionToken](733,28): ?
SyntaxKind[Identifier](733,33): Yield
SyntaxKind[CloseBracketToken](733,34): ]
SyntaxKind[Terminal](733,39): `in`
SyntaxKind[Identifier](733,50): Expression
SyntaxKind[OpenBracketToken](733,51): [
SyntaxKind[Identifier](733,53): In
SyntaxKind[CommaToken](733,54): ,
SyntaxKind[QuestionToken](733,56): ?
SyntaxKind[Identifier](733,61): Yield
SyntaxKind[CloseBracketToken](733,62): ]
SyntaxKind[Terminal](733,66): `)`
SyntaxKind[Identifier](733,76): Statement
SyntaxKind[OpenBracketToken](733,77): [
SyntaxKind[QuestionToken](733,78): ?
SyntaxKind[Identifier](733,83): Yield
SyntaxKind[CommaToken](733,84): ,
SyntaxKind[QuestionToken](733,86): ?
SyntaxKind[Identifier](733,92): Return
SyntaxKind[CloseBracketToken](733,93): ]
SyntaxKind[LineTerminatorToken](734,2): «line terminator»
SyntaxKind[Terminal](734,7): `for`
SyntaxKind[Terminal](734,11): `(`
SyntaxKind[OpenBracketToken](734,13): [
SyntaxKind[LookaheadKeyword](734,22): lookahead
SyntaxKind[ExclamationEqualsToken](734,25): !=
SyntaxKind[Terminal](734,31): `let`
SyntaxKind[CloseBracketToken](734,32): ]
SyntaxKind[Identifier](734,55): LeftHandSideExpression
SyntaxKind[OpenBracketToken](734,56): [
SyntaxKind[QuestionToken](734,57): ?
SyntaxKind[Identifier](734,62): Yield
SyntaxKind[CloseBracketToken](734,63): ]
SyntaxKind[Terminal](734,68): `of`
SyntaxKind[Identifier](734,89): AssignmentExpression
SyntaxKind[OpenBracketToken](734,90): [
SyntaxKind[Identifier](734,92): In
SyntaxKind[CommaToken](734,93): ,
SyntaxKind[QuestionToken](734,95): ?
SyntaxKind[Identifier](734,100): Yield
SyntaxKind[CloseBracketToken](734,101): ]
SyntaxKind[Terminal](734,105): `)`
SyntaxKind[Identifier](734,115): Statement
SyntaxKind[OpenBracketToken](734,116): [
SyntaxKind[QuestionToken](734,117): ?
SyntaxKind[Identifier](734,122): Yield
SyntaxKind[CommaToken](734,123): ,
SyntaxKind[QuestionToken](734,125): ?
SyntaxKind[Identifier](734,131): Return
SyntaxKind[CloseBracketToken](734,132): ]
SyntaxKind[LineTerminatorToken](735,2): «line terminator»
SyntaxKind[Terminal](735,7): `for`
SyntaxKind[Terminal](735,11): `(`
SyntaxKind[Terminal](735,17): `var`
SyntaxKind[Identifier](735,28): ForBinding
SyntaxKind[OpenBracketToken](735,29): [
SyntaxKind[QuestionToken](735,30): ?
SyntaxKind[Identifier](735,35): Yield
SyntaxKind[CloseBracketToken](735,36): ]
SyntaxKind[Terminal](735,41): `of`
SyntaxKind[Identifier](735,62): AssignmentExpression
SyntaxKind[OpenBracketToken](735,63): [
SyntaxKind[Identifier](735,65): In
SyntaxKind[CommaToken](735,66): ,
SyntaxKind[QuestionToken](735,68): ?
SyntaxKind[Identifier](735,73): Yield
SyntaxKind[CloseBracketToken](735,74): ]
SyntaxKind[Terminal](735,78): `)`
SyntaxKind[Identifier](735,88): Statement
SyntaxKind[OpenBracketToken](735,89): [
SyntaxKind[QuestionToken](735,90): ?
SyntaxKind[Identifier](735,95): Yield
SyntaxKind[CommaToken](735,96): ,
SyntaxKind[QuestionToken](735,98): ?
SyntaxKind[Identifier](735,104): Return
SyntaxKind[CloseBracketToken](735,105): ]
SyntaxKind[LineTerminatorToken](736,2): «line terminator»
SyntaxKind[Terminal](736,7): `for`
SyntaxKind[Terminal](736,11): `(`
SyntaxKind[Identifier](736,26): ForDeclaration
SyntaxKind[OpenBracketToken](736,27): [
SyntaxKind[QuestionToken](736,28): ?
SyntaxKind[Identifier](736,33): Yield
SyntaxKind[CloseBracketToken](736,34): ]
SyntaxKind[Terminal](736,39): `of`
SyntaxKind[Identifier](736,60): AssignmentExpression
SyntaxKind[OpenBracketToken](736,61): [
SyntaxKind[Identifier](736,63): In
SyntaxKind[CommaToken](736,64): ,
SyntaxKind[QuestionToken](736,66): ?
SyntaxKind[Identifier](736,71): Yield
SyntaxKind[CloseBracketToken](736,72): ]
SyntaxKind[Terminal](736,76): `)`
SyntaxKind[Identifier](736,86): Statement
SyntaxKind[OpenBracketToken](736,87): [
SyntaxKind[QuestionToken](736,88): ?
SyntaxKind[Identifier](736,93): Yield
SyntaxKind[CommaToken](736,94): ,
SyntaxKind[QuestionToken](736,96): ?
SyntaxKind[Identifier](736,102): Return
SyntaxKind[CloseBracketToken](736,103): ]
SyntaxKind[LineTerminatorToken](737,1): «line terminator»
SyntaxKind[DedentToken](737,1): «dedent»
SyntaxKind[LineTerminatorToken](738,1): «line terminator»
SyntaxKind[Identifier](738,15): ForDeclaration
SyntaxKind[OpenBracketToken](738,16): [
SyntaxKind[Identifier](738,21): Yield
SyntaxKind[CloseBracketToken](738,22): ]
SyntaxKind[ColonToken](738,24): :
SyntaxKind[LineTerminatorToken](739,2): «line terminator»
SyntaxKind[IndentToken](739,2): «indent»
SyntaxKind[Identifier](739,12): LetOrConst
SyntaxKind[Identifier](739,23): ForBinding
SyntaxKind[OpenBracketToken](739,24): [
SyntaxKind[QuestionToken](739,25): ?
SyntaxKind[Identifier](739,30): Yield
SyntaxKind[CloseBracketToken](739,31): ]
SyntaxKind[LineTerminatorToken](740,1): «line terminator»
SyntaxKind[DedentToken](740,1): «dedent»
SyntaxKind[LineTerminatorToken](741,1): «line terminator»
SyntaxKind[Identifier](741,11): ForBinding
SyntaxKind[OpenBracketToken](741,12): [
SyntaxKind[Identifier](741,17): Yield
SyntaxKind[CloseBracketToken](741,18): ]
SyntaxKind[ColonToken](741,20): :
SyntaxKind[LineTerminatorToken](742,2): «line terminator»
SyntaxKind[IndentToken](742,2): «indent»
SyntaxKind[Identifier](742,19): BindingIdentifier
SyntaxKind[OpenBracketToken](742,20): [
SyntaxKind[QuestionToken](742,21): ?
SyntaxKind[Identifier](742,26): Yield
SyntaxKind[CloseBracketToken](742,27): ]
SyntaxKind[LineTerminatorToken](743,2): «line terminator»
SyntaxKind[Identifier](743,16): BindingPattern
SyntaxKind[OpenBracketToken](743,17): [
SyntaxKind[QuestionToken](743,18): ?
SyntaxKind[Identifier](743,23): Yield
SyntaxKind[CloseBracketToken](743,24): ]
SyntaxKind[LineTerminatorToken](744,1): «line terminator»
SyntaxKind[DedentToken](744,1): «dedent»
SyntaxKind[LineTerminatorToken](745,1): «line terminator»
SyntaxKind[Identifier](745,18): ContinueStatement
SyntaxKind[OpenBracketToken](745,19): [
SyntaxKind[Identifier](745,24): Yield
SyntaxKind[CloseBracketToken](745,25): ]
SyntaxKind[ColonToken](745,27): :
SyntaxKind[LineTerminatorToken](746,2): «line terminator»
SyntaxKind[IndentToken](746,2): «indent»
SyntaxKind[Terminal](746,12): `continue`
SyntaxKind[Terminal](746,16): `;`
SyntaxKind[LineTerminatorToken](747,2): «line terminator»
SyntaxKind[Terminal](747,12): `continue`
SyntaxKind[OpenBracketToken](747,14): [
SyntaxKind[NoKeyword](747,16): no
SyntaxKind[Identifier](747,31): LineTerminator
SyntaxKind[HereKeyword](747,36): here
SyntaxKind[CloseBracketToken](747,37): ]
SyntaxKind[Identifier](747,53): LabelIdentifier
SyntaxKind[OpenBracketToken](747,54): [
SyntaxKind[QuestionToken](747,55): ?
SyntaxKind[Identifier](747,60): Yield
SyntaxKind[CloseBracketToken](747,61): ]
SyntaxKind[Terminal](747,65): `;`
SyntaxKind[LineTerminatorToken](748,1): «line terminator»
SyntaxKind[DedentToken](748,1): «dedent»
SyntaxKind[LineTerminatorToken](749,1): «line terminator»
SyntaxKind[Identifier](749,15): BreakStatement
SyntaxKind[OpenBracketToken](749,16): [
SyntaxKind[Identifier](749,21): Yield
SyntaxKind[CloseBracketToken](749,22): ]
SyntaxKind[ColonToken](749,25): :
SyntaxKind[LineTerminatorToken](750,2): «line terminator»
SyntaxKind[IndentToken](750,2): «indent»
SyntaxKind[Terminal](750,9): `break`
SyntaxKind[Terminal](750,13): `;`
SyntaxKind[LineTerminatorToken](751,2): «line terminator»
SyntaxKind[Terminal](751,9): `break`
SyntaxKind[OpenBracketToken](751,11): [
SyntaxKind[NoKeyword](751,13): no
SyntaxKind[Identifier](751,28): LineTerminator
SyntaxKind[HereKeyword](751,33): here
SyntaxKind[CloseBracketToken](751,34): ]
SyntaxKind[Identifier](751,50): LabelIdentifier
SyntaxKind[OpenBracketToken](751,51): [
SyntaxKind[QuestionToken](751,52): ?
SyntaxKind[Identifier](751,57): Yield
SyntaxKind[CloseBracketToken](751,58): ]
SyntaxKind[Terminal](751,62): `;`
SyntaxKind[LineTerminatorToken](752,1): «line terminator»
SyntaxKind[DedentToken](752,1): «dedent»
SyntaxKind[LineTerminatorToken](753,1): «line terminator»
SyntaxKind[Identifier](753,16): ReturnStatement
SyntaxKind[OpenBracketToken](753,17): [
SyntaxKind[Identifier](753,22): Yield
SyntaxKind[CloseBracketToken](753,23): ]
SyntaxKind[ColonToken](753,25): :
SyntaxKind[LineTerminatorToken](754,2): «line terminator»
SyntaxKind[IndentToken](754,2): «indent»
SyntaxKind[Terminal](754,10): `return`
SyntaxKind[Terminal](754,14): `;`
SyntaxKind[LineTerminatorToken](755,2): «line terminator»
SyntaxKind[Terminal](755,10): `return`
SyntaxKind[OpenBracketToken](755,12): [
SyntaxKind[NoKeyword](755,14): no
SyntaxKind[Identifier](755,29): LineTerminator
SyntaxKind[HereKeyword](755,34): here
SyntaxKind[CloseBracketToken](755,35): ]
SyntaxKind[Identifier](755,46): Expression
SyntaxKind[OpenBracketToken](755,47): [
SyntaxKind[Identifier](755,49): In
SyntaxKind[CommaToken](755,50): ,
SyntaxKind[QuestionToken](755,52): ?
SyntaxKind[Identifier](755,57): Yield
SyntaxKind[CloseBracketToken](755,58): ]
SyntaxKind[Terminal](755,62): `;`
SyntaxKind[LineTerminatorToken](756,1): «line terminator»
SyntaxKind[DedentToken](756,1): «dedent»
SyntaxKind[LineTerminatorToken](757,1): «line terminator»
SyntaxKind[Identifier](757,14): WithStatement
SyntaxKind[OpenBracketToken](757,15): [
SyntaxKind[Identifier](757,20): Yield
SyntaxKind[CommaToken](757,21): ,
SyntaxKind[Identifier](757,28): Return
SyntaxKind[CloseBracketToken](757,29): ]
SyntaxKind[ColonToken](757,31): :
SyntaxKind[LineTerminatorToken](758,2): «line terminator»
SyntaxKind[IndentToken](758,2): «indent»
SyntaxKind[Terminal](758,8): `with`
SyntaxKind[Terminal](758,12): `(`
SyntaxKind[Identifier](758,23): Expression
SyntaxKind[OpenBracketToken](758,24): [
SyntaxKind[Identifier](758,26): In
SyntaxKind[CommaToken](758,27): ,
SyntaxKind[QuestionToken](758,29): ?
SyntaxKind[Identifier](758,34): Yield
SyntaxKind[CloseBracketToken](758,35): ]
SyntaxKind[Terminal](758,39): `)`
SyntaxKind[Identifier](758,49): Statement
SyntaxKind[OpenBracketToken](758,50): [
SyntaxKind[QuestionToken](758,51): ?
SyntaxKind[Identifier](758,56): Yield
SyntaxKind[CommaToken](758,57): ,
SyntaxKind[QuestionToken](758,59): ?
SyntaxKind[Identifier](758,65): Return
SyntaxKind[CloseBracketToken](758,66): ]
SyntaxKind[LineTerminatorToken](759,1): «line terminator»
SyntaxKind[DedentToken](759,1): «dedent»
SyntaxKind[LineTerminatorToken](760,1): «line terminator»
SyntaxKind[Identifier](760,16): SwitchStatement
SyntaxKind[OpenBracketToken](760,17): [
SyntaxKind[Identifier](760,22): Yield
SyntaxKind[CommaToken](760,23): ,
SyntaxKind[Identifier](760,30): Return
SyntaxKind[CloseBracketToken](760,31): ]
SyntaxKind[ColonToken](760,33): :
SyntaxKind[LineTerminatorToken](761,2): «line terminator»
SyntaxKind[IndentToken](761,2): «indent»
SyntaxKind[Terminal](761,10): `switch`
SyntaxKind[Terminal](761,14): `(`
SyntaxKind[Identifier](761,25): Expression
SyntaxKind[OpenBracketToken](761,26): [
SyntaxKind[Identifier](761,28): In
SyntaxKind[CommaToken](761,29): ,
SyntaxKind[QuestionToken](761,31): ?
SyntaxKind[Identifier](761,36): Yield
SyntaxKind[CloseBracketToken](761,37): ]
SyntaxKind[Terminal](761,41): `)`
SyntaxKind[Identifier](761,51): CaseBlock
SyntaxKind[OpenBracketToken](761,52): [
SyntaxKind[QuestionToken](761,53): ?
SyntaxKind[Identifier](761,58): Yield
SyntaxKind[CommaToken](761,59): ,
SyntaxKind[QuestionToken](761,61): ?
SyntaxKind[Identifier](761,67): Return
SyntaxKind[CloseBracketToken](761,68): ]
SyntaxKind[LineTerminatorToken](762,1): «line terminator»
SyntaxKind[DedentToken](762,1): «dedent»
SyntaxKind[LineTerminatorToken](763,1): «line terminator»
SyntaxKind[Identifier](763,10): CaseBlock
SyntaxKind[OpenBracketToken](763,11): [
SyntaxKind[Identifier](763,16): Yield
SyntaxKind[CommaToken](763,17): ,
SyntaxKind[Identifier](763,24): Return
SyntaxKind[CloseBracketToken](763,25): ]
SyntaxKind[ColonToken](763,27): :
SyntaxKind[LineTerminatorToken](764,2): «line terminator»
SyntaxKind[IndentToken](764,2): «indent»
SyntaxKind[Terminal](764,5): `{`
SyntaxKind[Identifier](764,17): CaseClauses
SyntaxKind[OpenBracketToken](764,18): [
SyntaxKind[QuestionToken](764,19): ?
SyntaxKind[Identifier](764,24): Yield
SyntaxKind[CommaToken](764,25): ,
SyntaxKind[QuestionToken](764,27): ?
SyntaxKind[Identifier](764,33): Return
SyntaxKind[CloseBracketToken](764,34): ]
SyntaxKind[QuestionToken](764,35): ?
SyntaxKind[Terminal](764,39): `}`
SyntaxKind[LineTerminatorToken](765,2): «line terminator»
SyntaxKind[Terminal](765,5): `{`
SyntaxKind[Identifier](765,17): CaseClauses
SyntaxKind[OpenBracketToken](765,18): [
SyntaxKind[QuestionToken](765,19): ?
SyntaxKind[Identifier](765,24): Yield
SyntaxKind[CommaToken](765,25): ,
SyntaxKind[QuestionToken](765,27): ?
SyntaxKind[Identifier](765,33): Return
SyntaxKind[CloseBracketToken](765,34): ]
SyntaxKind[QuestionToken](765,35): ?
SyntaxKind[Identifier](765,49): DefaultClause
SyntaxKind[OpenBracketToken](765,50): [
SyntaxKind[QuestionToken](765,51): ?
SyntaxKind[Identifier](765,56): Yield
SyntaxKind[CommaToken](765,57): ,
SyntaxKind[QuestionToken](765,59): ?
SyntaxKind[Identifier](765,65): Return
SyntaxKind[CloseBracketToken](765,66): ]
SyntaxKind[Identifier](765,78): CaseClauses
SyntaxKind[OpenBracketToken](765,79): [
SyntaxKind[QuestionToken](765,80): ?
SyntaxKind[Identifier](765,85): Yield
SyntaxKind[CommaToken](765,86): ,
SyntaxKind[QuestionToken](765,88): ?
SyntaxKind[Identifier](765,94): Return
SyntaxKind[CloseBracketToken](765,95): ]
SyntaxKind[QuestionToken](765,96): ?
SyntaxKind[Terminal](765,100): `}`
SyntaxKind[LineTerminatorToken](766,1): «line terminator»
SyntaxKind[DedentToken](766,1): «dedent»
SyntaxKind[LineTerminatorToken](767,1): «line terminator»
SyntaxKind[Identifier](767,12): CaseClauses
SyntaxKind[OpenBracketToken](767,13): [
SyntaxKind[Identifier](767,18): Yield
SyntaxKind[CommaToken](767,19): ,
SyntaxKind[Identifier](767,26): Return
SyntaxKind[CloseBracketToken](767,27): ]
SyntaxKind[ColonToken](767,29): :
SyntaxKind[LineTerminatorToken](768,2): «line terminator»
SyntaxKind[IndentToken](768,2): «indent»
SyntaxKind[Identifier](768,12): CaseClause
SyntaxKind[OpenBracketToken](768,13): [
SyntaxKind[QuestionToken](768,14): ?
SyntaxKind[Identifier](768,19): Yield
SyntaxKind[CommaToken](768,20): ,
SyntaxKind[QuestionToken](768,22): ?
SyntaxKind[Identifier](768,28): Return
SyntaxKind[CloseBracketToken](768,29): ]
SyntaxKind[LineTerminatorToken](769,2): «line terminator»
SyntaxKind[Identifier](769,13): CaseClauses
SyntaxKind[OpenBracketToken](769,14): [
SyntaxKind[QuestionToken](769,15): ?
SyntaxKind[Identifier](769,20): Yield
SyntaxKind[CommaToken](769,21): ,
SyntaxKind[QuestionToken](769,23): ?
SyntaxKind[Identifier](769,29): Return
SyntaxKind[CloseBracketToken](769,30): ]
SyntaxKind[Identifier](769,41): CaseClause
SyntaxKind[OpenBracketToken](769,42): [
SyntaxKind[QuestionToken](769,43): ?
SyntaxKind[Identifier](769,48): Yield
SyntaxKind[CommaToken](769,49): ,
SyntaxKind[QuestionToken](769,51): ?
SyntaxKind[Identifier](769,57): Return
SyntaxKind[CloseBracketToken](769,58): ]
SyntaxKind[LineTerminatorToken](770,1): «line terminator»
SyntaxKind[DedentToken](770,1): «dedent»
SyntaxKind[LineTerminatorToken](771,1): «line terminator»
SyntaxKind[Identifier](771,11): CaseClause
SyntaxKind[OpenBracketToken](771,12): [
SyntaxKind[Identifier](771,17): Yield
SyntaxKind[CommaToken](771,18): ,
SyntaxKind[Identifier](771,25): Return
SyntaxKind[CloseBracketToken](771,26): ]
SyntaxKind[ColonToken](771,28): :
SyntaxKind[LineTerminatorToken](772,2): «line terminator»
SyntaxKind[IndentToken](772,2): «indent»
SyntaxKind[Terminal](772,8): `case`
SyntaxKind[Identifier](772,19): Expression
SyntaxKind[OpenBracketToken](772,20): [
SyntaxKind[Identifier](772,22): In
SyntaxKind[CommaToken](772,23): ,
SyntaxKind[QuestionToken](772,25): ?
SyntaxKind[Identifier](772,30): Yield
SyntaxKind[CloseBracketToken](772,31): ]
SyntaxKind[Terminal](772,35): `:`
SyntaxKind[Identifier](772,49): StatementList
SyntaxKind[OpenBracketToken](772,50): [
SyntaxKind[QuestionToken](772,51): ?
SyntaxKind[Identifier](772,56): Yield
SyntaxKind[CommaToken](772,57): ,
SyntaxKind[QuestionToken](772,59): ?
SyntaxKind[Identifier](772,65): Return
SyntaxKind[CloseBracketToken](772,66): ]
SyntaxKind[QuestionToken](772,67): ?
SyntaxKind[LineTerminatorToken](773,1): «line terminator»
SyntaxKind[DedentToken](773,1): «dedent»
SyntaxKind[LineTerminatorToken](774,1): «line terminator»
SyntaxKind[Identifier](774,14): DefaultClause
SyntaxKind[OpenBracketToken](774,15): [
SyntaxKind[Identifier](774,20): Yield
SyntaxKind[CommaToken](774,21): ,
SyntaxKind[Identifier](774,28): Return
SyntaxKind[CloseBracketToken](774,29): ]
SyntaxKind[ColonToken](774,31): :
SyntaxKind[LineTerminatorToken](775,2): «line terminator»
SyntaxKind[IndentToken](775,2): «indent»
SyntaxKind[Terminal](775,11): `default`
SyntaxKind[Terminal](775,15): `:`
SyntaxKind[Identifier](775,29): StatementList
SyntaxKind[OpenBracketToken](775,30): [
SyntaxKind[QuestionToken](775,31): ?
SyntaxKind[Identifier](775,36): Yield
SyntaxKind[CommaToken](775,37): ,
SyntaxKind[QuestionToken](775,39): ?
SyntaxKind[Identifier](775,45): Return
SyntaxKind[CloseBracketToken](775,46): ]
SyntaxKind[QuestionToken](775,47): ?
SyntaxKind[LineTerminatorToken](776,1): «line terminator»
SyntaxKind[DedentToken](776,1): «dedent»
SyntaxKind[LineTerminatorToken](777,1): «line terminator»
SyntaxKind[Identifier](777,18): LabelledStatement
SyntaxKind[OpenBracketToken](777,19): [
SyntaxKind[Identifier](777,24): Yield
SyntaxKind[CommaToken](777,25): ,
SyntaxKind[Identifier](777,32): Return
SyntaxKind[CloseBracketToken](777,33): ]
SyntaxKind[ColonToken](777,35): :
SyntaxKind[LineTerminatorToken](778,2): «line terminator»
SyntaxKind[IndentToken](778,2): «indent»
SyntaxKind[Identifier](778,17): LabelIdentifier
SyntaxKind[OpenBracketToken](778,18): [
SyntaxKind[QuestionToken](778,19): ?
SyntaxKind[Identifier](778,24): Yield
SyntaxKind[CloseBracketToken](778,25): ]
SyntaxKind[Terminal](778,29): `:`
SyntaxKind[Identifier](778,42): LabelledItem
SyntaxKind[OpenBracketToken](778,43): [
SyntaxKind[QuestionToken](778,44): ?
SyntaxKind[Identifier](778,49): Yield
SyntaxKind[CommaToken](778,50): ,
SyntaxKind[QuestionToken](778,52): ?
SyntaxKind[Identifier](778,58): Return
SyntaxKind[CloseBracketToken](778,59): ]
SyntaxKind[LineTerminatorToken](779,1): «line terminator»
SyntaxKind[DedentToken](779,1): «dedent»
SyntaxKind[LineTerminatorToken](780,1): «line terminator»
SyntaxKind[Identifier](780,13): LabelledItem
SyntaxKind[OpenBracketToken](780,14): [
SyntaxKind[Identifier](780,19): Yield
SyntaxKind[CommaToken](780,20): ,
SyntaxKind[Identifier](780,27): Return
SyntaxKind[CloseBracketToken](780,28): ]
SyntaxKind[ColonToken](780,30): :
SyntaxKind[LineTerminatorToken](781,2): «line terminator»
SyntaxKind[IndentToken](781,2): «indent»
SyntaxKind[Identifier](781,11): Statement
SyntaxKind[OpenBracketToken](781,12): [
SyntaxKind[QuestionToken](781,13): ?
SyntaxKind[Identifier](781,18): Yield
SyntaxKind[CommaToken](781,19): ,
SyntaxKind[QuestionToken](781,21): ?
SyntaxKind[Identifier](781,27): Return
SyntaxKind[CloseBracketToken](781,28): ]
SyntaxKind[LineTerminatorToken](782,2): «line terminator»
SyntaxKind[Identifier](782,21): FunctionDeclaration
SyntaxKind[OpenBracketToken](782,22): [
SyntaxKind[QuestionToken](782,23): ?
SyntaxKind[Identifier](782,28): Yield
SyntaxKind[CloseBracketToken](782,29): ]
SyntaxKind[LineTerminatorToken](783,1): «line terminator»
SyntaxKind[DedentToken](783,1): «dedent»
SyntaxKind[LineTerminatorToken](784,1): «line terminator»
SyntaxKind[Identifier](784,15): ThrowStatement
SyntaxKind[OpenBracketToken](784,16): [
SyntaxKind[Identifier](784,21): Yield
SyntaxKind[CloseBracketToken](784,22): ]
SyntaxKind[ColonToken](784,24): :
SyntaxKind[LineTerminatorToken](785,2): «line terminator»
SyntaxKind[IndentToken](785,2): «indent»
SyntaxKind[Terminal](785,9): `throw`
SyntaxKind[OpenBracketToken](785,11): [
SyntaxKind[NoKeyword](785,13): no
SyntaxKind[Identifier](785,28): LineTerminator
SyntaxKind[HereKeyword](785,33): here
SyntaxKind[CloseBracketToken](785,34): ]
SyntaxKind[Identifier](785,45): Expression
SyntaxKind[OpenBracketToken](785,46): [
SyntaxKind[Identifier](785,48): In
SyntaxKind[CommaToken](785,49): ,
SyntaxKind[QuestionToken](785,51): ?
SyntaxKind[Identifier](785,56): Yield
SyntaxKind[CloseBracketToken](785,57): ]
SyntaxKind[Terminal](785,61): `;`
SyntaxKind[LineTerminatorToken](786,1): «line terminator»
SyntaxKind[DedentToken](786,1): «dedent»
SyntaxKind[LineTerminatorToken](787,1): «line terminator»
SyntaxKind[Identifier](787,13): TryStatement
SyntaxKind[OpenBracketToken](787,14): [
SyntaxKind[Identifier](787,19): Yield
SyntaxKind[CommaToken](787,20): ,
SyntaxKind[Identifier](787,27): Return
SyntaxKind[CloseBracketToken](787,28): ]
SyntaxKind[ColonToken](787,30): :
SyntaxKind[LineTerminatorToken](788,2): «line terminator»
SyntaxKind[IndentToken](788,2): «indent»
SyntaxKind[Terminal](788,7): `try`
SyntaxKind[Identifier](788,13): Block
SyntaxKind[OpenBracketToken](788,14): [
SyntaxKind[QuestionToken](788,15): ?
SyntaxKind[Identifier](788,20): Yield
SyntaxKind[CommaToken](788,21): ,
SyntaxKind[QuestionToken](788,23): ?
SyntaxKind[Identifier](788,29): Return
SyntaxKind[CloseBracketToken](788,30): ]
SyntaxKind[Identifier](788,36): Catch
SyntaxKind[OpenBracketToken](788,37): [
SyntaxKind[QuestionToken](788,38): ?
SyntaxKind[Identifier](788,43): Yield
SyntaxKind[CommaToken](788,44): ,
SyntaxKind[QuestionToken](788,46): ?
SyntaxKind[Identifier](788,52): Return
SyntaxKind[CloseBracketToken](788,53): ]
SyntaxKind[LineTerminatorToken](789,2): «line terminator»
SyntaxKind[Terminal](789,7): `try`
SyntaxKind[Identifier](789,13): Block
SyntaxKind[OpenBracketToken](789,14): [
SyntaxKind[QuestionToken](789,15): ?
SyntaxKind[Identifier](789,20): Yield
SyntaxKind[CommaToken](789,21): ,
SyntaxKind[QuestionToken](789,23): ?
SyntaxKind[Identifier](789,29): Return
SyntaxKind[CloseBracketToken](789,30): ]
SyntaxKind[Identifier](789,38): Finally
SyntaxKind[OpenBracketToken](789,39): [
SyntaxKind[QuestionToken](789,40): ?
SyntaxKind[Identifier](789,45): Yield
SyntaxKind[CommaToken](789,46): ,
SyntaxKind[QuestionToken](789,48): ?
SyntaxKind[Identifier](789,54): Return
SyntaxKind[CloseBracketToken](789,55): ]
SyntaxKind[LineTerminatorToken](790,2): «line terminator»
SyntaxKind[Terminal](790,7): `try`
SyntaxKind[Identifier](790,13): Block
SyntaxKind[OpenBracketToken](790,14): [
SyntaxKind[QuestionToken](790,15): ?
SyntaxKind[Identifier](790,20): Yield
SyntaxKind[CommaToken](790,21): ,
SyntaxKind[QuestionToken](790,23): ?
SyntaxKind[Identifier](790,29): Return
SyntaxKind[CloseBracketToken](790,30): ]
SyntaxKind[Identifier](790,36): Catch
SyntaxKind[OpenBracketToken](790,37): [
SyntaxKind[QuestionToken](790,38): ?
SyntaxKind[Identifier](790,43): Yield
SyntaxKind[CommaToken](790,44): ,
SyntaxKind[QuestionToken](790,46): ?
SyntaxKind[Identifier](790,52): Return
SyntaxKind[CloseBracketToken](790,53): ]
SyntaxKind[Identifier](790,61): Finally
SyntaxKind[OpenBracketToken](790,62): [
SyntaxKind[QuestionToken](790,63): ?
SyntaxKind[Identifier](790,68): Yield
SyntaxKind[CommaToken](790,69): ,
SyntaxKind[QuestionToken](790,71): ?
SyntaxKind[Identifier](790,77): Return
SyntaxKind[CloseBracketToken](790,78): ]
SyntaxKind[LineTerminatorToken](791,1): «line terminator»
SyntaxKind[DedentToken](791,1): «dedent»
SyntaxKind[LineTerminatorToken](792,1): «line terminator»
SyntaxKind[Identifier](792,6): Catch
SyntaxKind[OpenBracketToken](792,7): [
SyntaxKind[Identifier](792,12): Yield
SyntaxKind[CommaToken](792,13): ,
SyntaxKind[Identifier](792,20): Return
SyntaxKind[CloseBracketToken](792,21): ]
SyntaxKind[ColonToken](792,23): :
SyntaxKind[LineTerminatorToken](793,2): «line terminator»
SyntaxKind[IndentToken](793,2): «indent»
SyntaxKind[Terminal](793,9): `catch`
SyntaxKind[Terminal](793,13): `(`
SyntaxKind[Identifier](793,28): CatchParameter
SyntaxKind[OpenBracketToken](793,29): [
SyntaxKind[QuestionToken](793,30): ?
SyntaxKind[Identifier](793,35): Yield
SyntaxKind[CloseBracketToken](793,36): ]
SyntaxKind[Terminal](793,40): `)`
SyntaxKind[Identifier](793,46): Block
SyntaxKind[OpenBracketToken](793,47): [
SyntaxKind[QuestionToken](793,48): ?
SyntaxKind[Identifier](793,53): Yield
SyntaxKind[CommaToken](793,54): ,
SyntaxKind[QuestionToken](793,56): ?
SyntaxKind[Identifier](793,62): Return
SyntaxKind[CloseBracketToken](793,63): ]
SyntaxKind[LineTerminatorToken](794,1): «line terminator»
SyntaxKind[DedentToken](794,1): «dedent»
SyntaxKind[LineTerminatorToken](795,1): «line terminator»
SyntaxKind[Identifier](795,8): Finally
SyntaxKind[OpenBracketToken](795,9): [
SyntaxKind[Identifier](795,14): Yield
SyntaxKind[CommaToken](795,15): ,
SyntaxKind[Identifier](795,22): Return
SyntaxKind[CloseBracketToken](795,23): ]
SyntaxKind[ColonToken](795,25): :
SyntaxKind[LineTerminatorToken](796,2): «line terminator»
SyntaxKind[IndentToken](796,2): «indent»
SyntaxKind[Terminal](796,11): `finally`
SyntaxKind[Identifier](796,17): Block
SyntaxKind[OpenBracketToken](796,18): [
SyntaxKind[QuestionToken](796,19): ?
SyntaxKind[Identifier](796,24): Yield
SyntaxKind[CommaToken](796,25): ,
SyntaxKind[QuestionToken](796,27): ?
SyntaxKind[Identifier](796,33): Return
SyntaxKind[CloseBracketToken](796,34): ]
SyntaxKind[LineTerminatorToken](797,1): «line terminator»
SyntaxKind[DedentToken](797,1): «dedent»
SyntaxKind[LineTerminatorToken](798,1): «line terminator»
SyntaxKind[Identifier](798,15): CatchParameter
SyntaxKind[OpenBracketToken](798,16): [
SyntaxKind[Identifier](798,21): Yield
SyntaxKind[CloseBracketToken](798,22): ]
SyntaxKind[ColonToken](798,24): :
SyntaxKind[LineTerminatorToken](799,2): «line terminator»
SyntaxKind[IndentToken](799,2): «indent»
SyntaxKind[Identifier](799,19): BindingIdentifier
SyntaxKind[OpenBracketToken](799,20): [
SyntaxKind[QuestionToken](799,21): ?
SyntaxKind[Identifier](799,26): Yield
SyntaxKind[CloseBracketToken](799,27): ]
SyntaxKind[LineTerminatorToken](800,2): «line terminator»
SyntaxKind[Identifier](800,16): BindingPattern
SyntaxKind[OpenBracketToken](800,17): [
SyntaxKind[QuestionToken](800,18): ?
SyntaxKind[Identifier](800,23): Yield
SyntaxKind[CloseBracketToken](800,24): ]
SyntaxKind[LineTerminatorToken](801,1): «line terminator»
SyntaxKind[DedentToken](801,1): «dedent»
SyntaxKind[LineTerminatorToken](802,1): «line terminator»
SyntaxKind[Identifier](802,18): DebuggerStatement
SyntaxKind[ColonToken](802,20): :
SyntaxKind[LineTerminatorToken](803,2): «line terminator»
SyntaxKind[IndentToken](803,2): «indent»
SyntaxKind[Terminal](803,12): `debugger`
SyntaxKind[Terminal](803,16): `;`
SyntaxKind[LineTerminatorToken](804,2): «line terminator»
SyntaxKind[LineTerminatorToken](805,1): «line terminator»
SyntaxKind[DedentToken](805,1): «dedent»
SyntaxKind[LineTerminatorToken](806,1): «line terminator»
SyntaxKind[LineTerminatorToken](807,1): «line terminator»
SyntaxKind[Identifier](807,20): FunctionDeclaration
SyntaxKind[OpenBracketToken](807,21): [
SyntaxKind[Identifier](807,26): Yield
SyntaxKind[CommaToken](807,27): ,
SyntaxKind[Identifier](807,35): Default
SyntaxKind[CloseBracketToken](807,36): ]
SyntaxKind[ColonToken](807,39): :
SyntaxKind[LineTerminatorToken](808,2): «line terminator»
SyntaxKind[IndentToken](808,2): «indent»
SyntaxKind[Terminal](808,12): `function`
SyntaxKind[Identifier](808,30): BindingIdentifier
SyntaxKind[OpenBracketToken](808,31): [
SyntaxKind[QuestionToken](808,32): ?
SyntaxKind[Identifier](808,37): Yield
SyntaxKind[CloseBracketToken](808,38): ]
SyntaxKind[Terminal](808,42): `(`
SyntaxKind[Identifier](808,59): FormalParameters
SyntaxKind[Terminal](808,63): `)`
SyntaxKind[Terminal](808,67): `{`
SyntaxKind[Identifier](808,80): FunctionBody
SyntaxKind[Terminal](808,84): `}`
SyntaxKind[LineTerminatorToken](809,2): «line terminator»
SyntaxKind[OpenBracketToken](809,3): [
SyntaxKind[PlusToken](809,4): +
SyntaxKind[Identifier](809,11): Default
SyntaxKind[CloseBracketToken](809,12): ]
SyntaxKind[Terminal](809,23): `function`
SyntaxKind[Terminal](809,27): `(`
SyntaxKind[Identifier](809,44): FormalParameters
SyntaxKind[Terminal](809,48): `)`
SyntaxKind[Terminal](809,52): `{`
SyntaxKind[Identifier](809,65): FunctionBody
SyntaxKind[Terminal](809,69): `}`
SyntaxKind[LineTerminatorToken](810,1): «line terminator»
SyntaxKind[DedentToken](810,1): «dedent»
SyntaxKind[LineTerminatorToken](811,1): «line terminator»
SyntaxKind[Identifier](811,19): FunctionExpression
SyntaxKind[ColonToken](811,21): :
SyntaxKind[LineTerminatorToken](812,2): «line terminator»
SyntaxKind[IndentToken](812,2): «indent»
SyntaxKind[Terminal](812,12): `function`
SyntaxKind[Identifier](812,30): BindingIdentifier
SyntaxKind[QuestionToken](812,31): ?
SyntaxKind[Terminal](812,35): `(`
SyntaxKind[Identifier](812,52): FormalParameters
SyntaxKind[Terminal](812,56): `)`
SyntaxKind[Terminal](812,60): `{`
SyntaxKind[Identifier](812,73): FunctionBody
SyntaxKind[Terminal](812,77): `}`
SyntaxKind[LineTerminatorToken](813,1): «line terminator»
SyntaxKind[DedentToken](813,1): «dedent»
SyntaxKind[LineTerminatorToken](814,1): «line terminator»
SyntaxKind[Identifier](814,23): StrictFormalParameters
SyntaxKind[OpenBracketToken](814,24): [
SyntaxKind[Identifier](814,29): Yield
SyntaxKind[CloseBracketToken](814,30): ]
SyntaxKind[ColonToken](814,32): :
SyntaxKind[LineTerminatorToken](815,2): «line terminator»
SyntaxKind[IndentToken](815,2): «indent»
SyntaxKind[Identifier](815,18): FormalParameters
SyntaxKind[OpenBracketToken](815,19): [
SyntaxKind[QuestionToken](815,20): ?
SyntaxKind[Identifier](815,25): Yield
SyntaxKind[CloseBracketToken](815,26): ]
SyntaxKind[LineTerminatorToken](816,1): «line terminator»
SyntaxKind[DedentToken](816,1): «dedent»
SyntaxKind[LineTerminatorToken](817,1): «line terminator»
SyntaxKind[Identifier](817,17): FormalParameters
SyntaxKind[OpenBracketToken](817,18): [
SyntaxKind[Identifier](817,23): Yield
SyntaxKind[CloseBracketToken](817,24): ]
SyntaxKind[ColonToken](817,26): :
SyntaxKind[LineTerminatorToken](818,2): «line terminator»
SyntaxKind[IndentToken](818,2): «indent»
SyntaxKind[OpenBracketToken](818,3): [
SyntaxKind[EmptyKeyword](818,8): empty
SyntaxKind[CloseBracketToken](818,9): ]
SyntaxKind[LineTerminatorToken](819,2): «line terminator»
SyntaxKind[Identifier](819,21): FormalParameterList
SyntaxKind[OpenBracketToken](819,22): [
SyntaxKind[QuestionToken](819,23): ?
SyntaxKind[Identifier](819,28): Yield
SyntaxKind[CloseBracketToken](819,29): ]
SyntaxKind[LineTerminatorToken](820,1): «line terminator»
SyntaxKind[DedentToken](820,1): «dedent»
SyntaxKind[LineTerminatorToken](821,1): «line terminator»
SyntaxKind[Identifier](821,20): FormalParameterList
SyntaxKind[OpenBracketToken](821,21): [
SyntaxKind[Identifier](821,26): Yield
SyntaxKind[CloseBracketToken](821,27): ]
SyntaxKind[ColonToken](821,30): :
SyntaxKind[LineTerminatorToken](822,2): «line terminator»
SyntaxKind[IndentToken](822,2): «indent»
SyntaxKind[Identifier](822,23): FunctionRestParameter
SyntaxKind[OpenBracketToken](822,24): [
SyntaxKind[QuestionToken](822,25): ?
SyntaxKind[Identifier](822,30): Yield
SyntaxKind[CloseBracketToken](822,31): ]
SyntaxKind[LineTerminatorToken](823,2): «line terminator»
SyntaxKind[Identifier](823,13): FormalsList
SyntaxKind[OpenBracketToken](823,14): [
SyntaxKind[QuestionToken](823,15): ?
SyntaxKind[Identifier](823,20): Yield
SyntaxKind[CloseBracketToken](823,21): ]
SyntaxKind[LineTerminatorToken](824,2): «line terminator»
SyntaxKind[Identifier](824,13): FormalsList
SyntaxKind[OpenBracketToken](824,14): [
SyntaxKind[QuestionToken](824,15): ?
SyntaxKind[Identifier](824,20): Yield
SyntaxKind[CloseBracketToken](824,21): ]
SyntaxKind[Terminal](824,25): `,`
SyntaxKind[Identifier](824,47): FunctionRestParameter
SyntaxKind[OpenBracketToken](824,48): [
SyntaxKind[QuestionToken](824,49): ?
SyntaxKind[Identifier](824,54): Yield
SyntaxKind[CloseBracketToken](824,55): ]
SyntaxKind[LineTerminatorToken](825,1): «line terminator»
SyntaxKind[DedentToken](825,1): «dedent»
SyntaxKind[LineTerminatorToken](826,1): «line terminator»
SyntaxKind[Identifier](826,12): FormalsList
SyntaxKind[OpenBracketToken](826,13): [
SyntaxKind[Identifier](826,18): Yield
SyntaxKind[CloseBracketToken](826,19): ]
SyntaxKind[ColonToken](826,21): :
SyntaxKind[LineTerminatorToken](827,2): «line terminator»
SyntaxKind[IndentToken](827,2): «indent»
SyntaxKind[Identifier](827,17): FormalParameter
SyntaxKind[OpenBracketToken](827,18): [
SyntaxKind[QuestionToken](827,19): ?
SyntaxKind[Identifier](827,24): Yield
SyntaxKind[CloseBracketToken](827,25): ]
SyntaxKind[LineTerminatorToken](828,2): «line terminator»
SyntaxKind[Identifier](828,13): FormalsList
SyntaxKind[OpenBracketToken](828,14): [
SyntaxKind[QuestionToken](828,15): ?
SyntaxKind[Identifier](828,20): Yield
SyntaxKind[CloseBracketToken](828,21): ]
SyntaxKind[Terminal](828,25): `,`
SyntaxKind[Identifier](828,41): FormalParameter
SyntaxKind[OpenBracketToken](828,42): [
SyntaxKind[QuestionToken](828,43): ?
SyntaxKind[Identifier](828,48): Yield
SyntaxKind[CloseBracketToken](828,49): ]
SyntaxKind[LineTerminatorToken](829,1): «line terminator»
SyntaxKind[DedentToken](829,1): «dedent»
SyntaxKind[LineTerminatorToken](830,1): «line terminator»
SyntaxKind[Identifier](830,22): FunctionRestParameter
SyntaxKind[OpenBracketToken](830,23): [
SyntaxKind[Identifier](830,28): Yield
SyntaxKind[CloseBracketToken](830,29): ]
SyntaxKind[ColonToken](830,31): :
SyntaxKind[LineTerminatorToken](831,2): «line terminator»
SyntaxKind[IndentToken](831,2): «indent»
SyntaxKind[Identifier](831,20): BindingRestElement
SyntaxKind[OpenBracketToken](831,21): [
SyntaxKind[QuestionToken](831,22): ?
SyntaxKind[Identifier](831,27): Yield
SyntaxKind[CloseBracketToken](831,28): ]
SyntaxKind[LineTerminatorToken](832,1): «line terminator»
SyntaxKind[DedentToken](832,1): «dedent»
SyntaxKind[LineTerminatorToken](833,1): «line terminator»
SyntaxKind[Identifier](833,16): FormalParameter
SyntaxKind[OpenBracketToken](833,17): [
SyntaxKind[Identifier](833,22): Yield
SyntaxKind[CloseBracketToken](833,23): ]
SyntaxKind[ColonToken](833,25): :
SyntaxKind[LineTerminatorToken](834,2): «line terminator»
SyntaxKind[IndentToken](834,2): «indent»
SyntaxKind[Identifier](834,16): BindingElement
SyntaxKind[OpenBracketToken](834,17): [
SyntaxKind[QuestionToken](834,18): ?
SyntaxKind[Identifier](834,23): Yield
SyntaxKind[CloseBracketToken](834,24): ]
SyntaxKind[LineTerminatorToken](835,1): «line terminator»
SyntaxKind[DedentToken](835,1): «dedent»
SyntaxKind[LineTerminatorToken](836,1): «line terminator»
SyntaxKind[Identifier](836,13): FunctionBody
SyntaxKind[OpenBracketToken](836,14): [
SyntaxKind[Identifier](836,19): Yield
SyntaxKind[CloseBracketToken](836,20): ]
SyntaxKind[ColonToken](836,22): :
SyntaxKind[LineTerminatorToken](837,2): «line terminator»
SyntaxKind[IndentToken](837,2): «indent»
SyntaxKind[Identifier](837,23): FunctionStatementList
SyntaxKind[OpenBracketToken](837,24): [
SyntaxKind[QuestionToken](837,25): ?
SyntaxKind[Identifier](837,30): Yield
SyntaxKind[CloseBracketToken](837,31): ]
SyntaxKind[LineTerminatorToken](838,1): «line terminator»
SyntaxKind[DedentToken](838,1): «dedent»
SyntaxKind[LineTerminatorToken](839,1): «line terminator»
SyntaxKind[Identifier](839,22): FunctionStatementList
SyntaxKind[OpenBracketToken](839,23): [
SyntaxKind[Identifier](839,28): Yield
SyntaxKind[CloseBracketToken](839,29): ]
SyntaxKind[ColonToken](839,31): :
SyntaxKind[LineTerminatorToken](840,2): «line terminator»
SyntaxKind[IndentToken](840,2): «indent»
SyntaxKind[Identifier](840,15): StatementList
SyntaxKind[OpenBracketToken](840,16): [
SyntaxKind[QuestionToken](840,17): ?
SyntaxKind[Identifier](840,22): Yield
SyntaxKind[CommaToken](840,23): ,
SyntaxKind[Identifier](840,30): Return
SyntaxKind[CloseBracketToken](840,31): ]
SyntaxKind[QuestionToken](840,32): ?
SyntaxKind[LineTerminatorToken](841,1): «line terminator»
SyntaxKind[DedentToken](841,1): «dedent»
SyntaxKind[LineTerminatorToken](842,1): «line terminator»
SyntaxKind[Identifier](842,14): ArrowFunction
SyntaxKind[OpenBracketToken](842,15): [
SyntaxKind[Identifier](842,17): In
SyntaxKind[CommaToken](842,18): ,
SyntaxKind[Identifier](842,24): Yield
SyntaxKind[CloseBracketToken](842,25): ]
SyntaxKind[ColonToken](842,28): :
SyntaxKind[LineTerminatorToken](843,2): «line terminator»
SyntaxKind[IndentToken](843,2): «indent»
SyntaxKind[Identifier](843,17): ArrowParameters
SyntaxKind[OpenBracketToken](843,18): [
SyntaxKind[QuestionToken](843,19): ?
SyntaxKind[Identifier](843,24): Yield
SyntaxKind[CloseBracketToken](843,25): ]
SyntaxKind[OpenBracketToken](843,27): [
SyntaxKind[NoKeyword](843,29): no
SyntaxKind[Identifier](843,44): LineTerminator
SyntaxKind[HereKeyword](843,49): here
SyntaxKind[CloseBracketToken](843,50): ]
SyntaxKind[Terminal](843,55): `=>`
SyntaxKind[Identifier](843,67): ConciseBody
SyntaxKind[OpenBracketToken](843,68): [
SyntaxKind[QuestionToken](843,69): ?
SyntaxKind[Identifier](843,71): In
SyntaxKind[CloseBracketToken](843,72): ]
SyntaxKind[LineTerminatorToken](844,1): «line terminator»
SyntaxKind[DedentToken](844,1): «dedent»
SyntaxKind[LineTerminatorToken](845,1): «line terminator»
SyntaxKind[Identifier](845,16): ArrowParameters
SyntaxKind[OpenBracketToken](845,17): [
SyntaxKind[Identifier](845,22): Yield
SyntaxKind[CloseBracketToken](845,23): ]
SyntaxKind[ColonToken](845,26): :
SyntaxKind[LineTerminatorToken](846,2): «line terminator»
SyntaxKind[IndentToken](846,2): «indent»
SyntaxKind[Identifier](846,19): BindingIdentifier
SyntaxKind[OpenBracketToken](846,20): [
SyntaxKind[QuestionToken](846,21): ?
SyntaxKind[Identifier](846,26): Yield
SyntaxKind[CloseBracketToken](846,27): ]
SyntaxKind[LineTerminatorToken](847,2): «line terminator»
SyntaxKind[Identifier](847,51): CoverParenthesizedExpressionAndArrowParameterList
SyntaxKind[OpenBracketToken](847,52): [
SyntaxKind[QuestionToken](847,53): ?
SyntaxKind[Identifier](847,58): Yield
SyntaxKind[CloseBracketToken](847,59): ]
SyntaxKind[LineTerminatorToken](848,1): «line terminator»
SyntaxKind[DedentToken](848,1): «dedent»
SyntaxKind[LineTerminatorToken](849,1): «line terminator»
SyntaxKind[Identifier](849,12): ConciseBody
SyntaxKind[OpenBracketToken](849,13): [
SyntaxKind[Identifier](849,15): In
SyntaxKind[CloseBracketToken](849,16): ]
SyntaxKind[ColonToken](849,18): :
SyntaxKind[LineTerminatorToken](850,2): «line terminator»
SyntaxKind[IndentToken](850,2): «indent»
SyntaxKind[OpenBracketToken](850,3): [
SyntaxKind[LookaheadKeyword](850,12): lookahead
SyntaxKind[ExclamationEqualsToken](850,15): !=
SyntaxKind[Terminal](850,19): `{`
SyntaxKind[CloseBracketToken](850,20): ]
SyntaxKind[Identifier](850,41): AssignmentExpression
SyntaxKind[OpenBracketToken](850,42): [
SyntaxKind[QuestionToken](850,43): ?
SyntaxKind[Identifier](850,45): In
SyntaxKind[CloseBracketToken](850,46): ]
SyntaxKind[LineTerminatorToken](851,2): «line terminator»
SyntaxKind[Terminal](851,5): `{`
SyntaxKind[Identifier](851,18): FunctionBody
SyntaxKind[Terminal](851,22): `}`
SyntaxKind[LineTerminatorToken](852,1): «line terminator»
SyntaxKind[DedentToken](852,1): «dedent»
SyntaxKind[LineTerminatorToken](853,1): «line terminator»
SyntaxKind[Identifier](853,17): MethodDefinition
SyntaxKind[OpenBracketToken](853,18): [
SyntaxKind[Identifier](853,23): Yield
SyntaxKind[CloseBracketToken](853,24): ]
SyntaxKind[ColonToken](853,26): :
SyntaxKind[LineTerminatorToken](854,2): «line terminator»
SyntaxKind[IndentToken](854,2): «indent»
SyntaxKind[Identifier](854,14): PropertyName
SyntaxKind[OpenBracketToken](854,15): [
SyntaxKind[QuestionToken](854,16): ?
SyntaxKind[Identifier](854,21): Yield
SyntaxKind[CloseBracketToken](854,22): ]
SyntaxKind[Terminal](854,26): `(`
SyntaxKind[Identifier](854,49): StrictFormalParameters
SyntaxKind[Terminal](854,53): `)`
SyntaxKind[Terminal](854,57): `{`
SyntaxKind[Identifier](854,70): FunctionBody
SyntaxKind[Terminal](854,74): `}`
SyntaxKind[LineTerminatorToken](855,2): «line terminator»
SyntaxKind[Identifier](855,17): GeneratorMethod
SyntaxKind[OpenBracketToken](855,18): [
SyntaxKind[QuestionToken](855,19): ?
SyntaxKind[Identifier](855,24): Yield
SyntaxKind[CloseBracketToken](855,25): ]
SyntaxKind[LineTerminatorToken](856,2): «line terminator»
SyntaxKind[Terminal](856,7): `get`
SyntaxKind[Identifier](856,20): PropertyName
SyntaxKind[OpenBracketToken](856,21): [
SyntaxKind[QuestionToken](856,22): ?
SyntaxKind[Identifier](856,27): Yield
SyntaxKind[CloseBracketToken](856,28): ]
SyntaxKind[Terminal](856,32): `(`
SyntaxKind[Terminal](856,36): `)`
SyntaxKind[Terminal](856,40): `{`
SyntaxKind[Identifier](856,53): FunctionBody
SyntaxKind[Terminal](856,57): `}`
SyntaxKind[LineTerminatorToken](857,2): «line terminator»
SyntaxKind[Terminal](857,7): `set`
SyntaxKind[Identifier](857,20): PropertyName
SyntaxKind[OpenBracketToken](857,21): [
SyntaxKind[QuestionToken](857,22): ?
SyntaxKind[Identifier](857,27): Yield
SyntaxKind[CloseBracketToken](857,28): ]
SyntaxKind[Terminal](857,32): `(`
SyntaxKind[Identifier](857,57): PropertySetParameterList
SyntaxKind[Terminal](857,61): `)`
SyntaxKind[Terminal](857,65): `{`
SyntaxKind[Identifier](857,78): FunctionBody
SyntaxKind[Terminal](857,82): `}`
SyntaxKind[LineTerminatorToken](858,1): «line terminator»
SyntaxKind[DedentToken](858,1): «dedent»
SyntaxKind[LineTerminatorToken](859,1): «line terminator»
SyntaxKind[Identifier](859,25): PropertySetParameterList
SyntaxKind[ColonToken](859,27): :
SyntaxKind[LineTerminatorToken](860,2): «line terminator»
SyntaxKind[IndentToken](860,2): «indent»
SyntaxKind[Identifier](860,17): FormalParameter
SyntaxKind[LineTerminatorToken](861,1): «line terminator»
SyntaxKind[DedentToken](861,1): «dedent»
SyntaxKind[LineTerminatorToken](862,1): «line terminator»
SyntaxKind[Identifier](862,16): GeneratorMethod
SyntaxKind[OpenBracketToken](862,17): [
SyntaxKind[Identifier](862,22): Yield
SyntaxKind[CloseBracketToken](862,23): ]
SyntaxKind[ColonToken](862,25): :
SyntaxKind[LineTerminatorToken](863,2): «line terminator»
SyntaxKind[IndentToken](863,2): «indent»
SyntaxKind[Terminal](863,5): `*`
SyntaxKind[Identifier](863,18): PropertyName
SyntaxKind[OpenBracketToken](863,19): [
SyntaxKind[QuestionToken](863,20): ?
SyntaxKind[Identifier](863,25): Yield
SyntaxKind[CloseBracketToken](863,26): ]
SyntaxKind[Terminal](863,30): `(`
SyntaxKind[Identifier](863,53): StrictFormalParameters
SyntaxKind[OpenBracketToken](863,54): [
SyntaxKind[Identifier](863,59): Yield
SyntaxKind[CloseBracketToken](863,60): ]
SyntaxKind[Terminal](863,64): `)`
SyntaxKind[Terminal](863,68): `{`
SyntaxKind[Identifier](863,82): GeneratorBody
SyntaxKind[Terminal](863,86): `}`
SyntaxKind[LineTerminatorToken](864,1): «line terminator»
SyntaxKind[DedentToken](864,1): «dedent»
SyntaxKind[LineTerminatorToken](865,1): «line terminator»
SyntaxKind[Identifier](865,21): GeneratorDeclaration
SyntaxKind[OpenBracketToken](865,22): [
SyntaxKind[Identifier](865,27): Yield
SyntaxKind[CommaToken](865,28): ,
SyntaxKind[Identifier](865,36): Default
SyntaxKind[CloseBracketToken](865,37): ]
SyntaxKind[ColonToken](865,39): :
SyntaxKind[LineTerminatorToken](866,2): «line terminator»
SyntaxKind[IndentToken](866,2): «indent»
SyntaxKind[Terminal](866,12): `function`
SyntaxKind[Terminal](866,16): `*`
SyntaxKind[Identifier](866,34): BindingIdentifier
SyntaxKind[OpenBracketToken](866,35): [
SyntaxKind[QuestionToken](866,36): ?
SyntaxKind[Identifier](866,41): Yield
SyntaxKind[CloseBracketToken](866,42): ]
SyntaxKind[Terminal](866,46): `(`
SyntaxKind[Identifier](866,63): FormalParameters
SyntaxKind[OpenBracketToken](866,64): [
SyntaxKind[Identifier](866,69): Yield
SyntaxKind[CloseBracketToken](866,70): ]
SyntaxKind[Terminal](866,74): `)`
SyntaxKind[Terminal](866,78): `{`
SyntaxKind[Identifier](866,92): GeneratorBody
SyntaxKind[Terminal](866,96): `}`
SyntaxKind[LineTerminatorToken](867,2): «line terminator»
SyntaxKind[OpenBracketToken](867,3): [
SyntaxKind[PlusToken](867,4): +
SyntaxKind[Identifier](867,11): Default
SyntaxKind[CloseBracketToken](867,12): ]
SyntaxKind[Terminal](867,23): `function`
SyntaxKind[Terminal](867,27): `*`
SyntaxKind[Terminal](867,31): `(`
SyntaxKind[Identifier](867,48): FormalParameters
SyntaxKind[OpenBracketToken](867,49): [
SyntaxKind[Identifier](867,54): Yield
SyntaxKind[CloseBracketToken](867,55): ]
SyntaxKind[Terminal](867,59): `)`
SyntaxKind[Terminal](867,63): `{`
SyntaxKind[Identifier](867,77): GeneratorBody
SyntaxKind[Terminal](867,81): `}`
SyntaxKind[LineTerminatorToken](868,1): «line terminator»
SyntaxKind[DedentToken](868,1): «dedent»
SyntaxKind[LineTerminatorToken](869,1): «line terminator»
SyntaxKind[Identifier](869,20): GeneratorExpression
SyntaxKind[ColonToken](869,22): :
SyntaxKind[LineTerminatorToken](870,2): «line terminator»
SyntaxKind[IndentToken](870,2): «indent»
SyntaxKind[Terminal](870,12): `function`
SyntaxKind[Terminal](870,16): `*`
SyntaxKind[Identifier](870,34): BindingIdentifier
SyntaxKind[OpenBracketToken](870,35): [
SyntaxKind[Identifier](870,40): Yield
SyntaxKind[CloseBracketToken](870,41): ]
SyntaxKind[QuestionToken](870,42): ?
SyntaxKind[Terminal](870,46): `(`
SyntaxKind[Identifier](870,63): FormalParameters
SyntaxKind[OpenBracketToken](870,64): [
SyntaxKind[Identifier](870,69): Yield
SyntaxKind[CloseBracketToken](870,70): ]
SyntaxKind[Terminal](870,74): `)`
SyntaxKind[Terminal](870,78): `{`
SyntaxKind[Identifier](870,92): GeneratorBody
SyntaxKind[Terminal](870,96): `}`
SyntaxKind[LineTerminatorToken](871,1): «line terminator»
SyntaxKind[DedentToken](871,1): «dedent»
SyntaxKind[LineTerminatorToken](872,1): «line terminator»
SyntaxKind[Identifier](872,14): GeneratorBody
SyntaxKind[ColonToken](872,16): :
SyntaxKind[LineTerminatorToken](873,2): «line terminator»
SyntaxKind[IndentToken](873,2): «indent»
SyntaxKind[Identifier](873,14): FunctionBody
SyntaxKind[OpenBracketToken](873,15): [
SyntaxKind[Identifier](873,20): Yield
SyntaxKind[CloseBracketToken](873,21): ]
SyntaxKind[LineTerminatorToken](874,1): «line terminator»
SyntaxKind[DedentToken](874,1): «dedent»
SyntaxKind[LineTerminatorToken](875,1): «line terminator»
SyntaxKind[Identifier](875,16): YieldExpression
SyntaxKind[OpenBracketToken](875,17): [
SyntaxKind[Identifier](875,19): In
SyntaxKind[CloseBracketToken](875,20): ]
SyntaxKind[ColonToken](875,22): :
SyntaxKind[LineTerminatorToken](876,2): «line terminator»
SyntaxKind[IndentToken](876,2): «indent»
SyntaxKind[Terminal](876,9): `yield`
SyntaxKind[LineTerminatorToken](877,2): «line terminator»
SyntaxKind[Terminal](877,9): `yield`
SyntaxKind[OpenBracketToken](877,11): [
SyntaxKind[NoKeyword](877,13): no
SyntaxKind[Identifier](877,28): LineTerminator
SyntaxKind[HereKeyword](877,33): here
SyntaxKind[CloseBracketToken](877,34): ]
SyntaxKind[Identifier](877,55): AssignmentExpression
SyntaxKind[OpenBracketToken](877,56): [
SyntaxKind[QuestionToken](877,57): ?
SyntaxKind[Identifier](877,59): In
SyntaxKind[CommaToken](877,60): ,
SyntaxKind[Identifier](877,66): Yield
SyntaxKind[CloseBracketToken](877,67): ]
SyntaxKind[LineTerminatorToken](878,2): «line terminator»
SyntaxKind[Terminal](878,9): `yield`
SyntaxKind[OpenBracketToken](878,11): [
SyntaxKind[NoKeyword](878,13): no
SyntaxKind[Identifier](878,28): LineTerminator
SyntaxKind[HereKeyword](878,33): here
SyntaxKind[CloseBracketToken](878,34): ]
SyntaxKind[Terminal](878,38): `*`
SyntaxKind[Identifier](878,59): AssignmentExpression
SyntaxKind[OpenBracketToken](878,60): [
SyntaxKind[QuestionToken](878,61): ?
SyntaxKind[Identifier](878,63): In
SyntaxKind[CommaToken](878,64): ,
SyntaxKind[Identifier](878,70): Yield
SyntaxKind[CloseBracketToken](878,71): ]
SyntaxKind[LineTerminatorToken](879,1): «line terminator»
SyntaxKind[DedentToken](879,1): «dedent»
SyntaxKind[LineTerminatorToken](880,1): «line terminator»
SyntaxKind[Identifier](880,17): ClassDeclaration
SyntaxKind[OpenBracketToken](880,18): [
SyntaxKind[Identifier](880,23): Yield
SyntaxKind[CommaToken](880,24): ,
SyntaxKind[Identifier](880,32): Default
SyntaxKind[CloseBracketToken](880,33): ]
SyntaxKind[ColonToken](880,35): :
SyntaxKind[LineTerminatorToken](881,2): «line terminator»
SyntaxKind[IndentToken](881,2): «indent»
SyntaxKind[Terminal](881,9): `class`
SyntaxKind[Identifier](881,27): BindingIdentifier
SyntaxKind[OpenBracketToken](881,28): [
SyntaxKind[QuestionToken](881,29): ?
SyntaxKind[Identifier](881,34): Yield
SyntaxKind[CloseBracketToken](881,35): ]
SyntaxKind[Identifier](881,45): ClassTail
SyntaxKind[OpenBracketToken](881,46): [
SyntaxKind[QuestionToken](881,47): ?
SyntaxKind[Identifier](881,52): Yield
SyntaxKind[CloseBracketToken](881,53): ]
SyntaxKind[LineTerminatorToken](882,2): «line terminator»
SyntaxKind[OpenBracketToken](882,3): [
SyntaxKind[PlusToken](882,4): +
SyntaxKind[Identifier](882,11): Default
SyntaxKind[CloseBracketToken](882,12): ]
SyntaxKind[Terminal](882,20): `class`
SyntaxKind[Identifier](882,30): ClassTail
SyntaxKind[OpenBracketToken](882,31): [
SyntaxKind[QuestionToken](882,32): ?
SyntaxKind[Identifier](882,37): Yield
SyntaxKind[CloseBracketToken](882,38): ]
SyntaxKind[LineTerminatorToken](883,1): «line terminator»
SyntaxKind[DedentToken](883,1): «dedent»
SyntaxKind[LineTerminatorToken](884,1): «line terminator»
SyntaxKind[Identifier](884,16): ClassExpression
SyntaxKind[OpenBracketToken](884,17): [
SyntaxKind[Identifier](884,22): Yield
SyntaxKind[CloseBracketToken](884,23): ]
SyntaxKind[ColonToken](884,25): :
SyntaxKind[LineTerminatorToken](885,2): «line terminator»
SyntaxKind[IndentToken](885,2): «indent»
SyntaxKind[Terminal](885,9): `class`
SyntaxKind[Identifier](885,27): BindingIdentifier
SyntaxKind[OpenBracketToken](885,28): [
SyntaxKind[QuestionToken](885,29): ?
SyntaxKind[Identifier](885,34): Yield
SyntaxKind[CloseBracketToken](885,35): ]
SyntaxKind[QuestionToken](885,36): ?
SyntaxKind[Identifier](885,46): ClassTail
SyntaxKind[OpenBracketToken](885,47): [
SyntaxKind[QuestionToken](885,48): ?
SyntaxKind[Identifier](885,53): Yield
SyntaxKind[CloseBracketToken](885,54): ]
SyntaxKind[LineTerminatorToken](886,1): «line terminator»
SyntaxKind[DedentToken](886,1): «dedent»
SyntaxKind[LineTerminatorToken](887,1): «line terminator»
SyntaxKind[Identifier](887,10): ClassTail
SyntaxKind[OpenBracketToken](887,11): [
SyntaxKind[Identifier](887,16): Yield
SyntaxKind[CloseBracketToken](887,17): ]
SyntaxKind[ColonToken](887,19): :
SyntaxKind[LineTerminatorToken](888,2): «line terminator»
SyntaxKind[IndentToken](888,2): «indent»
SyntaxKind[Identifier](888,15): ClassHeritage
SyntaxKind[OpenBracketToken](888,16): [
SyntaxKind[QuestionToken](888,17): ?
SyntaxKind[Identifier](888,22): Yield
SyntaxKind[CloseBracketToken](888,23): ]
SyntaxKind[QuestionToken](888,24): ?
SyntaxKind[Terminal](888,28): `{`
SyntaxKind[Identifier](888,38): ClassBody
SyntaxKind[OpenBracketToken](888,39): [
SyntaxKind[QuestionToken](888,40): ?
SyntaxKind[Identifier](888,45): Yield
SyntaxKind[CloseBracketToken](888,46): ]
SyntaxKind[QuestionToken](888,47): ?
SyntaxKind[Terminal](888,51): `}`
SyntaxKind[LineTerminatorToken](889,1): «line terminator»
SyntaxKind[DedentToken](889,1): «dedent»
SyntaxKind[LineTerminatorToken](890,1): «line terminator»
SyntaxKind[Identifier](890,14): ClassHeritage
SyntaxKind[OpenBracketToken](890,15): [
SyntaxKind[Identifier](890,20): Yield
SyntaxKind[CloseBracketToken](890,21): ]
SyntaxKind[ColonToken](890,23): :
SyntaxKind[LineTerminatorToken](891,2): «line terminator»
SyntaxKind[IndentToken](891,2): «indent»
SyntaxKind[Terminal](891,11): `extends`
SyntaxKind[Identifier](891,34): LeftHandSideExpression
SyntaxKind[OpenBracketToken](891,35): [
SyntaxKind[QuestionToken](891,36): ?
SyntaxKind[Identifier](891,41): Yield
SyntaxKind[CloseBracketToken](891,42): ]
SyntaxKind[LineTerminatorToken](892,1): «line terminator»
SyntaxKind[DedentToken](892,1): «dedent»
SyntaxKind[LineTerminatorToken](893,1): «line terminator»
SyntaxKind[Identifier](893,10): ClassBody
SyntaxKind[OpenBracketToken](893,11): [
SyntaxKind[Identifier](893,16): Yield
SyntaxKind[CloseBracketToken](893,17): ]
SyntaxKind[ColonToken](893,19): :
SyntaxKind[LineTerminatorToken](894,2): «line terminator»
SyntaxKind[IndentToken](894,2): «indent»
SyntaxKind[Identifier](894,18): ClassElementList
SyntaxKind[OpenBracketToken](894,19): [
SyntaxKind[QuestionToken](894,20): ?
SyntaxKind[Identifier](894,25): Yield
SyntaxKind[CloseBracketToken](894,26): ]
SyntaxKind[LineTerminatorToken](895,1): «line terminator»
SyntaxKind[DedentToken](895,1): «dedent»
SyntaxKind[LineTerminatorToken](896,1): «line terminator»
SyntaxKind[Identifier](896,17): ClassElementList
SyntaxKind[OpenBracketToken](896,18): [
SyntaxKind[Identifier](896,23): Yield
SyntaxKind[CloseBracketToken](896,24): ]
SyntaxKind[ColonToken](896,26): :
SyntaxKind[LineTerminatorToken](897,2): «line terminator»
SyntaxKind[IndentToken](897,2): «indent»
SyntaxKind[Identifier](897,14): ClassElement
SyntaxKind[OpenBracketToken](897,15): [
SyntaxKind[QuestionToken](897,16): ?
SyntaxKind[Identifier](897,21): Yield
SyntaxKind[CloseBracketToken](897,22): ]
SyntaxKind[LineTerminatorToken](898,2): «line terminator»
SyntaxKind[Identifier](898,18): ClassElementList
SyntaxKind[OpenBracketToken](898,19): [
SyntaxKind[QuestionToken](898,20): ?
SyntaxKind[Identifier](898,25): Yield
SyntaxKind[CloseBracketToken](898,26): ]
SyntaxKind[Identifier](898,40): ClassElement
SyntaxKind[OpenBracketToken](898,41): [
SyntaxKind[QuestionToken](898,42): ?
SyntaxKind[Identifier](898,47): Yield
SyntaxKind[CloseBracketToken](898,48): ]
SyntaxKind[LineTerminatorToken](899,1): «line terminator»
SyntaxKind[DedentToken](899,1): «dedent»
SyntaxKind[LineTerminatorToken](900,1): «line terminator»
SyntaxKind[Identifier](900,13): ClassElement
SyntaxKind[OpenBracketToken](900,14): [
SyntaxKind[Identifier](900,19): Yield
SyntaxKind[CloseBracketToken](900,20): ]
SyntaxKind[ColonToken](900,22): :
SyntaxKind[LineTerminatorToken](901,2): «line terminator»
SyntaxKind[IndentToken](901,2): «indent»
SyntaxKind[Identifier](901,18): MethodDefinition
SyntaxKind[OpenBracketToken](901,19): [
SyntaxKind[QuestionToken](901,20): ?
SyntaxKind[Identifier](901,25): Yield
SyntaxKind[CloseBracketToken](901,26): ]
SyntaxKind[LineTerminatorToken](902,2): «line terminator»
SyntaxKind[Terminal](902,10): `static`
SyntaxKind[Identifier](902,27): MethodDefinition
SyntaxKind[OpenBracketToken](902,28): [
SyntaxKind[QuestionToken](902,29): ?
SyntaxKind[Identifier](902,34): Yield
SyntaxKind[CloseBracketToken](902,35): ]
SyntaxKind[LineTerminatorToken](903,2): «line terminator»
SyntaxKind[Terminal](903,5): `;`
SyntaxKind[LineTerminatorToken](904,1): «line terminator»
SyntaxKind[DedentToken](904,1): «dedent»
SyntaxKind[LineTerminatorToken](905,1): «line terminator»
SyntaxKind[LineTerminatorToken](906,1): «line terminator»
SyntaxKind[Identifier](906,7): Script
SyntaxKind[ColonToken](906,9): :
SyntaxKind[LineTerminatorToken](907,2): «line terminator»
SyntaxKind[IndentToken](907,2): «indent»
SyntaxKind[Identifier](907,12): ScriptBody
SyntaxKind[QuestionToken](907,13): ?
SyntaxKind[LineTerminatorToken](908,2): «line terminator»
SyntaxKind[LineTerminatorToken](909,1): «line terminator»
SyntaxKind[DedentToken](909,1): «dedent»
SyntaxKind[Identifier](909,11): ScriptBody
SyntaxKind[ColonToken](909,13): :
SyntaxKind[LineTerminatorToken](910,2): «line terminator»
SyntaxKind[IndentToken](910,2): «indent»
SyntaxKind[Identifier](910,15): StatementList
SyntaxKind[LineTerminatorToken](911,1): «line terminator»
SyntaxKind[DedentToken](911,1): «dedent»
SyntaxKind[LineTerminatorToken](912,1): «line terminator»
SyntaxKind[Identifier](912,7): Module
SyntaxKind[ColonToken](912,9): :
SyntaxKind[LineTerminatorToken](913,2): «line terminator»
SyntaxKind[IndentToken](913,2): «indent»
SyntaxKind[Identifier](913,12): ModuleBody
SyntaxKind[QuestionToken](913,13): ?
SyntaxKind[LineTerminatorToken](914,1): «line terminator»
SyntaxKind[DedentToken](914,1): «dedent»
SyntaxKind[LineTerminatorToken](915,1): «line terminator»
SyntaxKind[Identifier](915,11): ModuleBody
SyntaxKind[ColonToken](915,13): :
SyntaxKind[LineTerminatorToken](916,2): «line terminator»
SyntaxKind[IndentToken](916,2): «indent»
SyntaxKind[Identifier](916,16): ModuleItemList
SyntaxKind[LineTerminatorToken](917,1): «line terminator»
SyntaxKind[DedentToken](917,1): «dedent»
SyntaxKind[LineTerminatorToken](918,1): «line terminator»
SyntaxKind[Identifier](918,15): ModuleItemList
SyntaxKind[ColonToken](918,17): :
SyntaxKind[LineTerminatorToken](919,2): «line terminator»
SyntaxKind[IndentToken](919,2): «indent»
SyntaxKind[Identifier](919,12): ModuleItem
SyntaxKind[LineTerminatorToken](920,2): «line terminator»
SyntaxKind[Identifier](920,16): ModuleItemList
SyntaxKind[Identifier](920,28): ModuleItem
SyntaxKind[LineTerminatorToken](921,1): «line terminator»
SyntaxKind[DedentToken](921,1): «dedent»
SyntaxKind[LineTerminatorToken](922,1): «line terminator»
SyntaxKind[Identifier](922,11): ModuleItem
SyntaxKind[ColonToken](922,13): :
SyntaxKind[LineTerminatorToken](923,2): «line terminator»
SyntaxKind[IndentToken](923,2): «indent»
SyntaxKind[Identifier](923,19): ImportDeclaration
SyntaxKind[LineTerminatorToken](924,2): «line terminator»
SyntaxKind[Identifier](924,19): ExportDeclaration
SyntaxKind[LineTerminatorToken](925,2): «line terminator»
SyntaxKind[Identifier](925,19): StatementListItem
SyntaxKind[LineTerminatorToken](926,1): «line terminator»
SyntaxKind[DedentToken](926,1): «dedent»
SyntaxKind[LineTerminatorToken](927,1): «line terminator»
SyntaxKind[Identifier](927,18): ImportDeclaration
SyntaxKind[ColonToken](927,20): :
SyntaxKind[LineTerminatorToken](928,2): «line terminator»
SyntaxKind[IndentToken](928,2): «indent»
SyntaxKind[Terminal](928,10): `import`
SyntaxKind[Identifier](928,24): ImportClause
SyntaxKind[Identifier](928,35): FromClause
SyntaxKind[Terminal](928,39): `;`
SyntaxKind[LineTerminatorToken](929,2): «line terminator»
SyntaxKind[Terminal](929,10): `import`
SyntaxKind[Identifier](929,27): ModuleSpecifier
SyntaxKind[Terminal](929,31): `;`
SyntaxKind[LineTerminatorToken](930,1): «line terminator»
SyntaxKind[DedentToken](930,1): «dedent»
SyntaxKind[LineTerminatorToken](931,1): «line terminator»
SyntaxKind[Identifier](931,13): ImportClause
SyntaxKind[ColonToken](931,15): :
SyntaxKind[LineTerminatorToken](932,2): «line terminator»
SyntaxKind[IndentToken](932,2): «indent»
SyntaxKind[Identifier](932,24): ImportedDefaultBinding
SyntaxKind[LineTerminatorToken](933,2): «line terminator»
SyntaxKind[Identifier](933,17): NameSpaceImport
SyntaxKind[LineTerminatorToken](934,2): «line terminator»
SyntaxKind[Identifier](934,14): NamedImports
SyntaxKind[LineTerminatorToken](935,2): «line terminator»
SyntaxKind[Identifier](935,24): ImportedDefaultBinding
SyntaxKind[Terminal](935,28): `,`
SyntaxKind[Identifier](935,44): NameSpaceImport
SyntaxKind[LineTerminatorToken](936,2): «line terminator»
SyntaxKind[Identifier](936,24): ImportedDefaultBinding
SyntaxKind[Terminal](936,28): `,`
SyntaxKind[Identifier](936,41): NamedImports
SyntaxKind[LineTerminatorToken](937,1): «line terminator»
SyntaxKind[DedentToken](937,1): «dedent»
SyntaxKind[LineTerminatorToken](938,1): «line terminator»
SyntaxKind[Identifier](938,23): ImportedDefaultBinding
SyntaxKind[ColonToken](938,25): :
SyntaxKind[LineTerminatorToken](939,2): «line terminator»
SyntaxKind[IndentToken](939,2): «indent»
SyntaxKind[Identifier](939,17): ImportedBinding
SyntaxKind[LineTerminatorToken](940,1): «line terminator»
SyntaxKind[DedentToken](940,1): «dedent»
SyntaxKind[LineTerminatorToken](941,1): «line terminator»
SyntaxKind[Identifier](941,16): NameSpaceImport
SyntaxKind[ColonToken](941,18): :
SyntaxKind[LineTerminatorToken](942,2): «line terminator»
SyntaxKind[IndentToken](942,2): «indent»
SyntaxKind[Terminal](942,5): `*`
SyntaxKind[Terminal](942,10): `as`
SyntaxKind[Identifier](942,26): ImportedBinding
SyntaxKind[LineTerminatorToken](943,1): «line terminator»
SyntaxKind[DedentToken](943,1): «dedent»
SyntaxKind[LineTerminatorToken](944,1): «line terminator»
SyntaxKind[Identifier](944,13): NamedImports
SyntaxKind[ColonToken](944,15): :
SyntaxKind[LineTerminatorToken](945,2): «line terminator»
SyntaxKind[IndentToken](945,2): «indent»
SyntaxKind[Terminal](945,5): `{`
SyntaxKind[Terminal](945,9): `}`
SyntaxKind[LineTerminatorToken](946,2): «line terminator»
SyntaxKind[Terminal](946,5): `{`
SyntaxKind[Identifier](946,17): ImportsList
SyntaxKind[Terminal](946,21): `}`
SyntaxKind[LineTerminatorToken](947,2): «line terminator»
SyntaxKind[Terminal](947,5): `{`
SyntaxKind[Identifier](947,17): ImportsList
SyntaxKind[Terminal](947,21): `,`
SyntaxKind[Terminal](947,25): `}`
SyntaxKind[LineTerminatorToken](948,1): «line terminator»
SyntaxKind[DedentToken](948,1): «dedent»
SyntaxKind[LineTerminatorToken](949,1): «line terminator»
SyntaxKind[Identifier](949,11): FromClause
SyntaxKind[ColonToken](949,13): :
SyntaxKind[LineTerminatorToken](950,2): «line terminator»
SyntaxKind[IndentToken](950,2): «indent»
SyntaxKind[Terminal](950,8): `from`
SyntaxKind[Identifier](950,24): ModuleSpecifier
SyntaxKind[LineTerminatorToken](951,1): «line terminator»
SyntaxKind[DedentToken](951,1): «dedent»
SyntaxKind[LineTerminatorToken](952,1): «line terminator»
SyntaxKind[Identifier](952,12): ImportsList
SyntaxKind[ColonToken](952,14): :
SyntaxKind[LineTerminatorToken](953,2): «line terminator»
SyntaxKind[IndentToken](953,2): «indent»
SyntaxKind[Identifier](953,17): ImportSpecifier
SyntaxKind[LineTerminatorToken](954,2): «line terminator»
SyntaxKind[Identifier](954,13): ImportsList
SyntaxKind[Terminal](954,17): `,`
SyntaxKind[Identifier](954,33): ImportSpecifier
SyntaxKind[LineTerminatorToken](955,1): «line terminator»
SyntaxKind[DedentToken](955,1): «dedent»
SyntaxKind[LineTerminatorToken](956,1): «line terminator»
SyntaxKind[Identifier](956,16): ImportSpecifier
SyntaxKind[ColonToken](956,18): :
SyntaxKind[LineTerminatorToken](957,2): «line terminator»
SyntaxKind[IndentToken](957,2): «indent»
SyntaxKind[Identifier](957,17): ImportedBinding
SyntaxKind[LineTerminatorToken](958,2): «line terminator»
SyntaxKind[Identifier](958,16): IdentifierName
SyntaxKind[Terminal](958,21): `as`
SyntaxKind[Identifier](958,37): ImportedBinding
SyntaxKind[LineTerminatorToken](959,1): «line terminator»
SyntaxKind[DedentToken](959,1): «dedent»
SyntaxKind[LineTerminatorToken](960,1): «line terminator»
SyntaxKind[Identifier](960,16): ModuleSpecifier
SyntaxKind[ColonToken](960,18): :
SyntaxKind[LineTerminatorToken](961,2): «line terminator»
SyntaxKind[IndentToken](961,2): «indent»
SyntaxKind[Identifier](961,15): StringLiteral
SyntaxKind[LineTerminatorToken](962,1): «line terminator»
SyntaxKind[DedentToken](962,1): «dedent»
SyntaxKind[LineTerminatorToken](963,1): «line terminator»
SyntaxKind[Identifier](963,16): ImportedBinding
SyntaxKind[ColonToken](963,18): :
SyntaxKind[LineTerminatorToken](964,2): «line terminator»
SyntaxKind[IndentToken](964,2): «indent»
SyntaxKind[Identifier](964,19): BindingIdentifier
SyntaxKind[LineTerminatorToken](965,1): «line terminator»
SyntaxKind[DedentToken](965,1): «dedent»
SyntaxKind[LineTerminatorToken](966,1): «line terminator»
SyntaxKind[Identifier](966,18): ExportDeclaration
SyntaxKind[ColonToken](966,20): :
SyntaxKind[LineTerminatorToken](967,2): «line terminator»
SyntaxKind[IndentToken](967,2): «indent»
SyntaxKind[Terminal](967,10): `export`
SyntaxKind[Terminal](967,14): `*`
SyntaxKind[Identifier](967,25): FromClause
SyntaxKind[Terminal](967,29): `;`
SyntaxKind[LineTerminatorToken](968,2): «line terminator»
SyntaxKind[Terminal](968,10): `export`
SyntaxKind[Identifier](968,23): ExportClause
SyntaxKind[Identifier](968,34): FromClause
SyntaxKind[Terminal](968,38): `;`
SyntaxKind[LineTerminatorToken](969,2): «line terminator»
SyntaxKind[Terminal](969,10): `export`
SyntaxKind[Identifier](969,23): ExportClause
SyntaxKind[Terminal](969,27): `;`
SyntaxKind[LineTerminatorToken](970,2): «line terminator»
SyntaxKind[Terminal](970,10): `export`
SyntaxKind[Identifier](970,28): VariableStatement
SyntaxKind[LineTerminatorToken](971,2): «line terminator»
SyntaxKind[Terminal](971,10): `export`
SyntaxKind[Identifier](971,22): Declaration
SyntaxKind[LineTerminatorToken](972,2): «line terminator»
SyntaxKind[Terminal](972,10): `export`
SyntaxKind[Terminal](972,20): `default`
SyntaxKind[Identifier](972,41): HoistableDeclaration
SyntaxKind[OpenBracketToken](972,42): [
SyntaxKind[Identifier](972,49): Default
SyntaxKind[CloseBracketToken](972,50): ]
SyntaxKind[LineTerminatorToken](973,2): «line terminator»
SyntaxKind[Terminal](973,10): `export`
SyntaxKind[Terminal](973,20): `default`
SyntaxKind[Identifier](973,37): ClassDeclaration
SyntaxKind[OpenBracketToken](973,38): [
SyntaxKind[Identifier](973,45): Default
SyntaxKind[CloseBracketToken](973,46): ]
SyntaxKind[LineTerminatorToken](974,2): «line terminator»
SyntaxKind[Terminal](974,10): `export`
SyntaxKind[Terminal](974,20): `default`
SyntaxKind[OpenBracketToken](974,22): [
SyntaxKind[LookaheadKeyword](974,31): lookahead
SyntaxKind[LessThanExclamationToken](974,34): <!
SyntaxKind[OpenBraceToken](974,36): {
SyntaxKind[Terminal](974,47): `function`
SyntaxKind[CommaToken](974,48): ,
SyntaxKind[Terminal](974,56): `class`
SyntaxKind[CloseBraceToken](974,58): }
SyntaxKind[CloseBracketToken](974,59): ]
SyntaxKind[Identifier](974,80): AssignmentExpression
SyntaxKind[OpenBracketToken](974,81): [
SyntaxKind[Identifier](974,83): In
SyntaxKind[CloseBracketToken](974,84): ]
SyntaxKind[Terminal](974,88): `;`
SyntaxKind[LineTerminatorToken](975,1): «line terminator»
SyntaxKind[DedentToken](975,1): «dedent»
SyntaxKind[LineTerminatorToken](976,1): «line terminator»
SyntaxKind[Identifier](976,13): ExportClause
SyntaxKind[ColonToken](976,15): :
SyntaxKind[LineTerminatorToken](977,2): «line terminator»
SyntaxKind[IndentToken](977,2): «indent»
SyntaxKind[Terminal](977,5): `{`
SyntaxKind[Terminal](977,9): `}`
SyntaxKind[LineTerminatorToken](978,2): «line terminator»
SyntaxKind[Terminal](978,5): `{`
SyntaxKind[Identifier](978,17): ExportsList
SyntaxKind[Terminal](978,21): `}`
SyntaxKind[LineTerminatorToken](979,2): «line terminator»
SyntaxKind[Terminal](979,5): `{`
SyntaxKind[Identifier](979,17): ExportsList
SyntaxKind[Terminal](979,21): `,`
SyntaxKind[Terminal](979,25): `}`
SyntaxKind[LineTerminatorToken](980,1): «line terminator»
SyntaxKind[DedentToken](980,1): «dedent»
SyntaxKind[LineTerminatorToken](981,1): «line terminator»
SyntaxKind[Identifier](981,12): ExportsList
SyntaxKind[ColonToken](981,14): :
SyntaxKind[LineTerminatorToken](982,2): «line terminator»
SyntaxKind[IndentToken](982,2): «indent»
SyntaxKind[Identifier](982,17): ExportSpecifier
SyntaxKind[LineTerminatorToken](983,2): «line terminator»
SyntaxKind[Identifier](983,13): ExportsList
SyntaxKind[Terminal](983,17): `,`
SyntaxKind[Identifier](983,33): ExportSpecifier
SyntaxKind[LineTerminatorToken](984,1): «line terminator»
SyntaxKind[DedentToken](984,1): «dedent»
SyntaxKind[LineTerminatorToken](985,1): «line terminator»
SyntaxKind[Identifier](985,16): ExportSpecifier
SyntaxKind[ColonToken](985,18): :
SyntaxKind[LineTerminatorToken](986,2): «line terminator»
SyntaxKind[IndentToken](986,2): «indent»
SyntaxKind[Identifier](986,16): IdentifierName
SyntaxKind[LineTerminatorToken](987,2): «line terminator»
SyntaxKind[Identifier](987,16): IdentifierName
SyntaxKind[Terminal](987,21): `as`
SyntaxKind[Identifier](987,36): IdentifierName
SyntaxKind[LineTerminatorToken](988,1): «line terminator»
SyntaxKind[DedentToken](988,1): «dedent»
SyntaxKind[LineTerminatorToken](989,1): «line terminator»
SyntaxKind[Identifier](989,26): SingleLineHTMLOpenComment
SyntaxKind[ColonColonToken](989,29): ::
SyntaxKind[LineTerminatorToken](990,9): «line terminator»
SyntaxKind[IndentToken](990,9): «indent»
SyntaxKind[Terminal](990,15): `<!--`
SyntaxKind[Identifier](990,38): SingleLineCommentChars
SyntaxKind[QuestionToken](990,39): ?
SyntaxKind[LineTerminatorToken](991,1): «line terminator»
SyntaxKind[DedentToken](991,1): «dedent»
SyntaxKind[EndOfFileToken](991,1): «EndOfFileToken»
